{
  "version": 3,
  "sources": ["../../xtend/immutable.js", "../../fuzzy/lib/fuzzy.js", "../../suggestions-list/src/list.js", "../../suggestions-list/src/suggestions.js", "../../suggestions-list/index.js", "../../lodash.debounce/index.js", "../../@maplibre/maplibre-gl-geocoder/lib/exceptions.js", "../../@maplibre/maplibre-gl-geocoder/lib/localization.js", "../../subtag/subtag.js", "../../@maplibre/maplibre-gl-geocoder/lib/index.js", "../../debounce/index.js", "../../@mapbox/mapbox-gl-draw/src/lib/mode_handler.js", "../../@mapbox/mapbox-gl-draw/node_modules/wgs84/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-area/index.js", "../../@mapbox/mapbox-gl-draw/src/constants.js", "../../@mapbox/mapbox-gl-draw/src/lib/sort_features.js", "../../@mapbox/mapbox-gl-draw/src/lib/string_set.js", "../../@mapbox/mapbox-gl-draw/src/lib/features_at.js", "../../@mapbox/mapbox-gl-draw/src/lib/map_event_to_bounding_box.js", "../../@mapbox/mapbox-gl-draw/src/lib/get_features_and_set_cursor.js", "../../@mapbox/mapbox-gl-draw/src/lib/euclidean_distance.js", "../../@mapbox/mapbox-gl-draw/src/lib/is_click.js", "../../@mapbox/mapbox-gl-draw/src/lib/is_tap.js", "../../@mapbox/mapbox-gl-draw/node_modules/hat/index.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/feature.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/point.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/line_string.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/polygon.js", "../../@mapbox/mapbox-gl-draw/src/feature_types/multi_feature.js", "../../@mapbox/mapbox-gl-draw/src/modes/mode_interface_accessors.js", "../../@mapbox/mapbox-gl-draw/src/modes/mode_interface.js", "../../@mapbox/mapbox-gl-draw/src/modes/object_to_mode.js", "../../@mapbox/mapbox-gl-draw/src/lib/to_dense_array.js", "../../@mapbox/mapbox-gl-draw/src/render.js", "../../@mapbox/mapbox-gl-draw/src/store.js", "../../@mapbox/mapbox-gl-draw/node_modules/xtend/immutable.js", "../../@mapbox/mapbox-gl-draw/src/ui.js", "../../@mapbox/mapbox-gl-draw/src/setup.js", "../../@mapbox/mapbox-gl-draw/src/events.js", "../../@mapbox/mapbox-gl-draw/src/lib/common_selectors.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/point-geometry/index.js", "../../@mapbox/mapbox-gl-draw/src/lib/mouse_event_point.js", "../../@mapbox/mapbox-gl-draw/src/lib/create_vertex.js", "../../@mapbox/mapbox-gl-draw/src/lib/create_supplementary_points.js", "../../@mapbox/mapbox-gl-draw/src/lib/create_midpoint.js", "../../@mapbox/mapbox-gl-draw/src/lib/double_click_zoom.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-normalize/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/geojson-flatten/dist/index.es.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-coords/flatten.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-coords/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/traverse/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/extent/index.js", "../../@mapbox/mapbox-gl-draw/node_modules/@mapbox/geojson-extent/index.js", "../../@mapbox/mapbox-gl-draw/src/lib/constrain_feature_movement.js", "../../@mapbox/mapbox-gl-draw/src/lib/move_features.js", "../../@mapbox/mapbox-gl-draw/src/modes/simple_select.js", "../../@mapbox/mapbox-gl-draw/src/modes/direct_select.js", "../../@mapbox/mapbox-gl-draw/src/modes/draw_point.js", "../../@mapbox/mapbox-gl-draw/src/lib/is_event_at_coordinates.js", "../../@mapbox/mapbox-gl-draw/src/modes/draw_polygon.js", "../../@mapbox/mapbox-gl-draw/src/modes/draw_line_string.js", "../../@mapbox/mapbox-gl-draw/src/modes/index.js", "../../@mapbox/mapbox-gl-draw/src/options.js", "../../@mapbox/mapbox-gl-draw/src/lib/theme.js", "../../@mapbox/mapbox-gl-draw/node_modules/lodash.isequal/index.js", "../../@mapbox/mapbox-gl-draw/src/api.js", "../../@mapbox/mapbox-gl-draw/src/lib/string_sets_are_equal.js", "../../@mapbox/mapbox-gl-draw/index.js", "../../maplibre-gl-draw-circle/lib/utils/constants.js", "../../maplibre-gl-draw-circle/lib/utils/double_click_zoom.js", "../../@turf/helpers/dist/js/index.js", "../../@turf/invariant/dist/js/index.js", "../../@turf/destination/dist/js/index.js", "../../@turf/circle/dist/js/index.js", "../../maplibre-gl-draw-circle/lib/modes/CircleMode.js", "../../maplibre-gl-draw-circle/lib/utils/drag_pan.js", "../../@turf/distance/dist/js/index.js", "../../maplibre-gl-draw-circle/lib/modes/DragCircleMode.js", "../../maplibre-gl-draw-circle/lib/utils/create_vertex.js", "../../maplibre-gl-draw-circle/lib/utils/create_midpoint.js", "../../maplibre-gl-draw-circle/lib/utils/create_supplementary_points.js", "../../@mapbox/geojson-normalize/index.js", "../../geojson-flatten/index.js", "../../@mapbox/geojson-coords/flatten.js", "../../@mapbox/geojson-coords/index.js", "../../traverse/index.js", "../../@mapbox/extent/index.js", "../../@mapbox/geojson-extent/index.js", "../../maplibre-gl-draw-circle/lib/utils/constrain_feature_movement.js", "../../maplibre-gl-draw-circle/lib/utils/move_features.js", "../../maplibre-gl-draw-circle/lib/utils/create_supplementary_points_circle.js", "../../maplibre-gl-draw-circle/lib/modes/DirectModeOverride.js", "../../maplibre-gl-draw-circle/lib/modes/SimpleSelectModeOverride.js", "../../maplibre-gl-draw-circle/index.js", "../../maplibre-gl-js-amplify/lib/esm/AmplifyMapLibreRequest.js", "../../maplibre-gl-js-amplify/lib/esm/utils.js", "../../maplibre-gl-js-amplify/lib/esm/constants.js", "../../maplibre-gl-js-amplify/lib/esm/drawClusterLayer.js", "../../maplibre-gl-js-amplify/lib/esm/drawUnclusteredLayer.js", "../../maplibre-gl-js-amplify/lib/esm/createMarker.js", "../../maplibre-gl-js-amplify/lib/esm/popupRender.js", "../../maplibre-gl-js-amplify/lib/esm/drawPoints.js", "../../maplibre-gl-js-amplify/lib/esm/AmplifyMapLibreGeocoder.js", "../../maplibre-gl-js-amplify/lib/esm/createDefaultIcon.js", "../../@turf/bearing/dist/es/index.js", "../../@turf/destination/dist/es/index.js", "../../@turf/distance/dist/es/index.js", "../../@turf/along/dist/es/index.js", "../../@turf/circle/dist/es/index.js", "../../@turf/meta/dist/es/index.js", "../../@turf/length/dist/es/index.js", "../../maplibre-gl-js-amplify/lib/esm/geofenceUtils.js", "../../maplibre-gl-js-amplify/lib/esm/drawGeofences.js", "../../maplibre-gl-js-amplify/lib/esm/AmplifyGeofenceControl/index.js", "../../maplibre-gl-js-amplify/lib/esm/AmplifyGeofenceControl/ui.js", "../../maplibre-gl-js-amplify/lib/esm/AmplifyGeofenceControl/icons.js", "../../maplibre-gl-js-amplify/lib/esm/AmplifyGeofenceControl/AmplifyMapDraw.js"],
  "sourcesContent": ["module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n", "/*\n * Fuzzy\n * https://github.com/myork/fuzzy\n *\n * Copyright (c) 2012 Matt York\n * Licensed under the MIT license.\n */\n\n(function() {\n\nvar root = this;\n\nvar fuzzy = {};\n\n// Use in node or in browser\nif (typeof exports !== 'undefined') {\n  module.exports = fuzzy;\n} else {\n  root.fuzzy = fuzzy;\n}\n\n// Return all elements of `array` that have a fuzzy\n// match against `pattern`.\nfuzzy.simpleFilter = function(pattern, array) {\n  return array.filter(function(str) {\n    return fuzzy.test(pattern, str);\n  });\n};\n\n// Does `pattern` fuzzy match `str`?\nfuzzy.test = function(pattern, str) {\n  return fuzzy.match(pattern, str) !== null;\n};\n\n// If `pattern` matches `str`, wrap each matching character\n// in `opts.pre` and `opts.post`. If no match, return null\nfuzzy.match = function(pattern, str, opts) {\n  opts = opts || {};\n  var patternIdx = 0\n    , result = []\n    , len = str.length\n    , totalScore = 0\n    , currScore = 0\n    // prefix\n    , pre = opts.pre || ''\n    // suffix\n    , post = opts.post || ''\n    // String to compare against. This might be a lowercase version of the\n    // raw string\n    , compareString =  opts.caseSensitive && str || str.toLowerCase()\n    , ch;\n\n  pattern = opts.caseSensitive && pattern || pattern.toLowerCase();\n\n  // For each character in the string, either add it to the result\n  // or wrap in template if it's the next string in the pattern\n  for(var idx = 0; idx < len; idx++) {\n    ch = str[idx];\n    if(compareString[idx] === pattern[patternIdx]) {\n      ch = pre + ch + post;\n      patternIdx += 1;\n\n      // consecutive characters should increase the score more than linearly\n      currScore += 1 + currScore;\n    } else {\n      currScore = 0;\n    }\n    totalScore += currScore;\n    result[result.length] = ch;\n  }\n\n  // return rendered string if we have a match for every char\n  if(patternIdx === pattern.length) {\n    // if the string is an exact match with pattern, totalScore should be maxed\n    totalScore = (compareString === pattern) ? Infinity : totalScore;\n    return {rendered: result.join(''), score: totalScore};\n  }\n\n  return null;\n};\n\n// The normal entry point. Filters `arr` for matches against `pattern`.\n// It returns an array with matching values of the type:\n//\n//     [{\n//         string:   '<b>lah' // The rendered string\n//       , index:    2        // The index of the element in `arr`\n//       , original: 'blah'   // The original element in `arr`\n//     }]\n//\n// `opts` is an optional argument bag. Details:\n//\n//    opts = {\n//        // string to put before a matching character\n//        pre:     '<b>'\n//\n//        // string to put after matching character\n//      , post:    '</b>'\n//\n//        // Optional function. Input is an entry in the given arr`,\n//        // output should be the string to test `pattern` against.\n//        // In this example, if `arr = [{crying: 'koala'}]` we would return\n//        // 'koala'.\n//      , extract: function(arg) { return arg.crying; }\n//    }\nfuzzy.filter = function(pattern, arr, opts) {\n  if(!arr || arr.length === 0) {\n    return [];\n  }\n  if (typeof pattern !== 'string') {\n    return arr;\n  }\n  opts = opts || {};\n  return arr\n    .reduce(function(prev, element, idx, arr) {\n      var str = element;\n      if(opts.extract) {\n        str = opts.extract(element);\n      }\n      var rendered = fuzzy.match(pattern, str, opts);\n      if(rendered != null) {\n        prev[prev.length] = {\n            string: rendered.rendered\n          , score: rendered.score\n          , index: idx\n          , original: element\n        };\n      }\n      return prev;\n    }, [])\n\n    // Sort by score. Browsers are inconsistent wrt stable/unstable\n    // sorting, so force stable by using the index in the case of tie.\n    // See http://ofb.net/~sethml/is-sort-stable.html\n    .sort(function(a,b) {\n      var compare = b.score - a.score;\n      if(compare) return compare;\n      return a.index - b.index;\n    });\n};\n\n\n}());\n\n", "'use strict';\n\nvar List = function(component) {\n  this.component = component;\n  this.items = [];\n  this.active = component.options.noInitialSelection ? -1 : 0;\n  this.wrapper = document.createElement('div');\n  this.wrapper.className = 'suggestions-wrapper';\n  this.element = document.createElement('ul');\n  this.element.className = 'suggestions';\n  this.wrapper.appendChild(this.element);\n\n  // selectingListItem is set to true in the time between the mousedown and mouseup when clicking an item in the list\n  // mousedown on a list item will cause the input to blur which normally hides the list, so this flag is used to keep\n  // the list open until the mouseup\n  this.selectingListItem = false;\n\n  component.el.parentNode.insertBefore(this.wrapper, component.el.nextSibling);\n  return this;\n};\n\nList.prototype.show = function() {\n  this.element.style.display = 'block';\n};\n\nList.prototype.hide = function() {\n  this.element.style.display = 'none';\n};\n\nList.prototype.add = function(item) {\n  this.items.push(item);\n};\n\nList.prototype.clear = function() {\n  this.items = [];\n  this.active = this.component.options.noInitialSelection ? -1 : 0;\n};\n\nList.prototype.isEmpty = function() {\n  return !this.items.length;\n};\n\nList.prototype.isVisible = function() {\n  return this.element.style.display === 'block';\n};\n\nList.prototype.draw = function() {\n  this.element.innerHTML = '';\n\n  if (this.items.length === 0) {\n    this.hide();\n    return;\n  }\n\n  for (var i = 0; i < this.items.length; i++) {\n    this.drawItem(this.items[i], this.active === i);\n  }\n\n  this.show();\n};\n\nList.prototype.drawItem = function(item, active) {\n  var li = document.createElement('li'),\n    a = document.createElement('a');\n\n  if (active) li.className += ' active';\n\n  a.innerHTML = item.string;\n\n  li.appendChild(a);\n  this.element.appendChild(li);\n\n  li.addEventListener('mousedown', function() {\n    this.selectingListItem = true;\n  }.bind(this));\n\n  li.addEventListener('mouseup', function() {\n    this.handleMouseUp.call(this, item);\n  }.bind(this));\n};\n\nList.prototype.handleMouseUp = function(item) {\n  this.selectingListItem = false;\n  this.component.value(item.original);\n  this.clear();\n  this.draw();\n};\n\nList.prototype.move = function(index) {\n  this.active = index;\n  this.draw();\n};\n\nList.prototype.previous = function() {\n  this.move(this.active <= 0 ? this.items.length - 1 : this.active - 1);\n};\n\nList.prototype.next = function() {\n  this.move(this.active >= this.items.length - 1 ? 0 : this.active + 1);\n};\n\nList.prototype.drawError = function(msg){\n  var li = document.createElement('li');\n\n  li.innerHTML = msg;\n\n  this.element.appendChild(li);\n  this.show();\n}\n\nmodule.exports = List;\n", "'use strict';\n\nvar extend = require('xtend');\nvar fuzzy = require('fuzzy');\nvar List = require('./list');\n\nvar Suggestions = function(el, data, options) {\n  options = options || {};\n\n  this.options = extend({\n    minLength: 2,\n    limit: 5,\n    filter: true,\n    hideOnBlur: true,\n    noInitialSelection: true\n  }, options);\n\n  this.el = el;\n  this.data = data || [];\n  this.list = new List(this);\n\n  this.query = '';\n  this.selected = null;\n\n  this.list.draw();\n\n  this.el.addEventListener('keyup', function(e) {\n    this.handleKeyUp(e.keyCode, e);\n  }.bind(this), false);\n\n  this.el.addEventListener('keydown', function(e) {\n    this.handleKeyDown(e);\n  }.bind(this));\n\n  this.el.addEventListener('focus', function() {\n    this.handleFocus();\n  }.bind(this));\n\n  this.el.addEventListener('blur', function() {\n    this.handleBlur();\n  }.bind(this));\n\n  this.el.addEventListener('paste', function(e) {\n    this.handlePaste(e);\n  }.bind(this));\n\n  // use user-provided render function if given, otherwise just use the default\n  this.render = (this.options.render) ? this.options.render.bind(this) : this.render.bind(this)\n\n  this.getItemValue = (this.options.getItemValue) ? this.options.getItemValue.bind(this) : this.getItemValue.bind(this);\n\n  return this;\n};\n\nSuggestions.prototype.handleKeyUp = function(keyCode, e) {\n  // 40 - DOWN\n  // 38 - UP\n  // 27 - ESC\n  // 13 - ENTER\n  // 9 - TAB\n\n  if (keyCode === 40 ||\n      keyCode === 38 ||\n      keyCode === 27 ||\n      keyCode === 9) return;\n      \n  if (keyCode === 13) {\n    if (this.list.items[this.list.active]) {\n      this.list.handleMouseUp(this.list.items[this.list.active]);\n      e.stopPropagation();\n    }\n    return;\n  }\n  \n  this.handleInputChange(this.el.value);\n\n};\n\nSuggestions.prototype.handleKeyDown = function(e) {\n  switch (e.keyCode) {\n    case 13: // ENTER\n      if (this.list.active >= 0) {\n        this.list.selectingListItem = true;\n      }\n      break;\n    case 9: // TAB\n      if (!this.list.isEmpty()) {\n        if (this.list.isVisible()) {\n          e.preventDefault();\n        }\n        this.value(this.list.active >= 0 ? this.list.items[this.list.active].original : null);\n        this.list.hide();\n      }\n    break;\n    case 27: // ESC\n      if (!this.list.isEmpty()) this.list.hide();\n    break;\n    case 38: // UP\n      this.list.previous();\n    break;\n    case 40: // DOWN\n      this.list.next();\n    break;\n  }\n};\n\nSuggestions.prototype.handleBlur = function() {\n  if (!this.list.selectingListItem && this.options.hideOnBlur) {\n    this.list.hide();\n  }\n};\n\nSuggestions.prototype.handlePaste = function(e) {\n  if (e.clipboardData) {\n    this.handleInputChange(e.clipboardData.getData('Text'));\n  } else {\n    var self = this;\n    setTimeout(function () {\n      self.handleInputChange(e.target.value);\n    }, 100);\n  }\n};\n\nSuggestions.prototype.handleInputChange = function(query) {\n  this.query = this.normalize(query);\n\n  this.list.clear();\n\n  if (this.query.length < this.options.minLength) {\n    this.list.draw();\n    return;\n  }\n\n  this.getCandidates(function(data) {\n    for (var i = 0; i < data.length; i++) {\n      this.list.add(data[i]);\n      if (i === (this.options.limit - 1)) break;\n    }\n    this.list.draw();\n  }.bind(this));\n};\n\nSuggestions.prototype.handleFocus = function() {\n  if (!this.list.isEmpty()) this.list.show();\n  this.list.selectingListItem = false;\n};\n\n/**\n * Update data previously passed\n *\n * @param {Array} revisedData\n */\nSuggestions.prototype.update = function(revisedData) {\n  this.data = revisedData;\n  this.handleKeyUp();\n};\n\n/**\n * Clears data\n */\nSuggestions.prototype.clear = function() {\n  this.data = [];\n  this.list.clear();\n};\n\n/**\n * Normalize the results list and input value for matching\n *\n * @param {String} value\n * @return {String}\n */\nSuggestions.prototype.normalize = function(value) {\n  value = value.toLowerCase();\n  return value;\n};\n\n/**\n * Evaluates whether an array item qualifies as a match with the current query\n *\n * @param {String} candidate a possible item from the array passed\n * @param {String} query the current query\n * @return {Boolean}\n */\nSuggestions.prototype.match = function(candidate, query) {\n  return candidate.indexOf(query) > -1;\n};\n\nSuggestions.prototype.value = function(value) {\n  this.selected = value;\n  this.el.value = this.getItemValue(value || { place_name: this.query });\n\n  if (document.createEvent) {\n    var e = document.createEvent('HTMLEvents');\n    e.initEvent('change', true, false);\n    this.el.dispatchEvent(e);\n  } else {\n    this.el.fireEvent('onchange');\n  }\n};\n\nSuggestions.prototype.getCandidates = function(callback) {\n  var options = {\n    pre: '<strong>',\n    post: '</strong>',\n    extract: function(d) { return this.getItemValue(d); }.bind(this)\n  };\n  var results;\n  if(this.options.filter){\n    results = fuzzy.filter(this.query, this.data, options);\n\n    results = results.map(function(item){\n      return {\n        original: item.original,\n        string: this.render(item.original, item.string)\n      };\n    }.bind(this))\n  }else{\n    results = this.data.map(function(d) {\n      var renderedString = this.render(d);\n      return {\n        original: d,\n        string: renderedString\n      };\n    }.bind(this));\n  }\n  callback(results);\n};\n\n/**\n * For a given item in the data array, return what should be used as the candidate string\n *\n * @param {Object|String} item an item from the data array\n * @return {String} item\n */\nSuggestions.prototype.getItemValue = function(item) {\n  return item;\n};\n\n/**\n * For a given item in the data array, return a string of html that should be rendered in the dropdown\n * @param {Object|String} item an item from the data array\n * @param {String} sourceFormatting a string that has pre-formatted html that should be passed directly through the render function \n * @return {String} html\n */\nSuggestions.prototype.render = function(item, sourceFormatting) {\n  if (sourceFormatting){\n    // use existing formatting on the source string\n    return sourceFormatting;\n  }\n  var boldString = (item.original) ? this.getItemValue(item.original) : this.getItemValue(item);\n  var indexString = this.normalize(boldString);\n  var indexOfQuery = indexString.lastIndexOf(this.query);\n  while (indexOfQuery > -1) {\n    var endIndexOfQuery = indexOfQuery + this.query.length;\n    boldString = boldString.slice(0, indexOfQuery) + '<strong>' + boldString.slice(indexOfQuery, endIndexOfQuery) + '</strong>' + boldString.slice(endIndexOfQuery);\n    indexOfQuery = indexString.slice(0, indexOfQuery).lastIndexOf(this.query);\n  }\n  return boldString\n}\n\n/**\n * Render an custom error message in the suggestions list\n * @param {String} msg An html string to render as an error message\n */\nSuggestions.prototype.renderError = function(msg){\n  this.list.drawError(msg);\n}\n\nmodule.exports = Suggestions;\n", "'use strict';\n\n/**\n * A typeahead component for inputs\n * @class Suggestions\n *\n * @param {HTMLInputElement} el A valid HTML input element\n * @param {Array} data An array of data used for results\n * @param {Object} options\n * @param {Number} [options.limit=5] Max number of results to display in the auto suggest list.\n * @param {Number} [options.minLength=2] Number of characters typed into an input to trigger suggestions.\n * @param {Boolean} [options.hideOnBlur=true] If `true`, hides the suggestions when focus is lost.\n * @return {Suggestions} `this`\n * @example\n * // in the browser\n * var input = document.querySelector('input');\n * var data = [\n *   'Roy Eldridge',\n *   'Roy Hargrove',\n *   'Rex Stewart'\n * ];\n *\n * new Suggestions(input, data);\n *\n * // with options\n * var input = document.querySelector('input');\n * var data = [{\n *   name: 'Roy Eldridge',\n *   year: 1911\n * }, {\n *   name: 'Roy Hargrove',\n *   year: 1969\n * }, {\n *   name: 'Rex Stewart',\n *   year: 1907\n * }];\n *\n * var typeahead = new Suggestions(input, data, {\n *   filter: false, // Disable filtering\n *   minLength: 3, // Number of characters typed into an input to trigger suggestions.\n *   limit: 3, //  Max number of results to display.\n *   hideOnBlur: false // Don't hide results when input loses focus\n * });\n *\n * // As we're passing an object of an arrays as data, override\n * // `getItemValue` by specifying the specific property to search on.\n * typeahead.getItemValue = function(item) { return item.name };\n *\n * input.addEventListener('change', function() {\n *   console.log(typeahead.selected); // Current selected item.\n * });\n *\n * // With browserify\n * var Suggestions = require('suggestions');\n *\n * new Suggestions(input, data);\n */\nvar Suggestions = require('./src/suggestions');\nmodule.exports = Suggestions;\n\nif (typeof window !== 'undefined') {\n  window.Suggestions = Suggestions;\n}\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n", "module.exports = {\n  'fr': {\n    'name': 'France',\n    'bbox': [[-4.59235, 41.380007], [9.560016, 51.148506]]\n  },\n  'us': {\n    'name': 'United States',\n    'bbox': [[-171.791111, 18.91619], [-66.96466, 71.357764]]\n  },\n  'ru': {\n    'name': 'Russia',\n    'bbox': [[19.66064, 41.151416], [190.10042, 81.2504]]\n  },\n  'ca': {\n    'name': 'Canada',\n    'bbox': [[-140.99778, 41.675105], [-52.648099, 83.23324]]\n  }\n};\n", "'use strict';\n\n/**\n * Localized values for the placeholder string\n * \n * @private\n */\nvar placeholder = {\n  // list drawn from https://docs.mapbox.com/api/search/#language-coverage\n  'de': 'Suche', // german\n  'it': 'Ricerca', //italian\n  'en': 'Search', // english\n  'nl': 'Zoeken', //dutch\n  'fr': 'Chercher',  //french\n  'ca': 'Cerca', //catalan\n  'he': '\u05DC\u05D7\u05E4\u05E9', //hebrew\n  'ja': '\u30B5\u30FC\u30C1',  //japanese\n  'lv': 'Mekl\u0113t', //latvian\n  'pt': 'Procurar', //portuguese \n  'sr': '\u041F\u0440\u0435\u0442\u0440\u0430\u0433\u0430', //serbian\n  'zh': '\u641C\u7D22', //chinese-simplified\n  'cs': 'Vyhled\u00E1v\u00E1n\u00ED', //czech\n  'hu': 'Keres\u00E9s', //hungarian\n  'ka': '\u10EB\u10D8\u10D4\u10D1\u10D0', // georgian\n  'nb': 'S\u00F8ke', //norwegian\n  'sk': 'Vyh\u013Ead\u00E1vanie', //slovak\n  'th': '\u0E04\u0E49\u0E19\u0E2B\u0E32', //thai\n  'fi': 'Hae',//finnish\n  'is': 'Leita',//icelandic\n  'ko': '\uC218\uC0C9',//korean\n  'pl':  'Szukaj', //polish\n  'sl': 'Iskanje', //slovenian\n  'fa': '\u062C\u0633\u062A\u062C\u0648',  //persian(aka farsi)\n  'ru': '\u041F\u043E\u0438\u0441\u043A'//russian\n}\n\nmodule.exports = {placeholder: placeholder};\n", "!function(root, name, make) {\r\n  if (typeof module != 'undefined' && module.exports) module.exports = make()\r\n  else root[name] = make()\r\n}(this, 'subtag', function() {\r\n\r\n  var empty = ''\r\n  var pattern = /^([a-zA-Z]{2,3})(?:[_-]+([a-zA-Z]{3})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{4})(?=$|[_-]+))?(?:[_-]+([a-zA-Z]{2}|[0-9]{3})(?=$|[_-]+))?/\r\n\r\n  function match(tag) {\r\n    return tag.match(pattern) || []\r\n  }\r\n\r\n  function split(tag) {\r\n    return match(tag).filter(function(v, i) { return v && i })\r\n  }\r\n\r\n  function api(tag) {\r\n    tag = match(tag)\r\n    return {\r\n      language: tag[1] || empty,\r\n      extlang: tag[2] || empty,\r\n      script: tag[3] || empty,\r\n      region: tag[4] || empty\r\n    }\r\n  }\r\n\r\n  function expose(target, key, value) {\r\n    Object.defineProperty(target, key, {\r\n      value: value,\r\n      enumerable: true\r\n    })\r\n  }\r\n\r\n  function part(position, pattern, type) {\r\n    function method(tag) {\r\n      return match(tag)[position] || empty\r\n    }\r\n    expose(method, 'pattern', pattern)\r\n    expose(api, type, method)\r\n  }\r\n\r\n  part(1, /^[a-zA-Z]{2,3}$/, 'language')\r\n  part(2, /^[a-zA-Z]{3}$/, 'extlang')\r\n  part(3, /^[a-zA-Z]{4}$/, 'script')\r\n  part(4, /^[a-zA-Z]{2}$|^[0-9]{3}$/, 'region')\r\n\r\n  expose(api, 'split', split)\r\n\r\n  return api\r\n});\r\n", "\"use strict\";\n\nvar Typeahead = require(\"suggestions-list\");\nvar debounce = require(\"lodash.debounce\");\nvar extend = require(\"xtend\");\nvar EventEmitter = require(\"events\").EventEmitter;\nvar exceptions = require(\"./exceptions\");\nvar localization = require(\"./localization\");\nvar subtag = require(\"subtag\");\n\n/**\n * A geocoder component that works with maplibre\n * @class MaplibreGeocoder\n * @param {Object} geocoderApi Any geocoder api that supports the functions reverseGeocode and forwardGeocode and returns a response which includes a FeatureCollection of results\n * @param {Object} options\n * @param {Object} [options.maplibregl] A [maplibre-gl](https://github.com/maplibre/maplibre-gl-js) instance to use when creating [Markers](https://maplibre.org/maplibre-gl-js-docs/api/markers/#marker). Required if `options.marker` is `true`.\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n * @param {Boolean|Object} [options.flyTo=true] If `false`, animating the map to a selected result is disabled. If `true`, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://maplibre.org/maplibre-gl-js-docs/api/map/#map#flyto) or [`fitBounds`](https://maplibre.org/maplibre-gl-js-docs/api/map/#map#fitbounds) method providing control over the animation of the transition.\n * @param {String} [options.placeholder=Search] Override the default placeholder attribute value.\n * @param {Object} [options.proximity] a proximity argument: this is\n * a geographical point given as an object with `latitude` and `longitude`\n * properties. Search results closer to this point will be given\n * higher priority.\n * @param {Boolean} [options.trackProximity=true] If `true`, the geocoder proximity will automatically update based on the map view.\n * @param {Boolean} [options.collapsed=false] If `true`, the geocoder control will collapse until hovered or in focus.\n * @param {Boolean} [options.clearAndBlurOnEsc=false] If `true`, the geocoder control will clear it's contents and blur when user presses the escape key.\n * @param {Boolean} [options.clearOnBlur=false] If `true`, the geocoder control will clear its value when the input blurs.\n * @param {Array} [options.bbox] a bounding box argument: this is\n * a bounding box given as an array in the format `[minX, minY, maxX, maxY]`.\n * Search results will be limited to the bounding box.\n * @param {string} [options.countries] a comma separated list of country codes to\n * limit results to specified country or countries.\n * @param {string} [options.types] a comma seperated list of types that filter\n * results to match those specified. See https://docs.mapbox.com/api/search/#data-types\n * for available types.\n * If reverseGeocode is enabled, you should specify one type. If you configure more than one type, the first type will be used.\n * @param {Number} [options.minLength=2] Minimum number of characters to enter before results are shown.\n * @param {Number} [options.limit=5] Maximum number of results to show.\n * @param {string} [options.language] Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n * @param {Function} [options.filter] A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n * @param {Function} [options.localGeocoder] A function accepting the query string which performs local geocoding to supplement results from the Maplibre Geocoding API. Expected to return an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {Function} [options.externalGeocoder] A function accepting the query string, current features list, and geocoder options which performs geocoding to supplement results from the Maplibre Geocoding API. Expected to return a Promise which resolves to an Array of GeoJSON Features in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format.\n * @param {distance|score} [options.reverseMode=distance] - Set the factors that are used to sort nearby results.\n * @param {boolean} [options.reverseGeocode=false] If `true`, enable reverse geocoding mode. In reverse geocoding, search input is expected to be coordinates in the form `lat, lon`, with suggestions being the reverse geocodes.\n * @param {Boolean} [options.enableEventLogging=true] Allow Maplibre to collect anonymous usage statistics from the plugin.\n * @param {Boolean|Object} [options.marker=true]  If `true`, a [Marker](https://maplibre.org/maplibre-gl-js-docs/api/markers/#marker) will be added to the map at the location of the user-selected result using a default set of Marker options.  If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.maplibregl` also be set.\n * @param {Boolean|Object} [options.popup=true]  If `true`, a [Popup](https://maplibre.org/maplibre-gl-js-docs/api/markers/#popup) will be added to the map when clicking on a marker using a default set of popup options.  If the value is an object, the popup will be constructed using these options. If `false`, no popup will be added to the map. Requires that `options.maplibregl` also be set.\n * @param {Boolean|Object} [options.showResultMarkers=true]  If `true`, [Markers](https://maplibre.org/maplibre-gl-js-docs/api/markers/#marker) will be added to the map at the location the top results for the query.   If the value is an object, the marker will be constructed using these options. If `false`, no marker will be added to the map. Requires that `options.maplibregl` also be set.\n * @param {Function} [options.render] A function that specifies how the results should be rendered in the dropdown menu. This function should accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.\n * @param {Function} [options.popupRender] A function that specifies how the results should be rendered in the popup menu. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. Any HTML in the returned string will be rendered.\n * @param {Function} [options.getItemValue] A function that specifies how the selected result should be rendered in the search bar. This function should accept a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and return a string. HTML tags in the output string will not be rendered. Defaults to `(item) => item.place_name`.\n * @param {Boolean} [options.localGeocoderOnly=false] If `true`, indicates that the `localGeocoder` results should be the only ones returned to the user. If `false`, indicates that the `localGeocoder` results should be combined with those from the Maplibre API with the `localGeocoder` results ranked higher.\n * @param {Boolean} [options.showResultsWhileTyping=false] If `false`, indicates that search will only occur on enter key press. If `true`, indicates that the Geocoder will search on the input box being updated above the minLength option.\n * @param {Number} [options.debounceSearch=200] Sets the amount of time, in milliseconds, to wait before querying the server when a user types into the Geocoder input box. This parameter may be useful for reducing the total number of API calls made for a single query.\n * @example\n *\n * var GeoApi = {\n *   forwardGeocode: (config) => { return { features: [] } },\n *   reverseGeocode: (config) => { return { features: [] } }\n *   getSuggestions: (config) => { return { suggestions: string[] }}\n *   getByPlaceId: (config) => { return { suggestions: {text: string, placeId?: string}[] }}\n * }\n * var geocoder = new MaplibreGeocoder(GeoApi, {});\n * map.addControl(geocoder);\n * @return {MaplibreGeocoder} `this`\n *\n */\n\nfunction MaplibreGeocoder(geocoderApi, options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n  this.inputString = \"\";\n  this.fresh = true;\n  this.lastSelected = null;\n  this.geocoderApi = geocoderApi;\n}\n\nMaplibreGeocoder.prototype = {\n  options: {\n    zoom: 16,\n    flyTo: true,\n    trackProximity: true,\n    showResultsWhileTyping: false,\n    minLength: 2,\n    reverseGeocode: false,\n    limit: 5,\n    enableEventLogging: true,\n    marker: true,\n    popup: false,\n    maplibregl: null,\n    collapsed: false,\n    clearAndBlurOnEsc: false,\n    clearOnBlur: false,\n    getItemValue: function (item) {\n      return item.text !== undefined ? item.text : item.place_name;\n    },\n    render: function (item) {\n      // Render as a suggestion\n      if (!item.geometry) {\n        var suggestionString = item.text;\n        var indexOfMatch = suggestionString\n          .toLowerCase()\n          .indexOf(this.query.toLowerCase());\n        var lengthOfMatch = this.query.length;\n        var beforeMatch = suggestionString.substring(0, indexOfMatch);\n        var match = suggestionString.substring(\n          indexOfMatch,\n          indexOfMatch + lengthOfMatch\n        );\n        var afterMatch = suggestionString.substring(\n          indexOfMatch + lengthOfMatch\n        );\n\n        return (\n          '<div class=\"mapboxgl-ctrl-geocoder--suggestion maplibregl-ctrl-geocoder--suggestion\">' +\n          '<svg class=\"mapboxgl-ctrl-geocoder--suggestion-icon maplibre-ctrl-geocoder--suggestion-icon\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M22.8702 20.1258H21.4248L20.9125 19.6318C22.7055 17.546 23.785 14.8382 23.785 11.8925C23.785 5.32419 18.4608 0 11.8925 0C5.32419 0 0 5.32419 0 11.8925C0 18.4608 5.32419 23.785 11.8925 23.785C14.8382 23.785 17.546 22.7055 19.6318 20.9125L20.1258 21.4248V22.8702L29.2739 32L32 29.2739L22.8702 20.1258ZM11.8925 20.1258C7.33676 20.1258 3.65923 16.4483 3.65923 11.8925C3.65923 7.33676 7.33676 3.65923 11.8925 3.65923C16.4483 3.65923 20.1258 7.33676 20.1258 11.8925C20.1258 16.4483 16.4483 20.1258 11.8925 20.1258Z\" fill=\"#687078\"/></svg>' +\n          '<div class=\"mapboxgl-ctrl-geocoder--suggestion-info maplibregl-ctrl-geocoder--suggestion-info\">' +\n          '<div class=\"mapboxgl-ctrl-geocoder--suggestion-title maplibregl-ctrl-geocoder--suggestion-title\">' +\n          beforeMatch +\n          '<span class=\"mapboxgl-ctrl-geocoder--suggestion-match maplibregl-ctrl-geocoder--suggestion-match\">' +\n          match +\n          \"</span>\" +\n          afterMatch +\n          \"</div>\" +\n          \"</div>\" +\n          \"</div>\"\n        );\n      } else {\n        // render as a search result\n        var placeName = item.place_name.split(\",\");\n\n        return (\n          '<div class=\"mapboxgl-ctrl-geocoder--result maplibregl-ctrl-geocoder--result\">' +\n          '<svg class=\"mapboxgl-ctrl-geocoder--result-icon maplibre-ctrl-geocoder--result-icon\" viewBox=\"0 0 24 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 0C5.36571 0 0 5.38676 0 12.0471C0 21.0824 12 32 12 32C12 32 24 21.0824 24 12.0471C24 5.38676 18.6343 0 12 0ZM12 16.3496C9.63428 16.3496 7.71429 14.4221 7.71429 12.0471C7.71429 9.67207 9.63428 7.74454 12 7.74454C14.3657 7.74454 16.2857 9.67207 16.2857 12.0471C16.2857 14.4221 14.3657 16.3496 12 16.3496Z\" fill=\"#687078\"/></svg>' +\n          \"<div>\" +\n          '<div class=\"mapboxgl-ctrl-geocoder--result-title maplibregl-ctrl-geocoder--result-title\">' +\n          placeName[0] +\n          \"</div>\" +\n          '<div class=\"mapboxgl-ctrl-geocoder--result-address maplibregl-ctrl-geocoder--result-address\">' +\n          placeName.splice(1, placeName.length).join(\",\") +\n          \"</div>\" +\n          \"</div>\" +\n          \"</div>\"\n        );\n      }\n    },\n    popupRender: function (item) {\n      var placeName = item.place_name.split(\",\");\n      return (\n        '<div class=\"mapboxgl-ctrl-geocoder--suggestion maplibre-ctrl-geocoder--suggestion popup-suggestion\"><div class=\"mapboxgl-ctrl-geocoder--suggestion-title maplibre-ctrl-geocoder--suggestion-title popup-suggestion-title\">' +\n        placeName[0] +\n        '</div><div class=\"mapboxgl-ctrl-geocoder--suggestion-address maplibre-ctrl-geocoder--suggestion-address popup-suggestion-address\">' +\n        placeName.splice(1, placeName.length).join(\",\") +\n        \"</div></div>\"\n      );\n    },\n    showResultMarkers: true,\n    debounceSearch: 200,\n  },\n\n  /**\n   * Add the geocoder to a container. The container can be either a `maplibregl.Map`, an `HTMLElement` or a CSS selector string.\n   *\n   * If the container is a [`maplibregl.Map`](https://maplibre.org/maplibre-gl-js-docs/api/map/#map), this function will behave identically to [`Map.addControl(geocoder)`](https://maplibre.org/maplibre-gl-js-docs/api/map/#map#addcontrol).\n   * If the container is an instance of [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement), then the geocoder will be appended as a child of that [`HTMLElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement).\n   * If the container is a [CSS selector string](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors), the geocoder will be appended to the element returned from the query.\n   *\n   * This function will throw an error if the container is none of the above.\n   * It will also throw an error if the referenced HTML element cannot be found in the `document.body`.\n   *\n   * For example, if the HTML body contains the element `<div id='geocoder-container'></div>`, the following script will append the geocoder to `#geocoder-container`:\n   *\n   * ```javascript\n   * var GeoApi = {\n   *   forwardGeocode: (config) => { return { features: [] } },\n   *   reverseGeocode: (config) => { return { features: [] } }\n   * }\n   * var geocoder = new MaplibreGeocoder(GeoAPI, {});\n   * geocoder.addTo('#geocoder-container');\n   * ```\n   * @param {String|HTMLElement|maplibregl.Map} container A reference to the container to which to add the geocoder\n   */\n  addTo: function (container) {\n    function addToExistingContainer(geocoder, container) {\n      if (!document.body.contains(container)) {\n        throw new Error(\n          \"Element provided to #addTo() exists, but is not in the DOM\"\n        );\n      }\n      var el = geocoder.onAdd(); //returns the input elements, which are then added to the requested html container\n      container.appendChild(el);\n    }\n\n    // if the container is a map, add the control like normal\n    if (container._controlContainer) {\n      //  it's a maplibre-gl map, add like normal\n      container.addControl(this);\n    }\n    // if the container is an HTMLElement, then set the parent to be that element\n    else if (container instanceof HTMLElement) {\n      addToExistingContainer(this, container);\n    }\n    // if the container is a string, treat it as a CSS query\n    else if (typeof container == \"string\") {\n      var parent = document.querySelectorAll(container);\n      if (parent.length === 0) {\n        throw new Error(\"Element \", container, \"not found.\");\n      }\n\n      if (parent.length > 1) {\n        throw new Error(\"Geocoder can only be added to a single html element\");\n      }\n\n      addToExistingContainer(this, parent[0]);\n    } else {\n      throw new Error(\n        \"Error: addTo must be a maplibre-gl-js map, an html element, or a CSS selector query for a single html element\"\n      );\n    }\n  },\n\n  onAdd: function (map) {\n    if (map && typeof map != \"string\") {\n      this._map = map;\n    }\n\n    this.setLanguage();\n\n    if (this.options.localGeocoderOnly && !this.options.localGeocoder) {\n      throw new Error(\n        \"A localGeocoder function must be specified to use localGeocoderOnly mode\"\n      );\n    }\n\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onPaste = this._onPaste.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._showButton = this._showButton.bind(this);\n    this._hideButton = this._hideButton.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this.clear = this.clear.bind(this);\n    this._updateProximity = this._updateProximity.bind(this);\n    this._collapse = this._collapse.bind(this);\n    this._unCollapse = this._unCollapse.bind(this);\n    this._clear = this._clear.bind(this);\n    this._clearOnBlur = this._clearOnBlur.bind(this);\n\n    var el = (this.container = document.createElement(\"div\"));\n    el.className =\n      \"mapboxgl-ctrl-geocoder mapboxgl-ctrl maplibregl-ctrl-geocoder maplibregl-ctrl\";\n\n    var searchIcon = this.createIcon(\n      \"search\",\n      '<path d=\"M7.4 2.5c-2.7 0-4.9 2.2-4.9 4.9s2.2 4.9 4.9 4.9c1 0 1.8-.2 2.5-.8l3.7 3.7c.2.2.4.3.8.3.7 0 1.1-.4 1.1-1.1 0-.3-.1-.5-.3-.8L11.4 10c.4-.8.8-1.6.8-2.5.1-2.8-2.1-5-4.8-5zm0 1.6c1.8 0 3.2 1.4 3.2 3.2s-1.4 3.2-3.2 3.2-3.3-1.3-3.3-3.1 1.4-3.3 3.3-3.3z\"/>'\n    );\n\n    this._inputEl = document.createElement(\"input\");\n    this._inputEl.type = \"text\";\n    this._inputEl.className =\n      \"mapboxgl-ctrl-geocoder--input maplibregl-ctrl-geocoder--input\";\n\n    this.setPlaceholder();\n\n    if (this.options.collapsed) {\n      this._collapse();\n      this.container.addEventListener(\"mouseenter\", this._unCollapse);\n      this.container.addEventListener(\"mouseleave\", this._collapse);\n      this._inputEl.addEventListener(\"focus\", this._unCollapse);\n    }\n\n    if (this.options.collapsed || this.options.clearOnBlur) {\n      this._inputEl.addEventListener(\"blur\", this._onBlur);\n    }\n\n    this._inputEl.addEventListener(\n      \"keydown\",\n      debounce(this._onKeyDown, this.options.debounceSearch)\n    );\n    this._inputEl.addEventListener(\"paste\", this._onPaste);\n    this._inputEl.addEventListener(\"change\", this._onChange);\n    this.container.addEventListener(\"mouseenter\", this._showButton);\n    this.container.addEventListener(\"mouseleave\", this._hideButton);\n\n    var actions = document.createElement(\"div\");\n    actions.classList.add(\n      \"mapboxgl-ctrl-geocoder--pin-right\",\n      \"maplibregl-ctrl-geocoder--pin-right\"\n    );\n\n    this._clearEl = document.createElement(\"button\");\n    this._clearEl.setAttribute(\"aria-label\", \"Clear\");\n    this._clearEl.addEventListener(\"click\", this.clear);\n    this._clearEl.className =\n      \"mapboxgl-ctrl-geocoder--button maplibregl-ctrl-geocoder--button\";\n\n    var buttonIcon = this.createIcon(\n      \"close\",\n      '<path d=\"M3.8 2.5c-.6 0-1.3.7-1.3 1.3 0 .3.2.7.5.8L7.2 9 3 13.2c-.3.3-.5.7-.5 1 0 .6.7 1.3 1.3 1.3.3 0 .7-.2 1-.5L9 10.8l4.2 4.2c.2.3.7.3 1 .3.6 0 1.3-.7 1.3-1.3 0-.3-.2-.7-.3-1l-4.4-4L15 4.6c.3-.2.5-.5.5-.8 0-.7-.7-1.3-1.3-1.3-.3 0-.7.2-1 .3L9 7.1 4.8 2.8c-.3-.1-.7-.3-1-.3z\"/>'\n    );\n    this._clearEl.appendChild(buttonIcon);\n\n    this._loadingEl = this.createIcon(\n      \"loading\",\n      '<path fill=\"#333\" d=\"M4.4 4.4l.8.8c2.1-2.1 5.5-2.1 7.6 0l.8-.8c-2.5-2.5-6.7-2.5-9.2 0z\"/><path opacity=\".1\" d=\"M12.8 12.9c-2.1 2.1-5.5 2.1-7.6 0-2.1-2.1-2.1-5.5 0-7.7l-.8-.8c-2.5 2.5-2.5 6.7 0 9.2s6.6 2.5 9.2 0 2.5-6.6 0-9.2l-.8.8c2.2 2.1 2.2 5.6 0 7.7z\"/>'\n    );\n\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n\n    el.appendChild(searchIcon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n\n    this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false,\n      minLength: this.options.minLength,\n      limit: this.options.limit,\n      noInitialSelection: true,\n    });\n\n    this.setRenderFunction(this.options.render);\n    this._typeahead.getItemValue = this.options.getItemValue;\n\n    this.mapMarker = null;\n    this.resultMarkers = [];\n    this._handleMarker = this._handleMarker.bind(this);\n    this._handleResultMarkers = this._handleResultMarkers.bind(this);\n    if (this._map) {\n      if (this.options.trackProximity) {\n        this._updateProximity();\n        this._map.on(\"moveend\", this._updateProximity);\n      }\n      this._maplibregl = this.options.maplibregl;\n      if (!this._maplibregl && this.options.marker) {\n        // eslint-disable-next-line no-console\n        console.error(\n          \"No maplibregl detected in options. Map markers are disabled. Please set options.maplibregl.\"\n        );\n        this.options.marker = false;\n      }\n    }\n    return el;\n  },\n\n  createIcon: function (name, path) {\n    var icon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    icon.setAttribute(\n      \"class\",\n      \"mapboxgl-ctrl-geocoder--icon mapboxgl-ctrl-geocoder--icon-\" +\n        name +\n        \" maplibregl-ctrl-geocoder--icon maplibregl-ctrl-geocoder--icon-\" +\n        name\n    );\n    icon.setAttribute(\"viewBox\", \"0 0 18 18\");\n    icon.setAttribute(\"xml:space\", \"preserve\");\n    icon.setAttribute(\"width\", 18);\n    icon.setAttribute(\"height\", 18);\n    // IE does not have innerHTML for SVG nodes\n    if (!(\"innerHTML\" in icon)) {\n      var SVGNodeContainer = document.createElement(\"div\");\n      SVGNodeContainer.innerHTML =\n        \"<svg>\" + path.valueOf().toString() + \"</svg>\";\n      var SVGNode = SVGNodeContainer.firstChild,\n        SVGPath = SVGNode.firstChild;\n      icon.appendChild(SVGPath);\n    } else {\n      icon.innerHTML = path;\n    }\n    return icon;\n  },\n\n  onRemove: function () {\n    this.container.parentNode.removeChild(this.container);\n\n    if (this.options.trackProximity && this._map) {\n      this._map.off(\"moveend\", this._updateProximity);\n    }\n\n    this._removeMarker();\n\n    this._map = null;\n\n    return this;\n  },\n\n  _onPaste: function (e) {\n    var value = (e.clipboardData || window.clipboardData).getData(\"text\");\n    if (\n      value.length >= this.options.minLength &&\n      this.options.showResultsWhileTyping\n    ) {\n      this._geocode(value);\n    }\n  },\n\n  _onKeyDown: function (e) {\n    var ESC_KEY_CODE = 27,\n      TAB_KEY_CODE = 9;\n\n    if (e.keyCode === ESC_KEY_CODE && this.options.clearAndBlurOnEsc) {\n      this._clear(e);\n      return this._inputEl.blur();\n    }\n\n    // if target has shadowRoot, then get the actual active element inside the shadowRoot\n    var target =\n      e.target && e.target.shadowRoot\n        ? e.target.shadowRoot.activeElement\n        : e.target;\n    var value = target ? target.value : \"\";\n\n    if (!value) {\n      this.fresh = true;\n      // the user has removed all the text\n      if (e.keyCode !== TAB_KEY_CODE) this.clear(e);\n      return (this._clearEl.style.display = \"none\");\n    }\n\n    // TAB, ESC, LEFT, RIGHT, UP, DOWN\n    if (\n      e.metaKey ||\n      [TAB_KEY_CODE, ESC_KEY_CODE, 37, 39, 38, 40].indexOf(e.keyCode) !== -1\n    )\n      return;\n\n    // ENTER\n    if (e.keyCode === 13) {\n      if (!this.options.showResultsWhileTyping) {\n        if (!this._typeahead.selected) {\n          this._geocode(target.value);\n        }\n      } else {\n        // Pressing enter on the search box will do a search for the currently string input\n        if (\n          this._typeahead.selected == null &&\n          this.geocoderApi.getSuggestions\n        ) {\n          this._geocode(target.value, true);\n\n          // If suggestions API is not defined pressing enter while the input box is selected will try to fit the results into the current map view\n        } else if (this._typeahead.selected == null) {\n          if (this.options.showResultMarkers) {\n            this._fitBoundsForMarkers();\n          }\n        }\n        return;\n      }\n    }\n\n    // Show results while typing and greater than min length\n    if (\n      target.value.length >= this.options.minLength &&\n      this.options.showResultsWhileTyping\n    ) {\n      this._geocode(target.value);\n    }\n  },\n\n  _showButton: function () {\n    if (this._inputEl.value.length > 0) this._clearEl.style.display = \"block\";\n  },\n\n  _hideButton: function () {\n    if (this._typeahead.selected) this._clearEl.style.display = \"none\";\n  },\n\n  _onBlur: function (e) {\n    if (this.options.clearOnBlur) {\n      this._clearOnBlur(e);\n    }\n    if (this.options.collapsed) {\n      this._collapse();\n    }\n  },\n  // Change events are fire by suggestions library whenever the enter key is pressed or input is blurred\n  // This can sometimes cause strange behavior as this function is called before our own onKeyDown handler and thus\n  //  we cannot depend on some internal values of the suggestion state like `selected` as those will change or before\n  //  our onKeyDown handler.\n  _onChange: function () {\n    var selected = this._typeahead.selected;\n\n    // If a suggestion was selected\n    if (selected && !selected.geometry) {\n      if (selected.placeId) this._geocode(selected.placeId, true, true);\n      else this._geocode(selected.text, true);\n    } else if (selected && JSON.stringify(selected) !== this.lastSelected) {\n      this._clearEl.style.display = \"none\";\n      if (this.options.flyTo) {\n        var flyOptions;\n        this._removeResultMarkers();\n        if (selected.properties && exceptions[selected.properties.short_code]) {\n          // Certain geocoder search results return (and therefore zoom to fit)\n          // an unexpectedly large bounding box: for example, both Russia and the\n          // USA span both sides of -180/180, or France includes the island of\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n          // short-term solution; this may be amended as necessary.\n          flyOptions = extend({}, this.options.flyTo);\n          if (this._map) {\n            this._map.fitBounds(\n              exceptions[selected.properties.short_code].bbox,\n              flyOptions\n            );\n          }\n        } else if (selected.bbox) {\n          var bbox = selected.bbox;\n          flyOptions = extend({}, this.options.flyTo);\n          if (this._map) {\n            this._map.fitBounds(\n              [\n                [bbox[0], bbox[1]],\n                [bbox[2], bbox[3]],\n              ],\n              flyOptions\n            );\n          }\n        } else {\n          var defaultFlyOptions = {\n            zoom: this.options.zoom,\n          };\n          flyOptions = extend({}, defaultFlyOptions, this.options.flyTo);\n          //  ensure that center is not overriden by custom options\n          if (selected.center) {\n            flyOptions.center = selected.center;\n          } else if (\n            selected.geometry &&\n            selected.geometry.type &&\n            selected.geometry.type === \"Point\" &&\n            selected.geometry.coordinates\n          ) {\n            flyOptions.center = selected.geometry.coordinates;\n          }\n\n          if (this._map) {\n            this._map.flyTo(flyOptions);\n          }\n        }\n      }\n      if (this.options.marker && this._maplibregl) {\n        this._handleMarker(selected);\n      }\n\n      // After selecting a feature, re-focus the textarea and set\n      // cursor at start, and reset the selected feature.\n      this._inputEl.focus();\n      this._inputEl.scrollLeft = 0;\n      this._inputEl.setSelectionRange(0, 0);\n      this.lastSelected = JSON.stringify(selected);\n      this._typeahead.selected = null; // reset selection current selection value and set it to last selected\n      this._eventEmitter.emit(\"result\", { result: selected });\n    }\n  },\n\n  _getConfigForRequest: function () {\n    // Possible config proprerties to pass to client\n    var keys = [\n      \"bbox\",\n      \"limit\",\n      \"proximity\",\n      \"countries\",\n      \"types\",\n      \"language\",\n      \"reverseMode\",\n    ];\n    var self = this;\n    // Create config object\n    var config = keys.reduce(function (config, key) {\n      if (self.options[key]) {\n        // countries, types, and language need to be passed in as arrays to client\n        // https://github.com/mapbox/mapbox-sdk-js/blob/master/services/geocoding.js#L38-L47\n        [\"countries\", \"types\", \"language\"].indexOf(key) > -1\n          ? (config[key] = self.options[key].split(/[\\s,]+/))\n          : (config[key] = self.options[key]);\n\n        if (\n          key === \"proximity\" &&\n          self.options[key] &&\n          typeof self.options[key].longitude === \"number\" &&\n          typeof self.options[key].latitude === \"number\"\n        ) {\n          config[key] = [\n            self.options[key].longitude,\n            self.options[key].latitude,\n          ];\n        }\n      }\n      return config;\n    }, {});\n\n    return config;\n  },\n\n  _geocode: function (searchInput, isSuggestion, isPlaceId) {\n    this._loadingEl.style.display = \"block\";\n    this._eventEmitter.emit(\"loading\", { query: searchInput });\n    this.inputString = searchInput;\n    var geocoderError = null;\n\n    // Create config object\n    var config = this._getConfigForRequest();\n\n    var request;\n    if (this.options.localGeocoderOnly) {\n      request = Promise.resolve();\n    }\n    // check if searchInput resembles coordinates, and if it does,\n    // make the request a reverseGeocode\n    else if (\n      this.options.reverseGeocode &&\n      /(-?\\d+\\.?\\d*)[, ]+(-?\\d+\\.?\\d*)[ ]*$/.test(searchInput)\n    ) {\n      // parse coordinates\n      var coords = searchInput\n        .split(/[\\s(,)?]+/)\n        .map(function (c) {\n          return parseFloat(c, 10);\n        })\n        .reverse();\n\n      // client only accepts one type for reverseGeocode, so\n      // use first config type if one, if not default to poi\n      config.types ? [config.types[0]] : [\"poi\"];\n      config = extend(config, { query: coords, limit: 1 });\n\n      // drop proximity which may have been set by trackProximity since it's not supported by the reverseGeocoder\n      if (\"proximity\" in config) {\n        delete config.proximity;\n      }\n\n      request = this.geocoderApi.reverseGeocode(config);\n    } else {\n      config = extend(config, { query: searchInput });\n      if (!this.geocoderApi.getSuggestions) {\n        request = this.geocoderApi.forwardGeocode(config);\n      } else {\n        // user clicked on a suggestion\n        if (isSuggestion) {\n          // suggestion has place Id\n          if (this.geocoderApi.searchByPlaceId && isPlaceId) {\n            request = this.geocoderApi.searchByPlaceId(config);\n          } else {\n            request = this.geocoderApi.forwardGeocode(config);\n          }\n        } else {\n          // user typed in text and should receive suggestions\n          request = this.geocoderApi.getSuggestions(config);\n        }\n      }\n    }\n\n    var localGeocoderRes = [];\n    if (this.options.localGeocoder) {\n      localGeocoderRes = this.options.localGeocoder(searchInput);\n      if (!localGeocoderRes) {\n        localGeocoderRes = [];\n      }\n    }\n    var externalGeocoderRes = [];\n    request\n      .catch(\n        function (error) {\n          geocoderError = error;\n        }.bind(this)\n      )\n      .then(\n        function (response) {\n          this._loadingEl.style.display = \"none\";\n\n          var res = {};\n\n          if (!response) {\n            res = {\n              type: \"FeatureCollection\",\n              features: [],\n            };\n          } else {\n            res = response;\n          }\n\n          res.config = config;\n\n          if (this.fresh) {\n            this.fresh = false;\n          }\n\n          // supplement Maplibre Geocoding API results with locally populated results\n          res.features = res.features\n            ? localGeocoderRes.concat(res.features)\n            : localGeocoderRes;\n\n          if (this.options.externalGeocoder) {\n            externalGeocoderRes =\n              this.options.externalGeocoder(\n                searchInput,\n                res.features,\n                config\n              ) || [];\n            // supplement Geocoding API results with features returned by a promise\n            return externalGeocoderRes.then(\n              function (features) {\n                res.features = res.features\n                  ? features.concat(res.features)\n                  : features;\n                return res;\n              },\n              function () {\n                // on error, display the original result\n                return res;\n              }\n            );\n          }\n          return res;\n        }.bind(this)\n      )\n      .then(\n        function (res) {\n          if (geocoderError) {\n            throw geocoderError;\n          }\n\n          // apply results filter if provided\n          if (this.options.filter && res.features.length) {\n            res.features = res.features.filter(this.options.filter);\n          }\n\n          var results = [];\n          if (res.suggestions) {\n            results = res.suggestions;\n          } else if (res.place) {\n            results = [res.place];\n          } else {\n            results = res.features;\n          }\n\n          if (results.length) {\n            this._clearEl.style.display = \"block\";\n\n            this._typeahead.update(results);\n            if (\n              (!this.options.showResultsWhileTyping || isSuggestion) &&\n              this.options.showResultMarkers &&\n              (res.features.length > 0 || res.place)\n            ) {\n              this._fitBoundsForMarkers();\n            }\n\n            this._eventEmitter.emit(\"results\", res);\n          } else {\n            this._clearEl.style.display = \"none\";\n            this._typeahead.selected = null;\n            this._renderNoResults();\n            this._eventEmitter.emit(\"results\", res);\n          }\n        }.bind(this)\n      )\n      .catch(\n        function (err) {\n          this._loadingEl.style.display = \"none\";\n\n          // in the event of an error in the Geocoding API still display results from the localGeocoder\n          if (\n            (localGeocoderRes.length && this.options.localGeocoder) ||\n            (externalGeocoderRes.length && this.options.externalGeocoder)\n          ) {\n            this._clearEl.style.display = \"block\";\n            this._typeahead.update(localGeocoderRes);\n          } else {\n            this._clearEl.style.display = \"none\";\n            this._typeahead.selected = null;\n            this._renderError();\n          }\n\n          this._eventEmitter.emit(\"results\", { features: localGeocoderRes });\n          this._eventEmitter.emit(\"error\", { error: err });\n        }.bind(this)\n      );\n\n    return request;\n  },\n\n  /**\n   * Shared logic for clearing input\n   * @param {Event} [ev] the event that triggered the clear, if available\n   * @private\n   *\n   */\n  _clear: function (ev) {\n    if (ev) ev.preventDefault();\n    this._inputEl.value = \"\";\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._onChange();\n    this._clearEl.style.display = \"none\";\n    this._removeMarker();\n    this._removeResultMarkers();\n    this.lastSelected = null;\n    this._eventEmitter.emit(\"clear\");\n    this.fresh = true;\n  },\n\n  /**\n   * Clear and then focus the input.\n   * @param {Event} [ev] the event that triggered the clear, if available\n   *\n   */\n  clear: function (ev) {\n    this._clear(ev);\n    this._inputEl.focus();\n  },\n\n  /**\n   * Clear the input, without refocusing it. Used to implement clearOnBlur\n   * constructor option.\n   * @param {Event} [ev] the blur event\n   * @private\n   */\n  _clearOnBlur: function (ev) {\n    var ctx = this;\n\n    /*\n     * If relatedTarget is not found, assume user targeted the suggestions list.\n     * In that case, do not clear on blur. There are other edge cases where\n     * ev.relatedTarget could be null. Clicking on list always results in null\n     * relatedtarget because of upstream behavior in `suggestions`.\n     *\n     * The ideal solution would be to check if ev.relatedTarget is a child of\n     * the list. See issue #258 for details on why we can't do that yet.\n     */\n    if (ev.relatedTarget) {\n      ctx._clear(ev);\n    }\n  },\n\n  _onQueryResult: function (response) {\n    var results = response;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n    this._onChange();\n  },\n\n  _updateProximity: function () {\n    // proximity is designed for local scale, if the user is looking at the whole world,\n    // it doesn't make sense to factor in the arbitrary centre of the map\n    if (!this._map) {\n      return;\n    }\n    if (this._map.getZoom() > 9) {\n      var center = this._map.getCenter().wrap();\n      this.setProximity({ longitude: center.lng, latitude: center.lat });\n    } else {\n      this.setProximity(null);\n    }\n  },\n\n  _collapse: function () {\n    // do not collapse if input is in focus\n    if (!this._inputEl.value && this._inputEl !== document.activeElement)\n      this.container.classList.add(\n        \"mapboxgl-ctrl-geocoder--collapsed\",\n        \"maplibregl-ctrl-geocoder--collapsed\"\n      );\n  },\n\n  _unCollapse: function () {\n    this.container.classList.remove(\n      \"mapboxgl-ctrl-geocoder--collapsed\",\n      \"maplibregl-ctrl-geocoder--collapsed\"\n    );\n  },\n\n  /**\n   * Set & query the input\n   * @param {string} searchInput location name or other search input\n   * @returns {MaplibreGeocoder} this\n   */\n  query: function (searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n    return this;\n  },\n\n  _renderError: function () {\n    var errorMessage =\n      \"<div class='mapbox-gl-geocoder--error maplibre-gl-geocoder--error'>There was an error reaching the server</div>\";\n    this._renderMessage(errorMessage);\n  },\n\n  _renderNoResults: function () {\n    var errorMessage =\n      \"<div class='mapbox-gl-geocoder--error mapbox-gl-geocoder--no-results maplibre-gl-geocoder--error maplibre-gl-geocoder--no-results'>No results found</div>\";\n    this._renderMessage(errorMessage);\n  },\n\n  _renderMessage: function (msg) {\n    this._typeahead.update([]);\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    this._typeahead.renderError(msg);\n  },\n\n  /**\n   * Get the text to use as the search bar placeholder\n   *\n   * If placeholder is provided in options, then use options.placeholder\n   * Otherwise, if language is provided in options, then use the localized string of the first language if available\n   * Otherwise use the default\n   *\n   * @returns {String} the value to use as the search bar placeholder\n   * @private\n   */\n  _getPlaceholderText: function () {\n    if (this.options.placeholder) return this.options.placeholder;\n    if (this.options.language) {\n      var firstLanguage = this.options.language.split(\",\")[0];\n      var language = subtag.language(firstLanguage);\n      var localizedValue = localization.placeholder[language];\n      if (localizedValue) return localizedValue;\n    }\n    return \"Search\";\n  },\n\n  /**\n   * Fits the map to the current bounds for the searched results\n   *\n   * @returns {MaplibreGeocoder} this\n   * @private\n   */\n  _fitBoundsForMarkers: function () {\n    if (this._typeahead.data.length < 1) return;\n\n    // Filter out suggestions and restrict to limit\n    var results = this._typeahead.data\n      .filter(function (result) {\n        return typeof result === \"string\" ? false : true;\n      })\n      .slice(0, this.options.limit);\n\n    this._clearEl.style.display = \"none\";\n\n    if (this.options.flyTo && this._maplibregl) {\n      if (this._map) {\n        var defaultFlyOptions = { padding: 100 };\n        var flyOptions = extend({}, defaultFlyOptions, this.options.flyTo);\n        var bounds = new this._maplibregl.LngLatBounds();\n        results.forEach(function (feature) {\n          bounds.extend(feature.geometry.coordinates);\n        });\n\n        this._map.fitBounds(bounds.toArray(), flyOptions);\n      }\n    }\n\n    if (results.length > 0 && this._maplibregl) {\n      this._handleResultMarkers(results);\n    }\n\n    return this;\n  },\n\n  /**\n   * Set input\n   * @param {string} searchInput location name or other search input\n   * @returns {MaplibreGeocoder} this\n   */\n  setInput: function (searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n    this._typeahead.clear();\n    if (\n      searchInput.length >= this.options.minLength &&\n      this.options.showResultsWhileTyping\n    ) {\n      this._geocode(searchInput);\n    }\n    return this;\n  },\n\n  /**\n   * Set proximity\n   * @param {Object} proximity The new `options.proximity` value. This is a geographical point given as an object with `latitude` and `longitude` properties.\n   * @returns {MaplibreGeocoder} this\n   */\n  setProximity: function (proximity) {\n    this.options.proximity = proximity;\n    return this;\n  },\n\n  /**\n   * Get proximity\n   * @returns {Object} The geocoder proximity\n   */\n  getProximity: function () {\n    return this.options.proximity;\n  },\n\n  /**\n   * Set the render function used in the results dropdown\n   * @param {Function} fn The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n   * @returns {MaplibreGeocoder} this\n   */\n  setRenderFunction: function (fn) {\n    if (fn && typeof fn == \"function\") {\n      this._typeahead.render = fn;\n    }\n    return this;\n  },\n\n  /**\n   * Get the function used to render the results dropdown\n   *\n   * @returns {Function} the render function\n   */\n  getRenderFunction: function () {\n    return this._typeahead.render;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   *\n   * Look first at the explicitly set options otherwise use the browser's language settings\n   * @param {String} language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas.\n   * @returns {MaplibreGeocoder} this\n   */\n  setLanguage: function (language) {\n    var browserLocale =\n      navigator.language || navigator.userLanguage || navigator.browserLanguage;\n    this.options.language = language || this.options.language || browserLocale;\n    return this;\n  },\n\n  /**\n   * Get the language to use in UI elements and when making search requests\n   * @returns {String} The language(s) used by the plugin, if any\n   */\n  getLanguage: function () {\n    return this.options.language;\n  },\n\n  /**\n   * Get the zoom level the map will move to when there is no bounding box on the selected result\n   * @returns {Number} the map zoom\n   */\n  getZoom: function () {\n    return this.options.zoom;\n  },\n\n  /**\n   * Set the zoom level\n   * @param {Number} zoom The zoom level that the map should animate to when a `bbox` isn't found in the response. If a `bbox` is found the map will fit to the `bbox`.\n   * @returns {MaplibreGeocoder} this\n   */\n  setZoom: function (zoom) {\n    this.options.zoom = zoom;\n    return this;\n  },\n\n  /**\n   * Get the parameters used to fly to the selected response, if any\n   * @returns {Boolean|Object} The `flyTo` option\n   */\n  getFlyTo: function () {\n    return this.options.flyTo;\n  },\n\n  /**\n   * Set the flyTo options\n   * @param {Boolean|Object} flyTo If false, animating the map to a selected result is disabled. If true, animating the map will use the default animation parameters. If an object, it will be passed as `options` to the map [`flyTo`](https://maplibre.org/maplibre-gl-js-docs/api/map/#map#flyto) or [`fitBounds`](https://maplibre.org/maplibre-gl-js-docs/api/map/#map#fitbounds) method providing control over the animation of the transition.\n   */\n  setFlyTo: function (flyTo) {\n    this.options.flyTo = flyTo;\n    return this;\n  },\n\n  /**\n   * Get the value of the placeholder string\n   * @returns {String} The input element's placeholder value\n   */\n  getPlaceholder: function () {\n    return this.options.placeholder;\n  },\n\n  /**\n   * Set the value of the input element's placeholder\n   * @param {String} placeholder the text to use as the input element's placeholder\n   * @returns {MaplibreGeocoder} this\n   */\n  setPlaceholder: function (placeholder) {\n    this.placeholder = placeholder ? placeholder : this._getPlaceholderText();\n    this._inputEl.placeholder = this.placeholder;\n    this._inputEl.setAttribute(\"aria-label\", this.placeholder);\n    return this;\n  },\n\n  /**\n   * Get the bounding box used by the plugin\n   * @returns {Array<Number>} the bounding box, if any\n   */\n  getBbox: function () {\n    return this.options.bbox;\n  },\n\n  /**\n   * Set the bounding box to limit search results to\n   * @param {Array<Number>} bbox a bounding box given as an array in the format [minX, minY, maxX, maxY].\n   * @returns {MaplibreGeocoder} this\n   */\n  setBbox: function (bbox) {\n    this.options.bbox = bbox;\n    return this;\n  },\n\n  /**\n   * Get a list of the countries to limit search results to\n   * @returns {String} a comma separated list of countries to limit to, if any\n   */\n  getCountries: function () {\n    return this.options.countries;\n  },\n\n  /**\n   * Set the countries to limit search results to\n   * @param {String} countries a comma separated list of countries to limit to\n   * @returns {MaplibreGeocoder} this\n   */\n  setCountries: function (countries) {\n    this.options.countries = countries;\n    return this;\n  },\n\n  /**\n   * Get a list of the types to limit search results to\n   * @returns {String} a comma separated list of types to limit to\n   */\n  getTypes: function () {\n    return this.options.types;\n  },\n\n  /**\n   * Set the types to limit search results to\n   * @param {String} countries a comma separated list of types to limit to\n   * @returns {MaplibreGeocoder} this\n   */\n  setTypes: function (types) {\n    this.options.types = types;\n    return this;\n  },\n\n  /**\n   * Get the minimum number of characters typed to trigger results used in the plugin\n   * @returns {Number} The minimum length in characters before a search is triggered\n   */\n  getMinLength: function () {\n    return this.options.minLength;\n  },\n\n  /**\n   * Set the minimum number of characters typed to trigger results used by the plugin\n   * @param {Number} minLength the minimum length in characters\n   * @returns {MaplibreGeocoder} this\n   */\n  setMinLength: function (minLength) {\n    this.options.minLength = minLength;\n    if (this._typeahead) this._typeahead.options.minLength = minLength;\n    return this;\n  },\n\n  /**\n   * Get the limit value for the number of results to display used by the plugin\n   * @returns {Number} The limit value for the number of results to display used by the plugin\n   */\n  getLimit: function () {\n    return this.options.limit;\n  },\n\n  /**\n   * Set the limit value for the number of results to display used by the plugin\n   * @param {Number} limit the number of search results to return\n   * @returns {MaplibreGeocoder}\n   */\n  setLimit: function (limit) {\n    this.options.limit = limit;\n    if (this._typeahead) this._typeahead.options.limit = limit;\n    return this;\n  },\n\n  /**\n   * Get the filter function used by the plugin\n   * @returns {Function} the filter function\n   */\n  getFilter: function () {\n    return this.options.filter;\n  },\n\n  /**\n   * Set the filter function used by the plugin.\n   * @param {Function} filter A function which accepts a Feature in the [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format to filter out results from the Geocoding API response before they are included in the suggestions list. Return `true` to keep the item, `false` otherwise.\n   * @returns {MaplibreGeocoder} this\n   */\n  setFilter: function (filter) {\n    this.options.filter = filter;\n    return this;\n  },\n\n  /**\n   * Set the geocoding api used by the plugin.\n   * @param {Object} geocoderApi An API which contains reverseGeocode and forwardGeocode functions to be used by this plugin\n   * @param {Function} geocoderApi.forwardGeocode Forward geocode function should return an object including a collection of Features in [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format\n   * @param {Object} geocoderApi.forwardGeocode.config Query parameters\n   * @param {String} geocoderApi.forwardGeocode.config.query Search query string\n   * @param {Number} geocoderApi.forwardGeocode.config.limit Number of results to limit by\n   * @param {Array} geocoderApi.forwardGeocode.config.bbox a bounding box given as an array in the format `[minX, minY, maxX, maxY]`. Search results will be limited to the bounding box.\n   * @param {Object} geocoderApi.forwardGeocode.config.proximity a geographical point given as an object with `latitude` and `longitude` properties. Search results closer to this point will be given higher priority.\n   * @param {Array} geocoderApi.forwardGeocode.config.countries a comma separated list of country codes to limit results to specified country or countries.\n   * @param {Array} geocoderApi.forwardGeocode.config.types a comma seperated list of types that filter results to match those specified. See https://docs.mapbox.com/api/search/#data-types for available types. If reverseGeocode is enabled, you should specify one type. If you configure more than one type, the first type will be used.\n   * @param {String} geocoderApi.forwardGeocode.config.language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n   * @param {distance|score} geocoderApi.forwardGeocode.config.reverseMode Set the factors that are used to sort nearby results.\n   *\n   * @param {Function} geocoderApi.reverseGeocode Reverse geocode function should return an object including a collection of Features in [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) format\n   * @param {Object} geocoderApi.reverseGeocode.config Query parameters\n   * @param {Object} geocoderApi.reverseGeocode.config.query Search query coordinates\n   * @param {Number} geocoderApi.reverseGeocode.config.limit Number of results to limit by\n   * @param {Array} geocoderApi.reverseGeocode.config.bbox a bounding box given as an array in the format `[minX, minY, maxX, maxY]`. Search results will be limited to the bounding box.\n   * @param {Object} geocoderApi.reverseGeocode.config.proximity a geographical point given as an object with `latitude` and `longitude` properties. Search results closer to this point will be given higher priority.\n   * @param {Array} geocoderApi.reverseGeocode.config.countries a comma separated list of country codes to limit results to specified country or countries.\n   * @param {Array} geocoderApi.reverseGeocode.config.types a comma seperated list of types that filter results to match those specified. See https://docs.mapbox.com/api/search/#data-types for available types. If reverseGeocode is enabled, you should specify one type. If you configure more than one type, the first type will be used.\n   * @param {String} geocoderApi.reverseGeocode.config.language Specify the language to use for response text and query result weighting. Options are IETF language tags comprised of a mandatory ISO 639-1 language code and optionally one or more IETF subtags for country or script. More than one value can also be specified, separated by commas. Defaults to the browser's language settings.\n   * @param {distance|score} geocoderApi.reverseGeocode.config.reverseMode Set the factors that are used to sort nearby results.\n   * @returns {MaplibreGeocoder} this\n   */\n  setGeocoderApi: function (geocoderApi) {\n    this.geocoderApi = geocoderApi;\n    return this;\n  },\n\n  /**\n   * Get the geocoding endpoint the plugin is currently set to\n   * @returns {Object} the geocoding API\n   */\n  getGeocoderApi: function () {\n    return this.geocoderApi;\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object} selected the selected geojson feature\n   * @returns {MaplibreGeocoder} this\n   */\n  _handleMarker: function (selected) {\n    // clean up any old marker that might be present\n    if (!this._map) {\n      return;\n    }\n    this._removeMarker();\n    var defaultMarkerOptions = {\n      color: \"#4668F2\",\n    };\n    var markerOptions = extend({}, defaultMarkerOptions, this.options.marker);\n    this.mapMarker = new this._maplibregl.Marker(markerOptions);\n\n    var popup;\n    if (this.options.popup) {\n      var defaultPopupOptions = {};\n      var popupOptions = extend({}, defaultPopupOptions, this.options.popup);\n      popup = new this._maplibregl.Popup(popupOptions).setHTML(\n        this.options.popupRender(selected)\n      );\n    }\n\n    if (selected.center) {\n      this.mapMarker.setLngLat(selected.center).addTo(this._map);\n\n      if (this.options.popup) this.mapMarker.setPopup(popup);\n    } else if (\n      selected.geometry &&\n      selected.geometry.type &&\n      selected.geometry.type === \"Point\" &&\n      selected.geometry.coordinates\n    ) {\n      this.mapMarker.setLngLat(selected.geometry.coordinates).addTo(this._map);\n\n      if (this.options.popup) this.mapMarker.setPopup(popup);\n    }\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeMarker: function () {\n    if (this.mapMarker) {\n      this.mapMarker.remove();\n      this.mapMarker = null;\n    }\n  },\n\n  /**\n   * Handle the placement of a result marking the selected result\n   * @private\n   * @param {Object[]} results the top results to display on the map\n   * @returns {MaplibreGeocoder} this\n   */\n  _handleResultMarkers: function (results) {\n    // clean up any old marker that might be present\n    if (!this._map) {\n      return;\n    }\n    this._removeResultMarkers();\n    var defaultMarkerOptions = {\n      color: \"#4668F2\",\n    };\n    var markerOptions = extend(\n      {},\n      defaultMarkerOptions,\n      this.options.showResultMarkers\n    );\n\n    results.forEach(\n      function (result) {\n        if (\n          this.options.showResultMarkers &&\n          this.options.showResultMarkers.element\n        ) {\n          var el = this.options.showResultMarkers.element.cloneNode(true);\n          markerOptions = extend(markerOptions, { element: el });\n        }\n\n        var marker = new this._maplibregl.Marker(\n          extend({}, markerOptions, { element: el })\n        );\n\n        var popup;\n        if (this.options.popup) {\n          var defaultPopupOptions = {};\n          var popupOptions = extend(\n            {},\n            defaultPopupOptions,\n            this.options.popup\n          );\n          popup = new this._maplibregl.Popup(popupOptions).setHTML(\n            this.options.popupRender(result)\n          );\n        }\n        if (result.center) {\n          marker.setLngLat(result.center).addTo(this._map);\n          if (this.options.popup) marker.setPopup(popup);\n        } else if (\n          result.geometry &&\n          result.geometry.type &&\n          result.geometry.type === \"Point\" &&\n          result.geometry.coordinates\n        ) {\n          marker.setLngLat(result.geometry.coordinates).addTo(this._map);\n          if (this.options.popup) marker.setPopup(popup);\n        }\n        this.resultMarkers.push(marker);\n      }.bind(this)\n    );\n    return this;\n  },\n\n  /**\n   * Handle the removal of a result marker\n   * @private\n   */\n  _removeResultMarkers: function () {\n    if (this.resultMarkers && this.resultMarkers.length > 0) {\n      this.resultMarkers.forEach(function (marker) {\n        marker.remove();\n      });\n      this.resultMarkers = [];\n    }\n  },\n\n  /**\n   * Subscribe to events that happen within the plugin.\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\n   *\n   * - __clear__ `Emitted when the input is cleared`\n   * - __loading__ `{ query } Emitted when the geocoder is looking up a query`\n   * - __results__ `{ results } Fired when the geocoder returns a response`\n   * - __result__ `{ result } Fired when input is set`\n   * - __error__ `{ error } Error as string`\n   * @param {Function} fn function that's called when the event is emitted.\n   * @returns {MaplibreGeocoder} this;\n   */\n  on: function (type, fn) {\n    this._eventEmitter.on(type, fn);\n    return this;\n  },\n\n  /**\n   * Remove an event\n   * @returns {MaplibreGeocoder} this\n   * @param {String} type Event name.\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\n   */\n  off: function (type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n    return this;\n  },\n};\n\nmodule.exports = MaplibreGeocoder;\n", "/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n", "\nconst ModeHandler = function(mode, DrawContext) {\n\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        const skipRender = handle.fn.call(ctx, event);\n        if (!skipRender) {\n          DrawContext.store.render();\n        }\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n\n  mode.start.call(ctx);\n\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\n\nexport default ModeHandler;\n", "module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n", "var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}", "export const classes = {\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\n\nexport const sources = {\n  HOT: 'mapbox-gl-draw-hot',\n  COLD: 'mapbox-gl-draw-cold'\n};\n\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\n\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\n\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\n\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select',\n  STATIC: 'static'\n};\n\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\n\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\n\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex'\n};\n\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\n\nexport const interactions = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate'\n];\n\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;\n", "import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants';\n\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  Polygon: 2\n};\n\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map((feature) => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map((feature) => {\n    delete feature.area;\n    return feature;\n  });\n}\n\nexport default sortFeatures;\n", "function StringSet(items) {\n  this._items = {};\n  this._nums = {};\n  this._length = items ? items.length : 0;\n  if (!items) return;\n  for (let i = 0, l = items.length; i < l; i++) {\n    this.add(items[i]);\n    if (items[i] === undefined) continue;\n    if (typeof items[i] === 'string') this._items[items[i]] = i;\n    else this._nums[items[i]] = i;\n\n  }\n}\n\nStringSet.prototype.add = function(x) {\n  if (this.has(x)) return this;\n  this._length++;\n  if (typeof x === 'string') this._items[x] = this._length;\n  else this._nums[x] = this._length;\n  return this;\n};\n\nStringSet.prototype.delete = function(x) {\n  if (this.has(x) === false) return this;\n  this._length--;\n  delete this._items[x];\n  delete this._nums[x];\n  return this;\n};\n\nStringSet.prototype.has = function(x) {\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\n};\n\nStringSet.prototype.values = function() {\n  const values = [];\n  Object.keys(this._items).forEach((k) => {\n    values.push({ k, v: this._items[k] });\n  });\n  Object.keys(this._nums).forEach((k) => {\n    values.push({ k: JSON.parse(k), v: this._nums[k] });\n  });\n\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\n};\n\nStringSet.prototype.clear = function() {\n  this._length = 0;\n  this._items = {};\n  this._nums = {};\n  return this;\n};\n\nexport default StringSet;\n", "import sortFeatures from './sort_features';\nimport mapEventToBoundingBox from './map_event_to_bounding_box';\nimport * as Constants from '../constants';\nimport StringSet from './string_set';\n\nconst META_TYPES = [\n  Constants.meta.FEATURE,\n  Constants.meta.MIDPOINT,\n  Constants.meta.VERTEX\n];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\n\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\n\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\n\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n\n  const box = (event) ? mapEventToBoundingBox(event, buffer) : bbox;\n\n  const queryParams = {};\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id);\n\n  const features = ctx.map.queryRenderedFeatures(box, queryParams)\n    .filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach((feature) => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n\n  return sortFeatures(uniqueFeatures);\n}\n", "/**\n * Returns a bounding box representing the event's location.\n *\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\n * @return {Array<Array<number>>} Bounding box.\n */\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\n  return [\n    [mapEvent.point.x - buffer, mapEvent.point.y - buffer],\n    [mapEvent.point.x + buffer, mapEvent.point.y + buffer]\n  ];\n}\n\nexport default mapEventToBoundingBox;\n", "import featuresAt from './features_at';\nimport * as Constants from '../constants';\n\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = { mouse: Constants.cursors.NONE };\n\n  if (features[0]) {\n    classes.mouse = (features[0].properties.active === Constants.activeStates.ACTIVE) ?\n      Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n\n  return features[0];\n}\n", "export default function(a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt((x * x) + (y * y));\n}\n", "import euclideanDistance from './euclidean_distance';\n\nconst FINE_TOLERANCE = 4;\nconst GROSS_TOLERANCE = 12;\nconst INTERVAL = 500;\n\nexport default function isClick(start, end, options = {}) {\n  const fineTolerance = (options.fineTolerance != null) ? options.fineTolerance : FINE_TOLERANCE;\n  const grossTolerance = (options.grossTolerance != null) ? options.grossTolerance : GROSS_TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < fineTolerance ||\n    (moveDistance < grossTolerance && (end.time - start.time) < interval);\n}\n", "import euclideanDistance from './euclidean_distance';\n\nconst TOLERANCE = 25;\nconst INTERVAL = 250;\n\nexport default function isTap(start, end, options = {}) {\n  const tolerance = (options.tolerance != null) ? options.tolerance : TOLERANCE;\n  const interval = (options.interval != null) ? options.interval : INTERVAL;\n\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n\n  return moveDistance < tolerance && (end.time - start.time) < interval;\n}\n", "var hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n\nhat.rack = function (bits, base, expandBy) {\n    var fn = function (data) {\n        var iters = 0;\n        do {\n            if (iters ++ > 10) {\n                if (expandBy) bits += expandBy;\n                else throw new Error('too many ID collisions, use more bits')\n            }\n            \n            var id = hat(bits, base);\n        } while (Object.hasOwnProperty.call(hats, id));\n        \n        hats[id] = data;\n        return id;\n    };\n    var hats = fn.hats = {};\n    \n    fn.get = function (id) {\n        return fn.hats[id];\n    };\n    \n    fn.set = function (id, value) {\n        fn.hats[id] = value;\n        return fn;\n    };\n    \n    fn.bits = bits || 128;\n    fn.base = base || 16;\n    return fn;\n};\n", "import hat from 'hat';\nimport * as Constants from '../constants';\n\nconst Feature = function(ctx, geojson) {\n  this.ctx = ctx;\n  this.properties = geojson.properties || {};\n  this.coordinates = geojson.geometry.coordinates;\n  this.id = geojson.id || hat();\n  this.type = geojson.geometry.type;\n};\n\nFeature.prototype.changed = function() {\n  this.ctx.store.featureChanged(this.id);\n};\n\nFeature.prototype.incomingCoords = function(coords) {\n  this.setCoordinates(coords);\n};\n\nFeature.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.coordinates));\n};\n\nFeature.prototype.setProperty = function(property, value) {\n  this.properties[property] = value;\n};\n\nFeature.prototype.toGeoJSON = function() {\n  return JSON.parse(JSON.stringify({\n    id: this.id,\n    type: Constants.geojsonTypes.FEATURE,\n    properties: this.properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  }));\n};\n\nFeature.prototype.internal = function(mode) {\n  const properties = {\n    id: this.id,\n    meta: Constants.meta.FEATURE,\n    'meta:type': this.type,\n    active: Constants.activeStates.INACTIVE,\n    mode\n  };\n\n  if (this.ctx.options.userProperties) {\n    for (const name in this.properties) {\n      properties[`user_${name}`] = this.properties[name];\n    }\n  }\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  };\n};\n\nexport default Feature;\n", "import Feature from './feature';\n\nconst Point = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nPoint.prototype = Object.create(Feature.prototype);\n\nPoint.prototype.isValid = function() {\n  return typeof this.coordinates[0] === 'number' &&\n    typeof this.coordinates[1] === 'number';\n};\n\nPoint.prototype.updateCoordinate = function(pathOrLng, lngOrLat, lat) {\n  if (arguments.length === 3) {\n    this.coordinates = [lngOrLat, lat];\n  } else {\n    this.coordinates = [pathOrLng, lngOrLat];\n  }\n  this.changed();\n};\n\nPoint.prototype.getCoordinate = function() {\n  return this.getCoordinates();\n};\n\nexport default Point;\n", "import Feature from './feature';\n\nconst LineString = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\n\nLineString.prototype = Object.create(Feature.prototype);\n\nLineString.prototype.isValid = function() {\n  return this.coordinates.length > 1;\n};\n\nLineString.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const id = parseInt(path, 10);\n  this.coordinates.splice(id, 0, [lng, lat]);\n};\n\nLineString.prototype.getCoordinate = function(path) {\n  const id = parseInt(path, 10);\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\n};\n\nLineString.prototype.removeCoordinate = function(path) {\n  this.changed();\n  this.coordinates.splice(parseInt(path, 10), 1);\n};\n\nLineString.prototype.updateCoordinate = function(path, lng, lat) {\n  const id = parseInt(path, 10);\n  this.coordinates[id] = [lng, lat];\n  this.changed();\n};\n\nexport default LineString;\n", "import Feature from './feature';\n\nconst Polygon = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\n};\n\nPolygon.prototype = Object.create(Feature.prototype);\n\nPolygon.prototype.isValid = function() {\n  if (this.coordinates.length === 0) return false;\n  return this.coordinates.every(ring => ring.length > 2);\n};\n\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\nPolygon.prototype.incomingCoords = function(coords) {\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\n  this.changed();\n};\n\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\nPolygon.prototype.setCoordinates = function(coords) {\n  this.coordinates = coords;\n  this.changed();\n};\n\nPolygon.prototype.addCoordinate = function(path, lng, lat) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n\n  const ring = this.coordinates[ids[0]];\n\n  ring.splice(ids[1], 0, [lng, lat]);\n};\n\nPolygon.prototype.removeCoordinate = function(path) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  if (ring) {\n    ring.splice(ids[1], 1);\n    if (ring.length < 3) {\n      this.coordinates.splice(ids[0], 1);\n    }\n  }\n};\n\nPolygon.prototype.getCoordinate = function(path) {\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\n};\n\nPolygon.prototype.getCoordinates = function() {\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\n};\n\nPolygon.prototype.updateCoordinate = function(path, lng, lat) {\n  this.changed();\n  const parts = path.split('.');\n  const ringId = parseInt(parts[0], 10);\n  const coordId = parseInt(parts[1], 10);\n\n  if (this.coordinates[ringId] === undefined) {\n    this.coordinates[ringId] = [];\n  }\n\n  this.coordinates[ringId][coordId] = [lng, lat];\n};\n\nexport default Polygon;\n", "import Feature from './feature';\nimport * as Constants from '../constants';\nimport hat from 'hat';\n\nimport MultiPoint from './point';\nimport MultiLineString from './line_string';\nimport MultiPolygon from './polygon';\n\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\n\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = (!parts[1]) ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\n\nconst MultiFeature = function(ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\n\nMultiFeature.prototype = Object.create(Feature.prototype);\n\nMultiFeature.prototype._coordinatesToFeatures = function(coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: hat(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\n\nMultiFeature.prototype.isValid = function() {\n  return this.features.every(f => f.isValid());\n};\n\nMultiFeature.prototype.setCoordinates = function(coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\n\nMultiFeature.prototype.getCoordinate = function(path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\n\nMultiFeature.prototype.getCoordinates = function() {\n  return JSON.parse(JSON.stringify(this.features.map((f) => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\n\nMultiFeature.prototype.updateCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.addCoordinate = function(path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\n\nMultiFeature.prototype.removeCoordinate = function(path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\n\nMultiFeature.prototype.getFeatures = function() {\n  return this.features;\n};\n\nexport default MultiFeature;\n", "import * as Constants from '../constants';\nimport featuresAt from '../lib/features_at';\nimport Point from '../feature_types/point';\nimport LineString from '../feature_types/line_string';\nimport Polygon from '../feature_types/polygon';\nimport MultiFeature from '../feature_types/multi_feature';\n\nexport default function ModeInterface(ctx) {\n  this.map = ctx.map;\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\n  this._ctx = ctx;\n}\n\n/**\n * Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n */\nModeInterface.prototype.setSelected = function(features) {\n  return this._ctx.store.setSelected(features);\n};\n\n/**\n * Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', featureId: 'string'}\n */\nModeInterface.prototype.setSelectedCoordinates = function(coords) {\n  this._ctx.store.setSelectedCoordinates(coords);\n  coords.reduce((m, c) => {\n    if (m[c.feature_id] === undefined) {\n      m[c.feature_id] = true;\n      this._ctx.store.get(c.feature_id).changed();\n    }\n    return m;\n  }, {});\n};\n\n/**\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}\n */\nModeInterface.prototype.getSelected = function() {\n  return this._ctx.store.getSelected();\n};\n\n/**\n * Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}\n */\nModeInterface.prototype.getSelectedIds = function() {\n  return this._ctx.store.getSelectedIds();\n};\n\n/**\n * Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}\n */\nModeInterface.prototype.isSelected = function(id) {\n  return this._ctx.store.isSelected(id);\n};\n\n/**\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}\n */\nModeInterface.prototype.getFeature = function(id) {\n  return this._ctx.store.get(id);\n};\n\n/**\n * Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id\n */\nModeInterface.prototype.select = function(id) {\n  return this._ctx.store.select(id);\n};\n\n/**\n * Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id\n */\nModeInterface.prototype.deselect = function(id) {\n  return this._ctx.store.deselect(id);\n};\n\n/**\n * Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id\n */\nModeInterface.prototype.deleteFeature = function(id, opts = {}) {\n  return this._ctx.store.delete(id, opts);\n};\n\n/**\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add\n */\nModeInterface.prototype.addFeature = function(feature) {\n  return this._ctx.store.add(feature);\n};\n\n/**\n * Clear all selected features\n */\nModeInterface.prototype.clearSelectedFeatures = function() {\n  return this._ctx.store.clearSelected();\n};\n\n/**\n * Clear all selected coordinates\n */\nModeInterface.prototype.clearSelectedCoordinates = function() {\n  return this._ctx.store.clearSelectedCoordinates();\n};\n\n/**\n * Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions\n */\nModeInterface.prototype.setActionableState = function(actions = {}) {\n  const newSet = {\n    trash: actions.trash || false,\n    combineFeatures: actions.combineFeatures || false,\n    uncombineFeatures: actions.uncombineFeatures || false\n  };\n  return this._ctx.events.actionable(newSet);\n};\n\n/**\n * Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.\n */\nModeInterface.prototype.changeMode = function(mode, opts = {}, eventOpts = {}) {\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\n};\n\n/**\n * Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts\n */\nModeInterface.prototype.updateUIClasses = function(opts) {\n  return this._ctx.ui.queueMapClasses(opts);\n};\n\n/**\n * If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\n */\nModeInterface.prototype.activateUIButton = function(name) {\n  return this._ctx.ui.setActiveButton(name);\n};\n\n/**\n * Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\n */\nModeInterface.prototype.featuresAt = function(event, bbox, bufferType = 'click') {\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\n  return featuresAt[bufferType](event, bbox, this._ctx);\n};\n\n/**\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}\n */\nModeInterface.prototype.newFeature = function(geojson) {\n  const type = geojson.geometry.type;\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\n  return new MultiFeature(this._ctx, geojson);\n};\n\n/**\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}\n */\nModeInterface.prototype.isInstanceOf = function(type, feature) {\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\n  throw new Error(`Unknown feature class: ${type}`);\n};\n\n/**\n * Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id\n */\nModeInterface.prototype.doRender = function(id) {\n  return this._ctx.store.featureChanged(id);\n};\n\n", "import ModeInterface from './mode_interface_accessors';\nexport default ModeInterface;\n\n/**\n * Triggered while a mode is being transitioned into.\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\n * @name MODE.onSetup\n * @returns {Object} - this object will be passed to all other life cycle functions\n */\nModeInterface.prototype.onSetup = function() {};\n\n/**\n * Triggered when a drag event is detected on the map\n * @name MODE.onDrag\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onDrag = function() {};\n\n/**\n * Triggered when the mouse is clicked\n * @name MODE.onClick\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onClick = function() {};\n\n/**\n * Triggered with the mouse is moved\n * @name MODE.onMouseMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseMove = function() {};\n\n/**\n * Triggered when the mouse button is pressed down\n * @name MODE.onMouseDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseDown = function() {};\n\n/**\n * Triggered when the mouse button is released\n * @name MODE.onMouseUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseUp = function() {};\n\n/**\n * Triggered when the mouse leaves the map's container\n * @name MODE.onMouseOut\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseOut = function() {};\n\n/**\n * Triggered when a key up event is detected\n * @name MODE.onKeyUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyUp = function() {};\n\n/**\n * Triggered when a key down event is detected\n * @name MODE.onKeyDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyDown = function() {};\n\n/**\n * Triggered when a touch event is started\n * @name MODE.onTouchStart\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchStart = function() {};\n\n/**\n * Triggered when one drags thier finger on a mobile device\n * @name MODE.onTouchMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchMove = function() {};\n\n/**\n * Triggered when one removes their finger from the map\n * @name MODE.onTouchEnd\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchEnd = function() {};\n\n/**\n * Triggered when one quicly taps the map\n * @name MODE.onTap\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTap = function() {};\n\n/**\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\n * @name MODE.onStop\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onStop = function() {};\n\n/**\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\n * @name MODE.onTrash\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onTrash = function() {};\n\n/**\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\n * @name MODE.onCombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onCombineFeature = function() {};\n\n/**\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\n * @name MODE.onUncombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onUncombineFeature = function() {};\n\n/**\n * Triggered per feature on render to convert raw features into set of features for display on the map\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\n * @name MODE.toDisplayFeatures\n * @param state {Object} - a mutible state object created by onSetup\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\n */\nModeInterface.prototype.toDisplayFeatures = function() {\n  throw new Error('You must overwrite toDisplayFeatures');\n};\n\n", "import ModeInterface from './mode_interface';\n\nconst eventMapper = {\n  drag: 'onDrag',\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseout: 'onMouseOut',\n  keyup: 'onKeyUp',\n  keydown: 'onKeyDown',\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd',\n  tap: 'onTap'\n};\n\nconst eventKeys = Object.keys(eventMapper);\n\nexport default function(modeObject) {\n  const modeObjectKeys = Object.keys(modeObject);\n\n  return function(ctx, startOpts = {}) {\n    let state = {};\n\n    const mode = modeObjectKeys.reduce((m, k) => {\n      m[k] = modeObject[k];\n      return m;\n    }, new ModeInterface(ctx));\n\n    function wrapper(eh) {\n      return e => mode[eh](state, e);\n    }\n\n    return {\n      start() {\n        state = mode.onSetup(startOpts); // this should set ui buttons\n\n        // Adds event handlers for all event options\n        // add sets the selector to false for all\n        // handlers that are not present in the mode\n        // to reduce on render calls for functions that\n        // have no logic\n        eventKeys.forEach((key) => {\n          const modeHandler = eventMapper[key];\n          let selector = () => false;\n          if (modeObject[modeHandler]) {\n            selector = () => true;\n          }\n          this.on(key, selector, wrapper(modeHandler));\n        });\n\n      },\n      stop() {\n        mode.onStop(state);\n      },\n      trash() {\n        mode.onTrash(state);\n      },\n      combineFeatures() {\n        mode.onCombineFeatures(state);\n      },\n      uncombineFeatures() {\n        mode.onUncombineFeatures(state);\n      },\n      render(geojson, push) {\n        mode.toDisplayFeatures(state, geojson, push);\n      }\n    };\n  };\n}\n", "/**\n * Derive a dense array (no `undefined`s) from a single value or array.\n *\n * @param {any} x\n * @return {Array<any>}\n */\nfunction toDenseArray(x) {\n  return [].concat(x).filter(y => y !== undefined);\n}\n\nexport default toDenseArray;\n", "import * as Constants from './constants';\n\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const mapExists = store.ctx.map && store.ctx.map.getSource(Constants.sources.HOT) !== undefined;\n  if (!mapExists) return cleanup();\n\n  const mode = store.ctx.events.currentModeName();\n\n  store.ctx.ui.queueMapClasses({ mode });\n\n  let newHotIds = [];\n  let newColdIds = [];\n\n  if (store.isDirty) {\n    newColdIds = store.getAllIds();\n  } else {\n    newHotIds = store.getChangedIds().filter(id => store.get(id) !== undefined);\n    newColdIds = store.sources.hot.filter(geojson => geojson.properties.id && newHotIds.indexOf(geojson.properties.id) === -1 && store.get(geojson.properties.id) !== undefined).map(geojson => geojson.properties.id);\n  }\n\n  store.sources.hot = [];\n  const lastColdCount = store.sources.cold.length;\n  store.sources.cold = store.isDirty ? [] : store.sources.cold.filter((geojson) => {\n    const id = geojson.properties.id || geojson.properties.parent;\n    return newHotIds.indexOf(id) === -1;\n  });\n\n  const coldChanged = lastColdCount !== store.sources.cold.length || newColdIds.length > 0;\n  newHotIds.forEach(id => renderFeature(id, 'hot'));\n  newColdIds.forEach(id => renderFeature(id, 'cold'));\n\n  function renderFeature(id, source) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    store.ctx.events.currentModeRender(featureInternal, (geojson) => {\n      store.sources[source].push(geojson);\n    });\n  }\n\n  if (coldChanged) {\n    store.ctx.map.getSource(Constants.sources.COLD).setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: store.sources.cold\n    });\n  }\n\n  store.ctx.map.getSource(Constants.sources.HOT).setData({\n    type: Constants.geojsonTypes.FEATURE_COLLECTION,\n    features: store.sources.hot\n  });\n\n  if (store._emitSelectionChange) {\n    store.ctx.map.fire(Constants.events.SELECTION_CHANGE, {\n      features: store.getSelected().map(feature => feature.toGeoJSON()),\n      points: store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    });\n    store._emitSelectionChange = false;\n  }\n\n  if (store._deletedFeaturesToEmit.length) {\n    const geojsonToEmit = store._deletedFeaturesToEmit.map(feature => feature.toGeoJSON());\n\n    store._deletedFeaturesToEmit = [];\n\n    store.ctx.map.fire(Constants.events.DELETE, {\n      features: geojsonToEmit\n    });\n  }\n\n  cleanup();\n  store.ctx.map.fire(Constants.events.RENDER, {});\n\n  function cleanup() {\n    store.isDirty = false;\n    store.clearChangedIds();\n  }\n}\n", "import toDenseArray from './lib/to_dense_array';\nimport StringSet from './lib/string_set';\nimport render from './render';\nimport {interactions} from './constants';\n\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._deletedFeaturesToEmit = [];\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.sources = {\n    hot: [],\n    cold: []\n  };\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n      });\n    }\n  };\n  this.isDirty = false;\n}\n\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function() {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function() {\n    numRenders++;\n  };\n\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function() {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function(featureId) {\n  this._changedFeatureIds.add(featureId);\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function() {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function() {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function() {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n *\n * @return {Store} this\n */\nStore.prototype.add = function(feature) {\n  this.featureChanged(feature.id);\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (this._deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        this._deletedFeaturesToEmit.push(this._features[id]);\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function(id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function() {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function(featureIds, options = {}) {\n  toDenseArray(featureIds).forEach((id) => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function(options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), { silent: options.silent });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function(featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), { silent: options.silent });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), { silent: options.silent });\n\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function(coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function() {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function() {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function() {\n  return this._selectedFeatureIds.values().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function() {\n  const selected = this._selectedCoordinates.map((coordinate) => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function(featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n*/\nStore.prototype.setFeatureProperty = function(featureId, property, value) {\n  this.get(featureId).setProperty(property, value);\n  this.featureChanged(featureId);\n};\n\nfunction refreshSelectedCoordinates(store, options) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function() {\n  interactions.forEach((interaction) => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function() {\n  Object.keys(this._mapInitialConfig).forEach((key) => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function(interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};\n", "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n", "import xtend from 'xtend';\nimport * as Constants from './constants';\n\nconst classTypes = ['mode', 'feature', 'mouse'];\n\nexport default function(ctx) {\n\n\n  const buttonElements = {};\n  let activeButton = null;\n\n  let currentMapClasses = {\n    mode: null, // e.g. mode-direct_select\n    feature: null, // e.g. feature-vertex\n    mouse: null // e.g. mouse-move\n  };\n\n  let nextMapClasses = {\n    mode: null,\n    feature: null,\n    mouse: null\n  };\n\n  function clearMapClasses() {\n    queueMapClasses({mode:null, feature:null, mouse:null});\n    updateMapClasses();\n  }\n\n  function queueMapClasses(options) {\n    nextMapClasses = xtend(nextMapClasses, options);\n  }\n\n  function updateMapClasses() {\n    if (!ctx.container) return;\n\n    const classesToRemove = [];\n    const classesToAdd = [];\n\n    classTypes.forEach((type) => {\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\n\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\n      if (nextMapClasses[type] !== null) {\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\n      }\n    });\n\n    if (classesToRemove.length > 0) {\n      ctx.container.classList.remove(...classesToRemove);\n    }\n\n    if (classesToAdd.length > 0) {\n      ctx.container.classList.add(...classesToAdd);\n    }\n\n    currentMapClasses = xtend(currentMapClasses, nextMapClasses);\n  }\n\n  function createControlButton(id, options = {}) {\n    const button = document.createElement('button');\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\n    button.setAttribute('title', options.title);\n    options.container.appendChild(button);\n\n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const clickedButton = e.target;\n      if (clickedButton === activeButton) {\n        deactivateButtons();\n        options.onDeactivate();\n        return;\n      }\n\n      setActiveButton(id);\n      options.onActivate();\n    }, true);\n\n    return button;\n  }\n\n  function deactivateButtons() {\n    if (!activeButton) return;\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\n    activeButton = null;\n  }\n\n  function setActiveButton(id) {\n    deactivateButtons();\n\n    const button = buttonElements[id];\n    if (!button) return;\n\n    if (button && id !== 'trash') {\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\n      activeButton = button;\n    }\n  }\n\n  function addButtons() {\n    const controls = ctx.options.controls;\n    const controlGroup = document.createElement('div');\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\n\n    if (!controls) return controlGroup;\n\n    if (controls[Constants.types.LINE]) {\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_LINE,\n        title: `LineString tool ${ctx.options.keybindings ? '(l)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POLYGON]) {\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\n        title: `Polygon tool ${ctx.options.keybindings ? '(p)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls[Constants.types.POINT]) {\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POINT,\n        title: `Marker tool ${ctx.options.keybindings ? '(m)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n\n    if (controls.trash) {\n      buttonElements.trash = createControlButton('trash', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\n        title: 'Delete',\n        onActivate: () => {\n          ctx.events.trash();\n        }\n      });\n    }\n\n    if (controls.combine_features) {\n      buttonElements.combine_features = createControlButton('combineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\n        title: 'Combine',\n        onActivate: () => {\n          ctx.events.combineFeatures();\n        }\n      });\n    }\n\n    if (controls.uncombine_features) {\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\n        title: 'Uncombine',\n        onActivate: () => {\n          ctx.events.uncombineFeatures();\n        }\n      });\n    }\n\n    return controlGroup;\n  }\n\n  function removeButtons() {\n    Object.keys(buttonElements).forEach((buttonId) => {\n      const button = buttonElements[buttonId];\n      if (button.parentNode) {\n        button.parentNode.removeChild(button);\n      }\n      delete buttonElements[buttonId];\n    });\n  }\n\n  return {\n    setActiveButton,\n    queueMapClasses,\n    updateMapClasses,\n    clearMapClasses,\n    addButtons,\n    removeButtons\n  };\n}\n", "import events from './events';\nimport Store from './store';\nimport ui from './ui';\nimport * as Constants from './constants';\nimport xtend from 'xtend';\n\nexport default function(ctx) {\n\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      if (process.env.NODE_ENV !== 'test') {\n        // Monkey patch to resolve breaking change to `fire` introduced by\n        // mapbox-gl-js. See mapbox/mapbox-gl-draw/issues/766.\n        const _fire = map.fire;\n        map.fire = function(type, event) {\n          // eslint-disable-next-line\n          let args = arguments;\n\n          if (_fire.length === 1 && arguments.length !== 1) {\n            args = [xtend({}, { type }, event)];\n          }\n\n          return _fire.apply(map, args);\n        };\n      }\n\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n\n\n      controlContainer = ctx.ui.addButtons();\n\n      if (ctx.options.boxSelect) {\n        map.boxZoom.disable();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n      }\n\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => { if (map.loaded()) setup.connect(); }, 16);\n      }\n\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      ctx.options.styles.forEach((style) => {\n        ctx.map.addLayer(style);\n      });\n\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach((style) => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n\n  ctx.setup = setup;\n\n  return setup;\n}\n", "import setupModeHandler from './lib/mode_handler';\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor';\nimport featuresAt from './lib/features_at';\nimport isClick from './lib/is_click';\nimport isTap from './lib/is_tap';\nimport * as Constants from './constants';\nimport objectToMode from './modes/object_to_mode';\n\nexport default function(ctx) {\n\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\n    m[k] = objectToMode(ctx.options.modes[k]);\n    return m;\n  }, {});\n\n  let mouseDownInfo = {};\n  let touchStartInfo = {};\n  const events = {};\n  let currentModeName = null;\n  let currentMode = null;\n\n  events.drag = function(event, isDrag) {\n    if (isDrag({\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      ctx.ui.queueMapClasses({ mouse: Constants.cursors.DRAG });\n      currentMode.drag(event);\n    } else {\n      event.originalEvent.stopPropagation();\n    }\n  };\n\n  events.mousedrag = function(event) {\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\n  };\n\n  events.touchdrag = function(event) {\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\n  };\n\n  events.mousemove = function(event) {\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\n    if (button === 1) {\n      return events.mousedrag(event);\n    }\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousemove(event);\n  };\n\n  events.mousedown = function(event) {\n    mouseDownInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousedown(event);\n  };\n\n  events.mouseup = function(event) {\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n\n    if (isClick(mouseDownInfo, {\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      currentMode.click(event);\n    } else {\n      currentMode.mouseup(event);\n    }\n  };\n\n  events.mouseout = function(event) {\n    currentMode.mouseout(event);\n  };\n\n  events.touchstart = function(event) {\n    // Prevent emulated mouse events because we will fully handle the touch here.\n    // This does not stop the touch events from propogating to mapbox though.\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    touchStartInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    currentMode.touchstart(event);\n  };\n\n  events.touchmove = function(event) {\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    currentMode.touchmove(event);\n    return events.touchdrag(event);\n  };\n\n  events.touchend = function(event) {\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    if (isTap(touchStartInfo, {\n      time: new Date().getTime(),\n      point: event.point\n    })) {\n      currentMode.tap(event);\n    } else {\n      currentMode.touchend(event);\n    }\n  };\n\n  // 8 - Backspace\n  // 46 - Delete\n  const isKeyModeValid = code => !(code === 8 || code === 46 || (code >= 48 && code <= 57));\n\n  events.keydown = function(event) {\n    if ((event.srcElement || event.target).classList[0] !== 'mapboxgl-canvas') return; // we only handle events on the map\n\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\n      event.preventDefault();\n      currentMode.trash();\n    } else if (isKeyModeValid(event.keyCode)) {\n      currentMode.keydown(event);\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\n      changeMode(Constants.modes.DRAW_POINT);\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\n      changeMode(Constants.modes.DRAW_LINE_STRING);\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\n      changeMode(Constants.modes.DRAW_POLYGON);\n    }\n  };\n\n  events.keyup = function(event) {\n    if (isKeyModeValid(event.keyCode)) {\n      currentMode.keyup(event);\n    }\n  };\n\n  events.zoomend = function() {\n    ctx.store.changeZoom();\n  };\n\n  events.data = function(event) {\n    if (event.dataType === 'style') {\n      const { setup, map, options, store } = ctx;\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\n      if (!hasLayers) {\n        setup.addLayers();\n        store.setDirty();\n        store.render();\n      }\n    }\n  };\n\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\n    currentMode.stop();\n\n    const modebuilder = modes[modename];\n    if (modebuilder === undefined) {\n      throw new Error(`${modename} is not valid`);\n    }\n    currentModeName = modename;\n    const mode = modebuilder(ctx, nextModeOptions);\n    currentMode = setupModeHandler(mode, ctx);\n\n    if (!eventOptions.silent) {\n      ctx.map.fire(Constants.events.MODE_CHANGE, { mode: modename});\n    }\n\n    ctx.store.setDirty();\n    ctx.store.render();\n  }\n\n  const actionState = {\n    trash: false,\n    combineFeatures: false,\n    uncombineFeatures: false\n  };\n\n  function actionable(actions) {\n    let changed = false;\n    Object.keys(actions).forEach((action) => {\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\n      if (actionState[action] !== actions[action]) changed = true;\n      actionState[action] = actions[action];\n    });\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, { actions: actionState });\n  }\n\n  const api = {\n    start() {\n      currentModeName = ctx.options.defaultMode;\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\n    },\n    changeMode,\n    actionable,\n    currentModeName() {\n      return currentModeName;\n    },\n    currentModeRender(geojson, push) {\n      return currentMode.render(geojson, push);\n    },\n    fire(name, event) {\n      if (events[name]) {\n        events[name](event);\n      }\n    },\n    addEventListeners() {\n      ctx.map.on('mousemove', events.mousemove);\n      ctx.map.on('mousedown', events.mousedown);\n      ctx.map.on('mouseup', events.mouseup);\n      ctx.map.on('data', events.data);\n\n      ctx.map.on('touchmove', events.touchmove);\n      ctx.map.on('touchstart', events.touchstart);\n      ctx.map.on('touchend', events.touchend);\n\n      ctx.container.addEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.addEventListener('keydown', events.keydown);\n        ctx.container.addEventListener('keyup', events.keyup);\n      }\n    },\n    removeEventListeners() {\n      ctx.map.off('mousemove', events.mousemove);\n      ctx.map.off('mousedown', events.mousedown);\n      ctx.map.off('mouseup', events.mouseup);\n      ctx.map.off('data', events.data);\n\n      ctx.map.off('touchmove', events.touchmove);\n      ctx.map.off('touchstart', events.touchstart);\n      ctx.map.off('touchend', events.touchend);\n\n      ctx.container.removeEventListener('mouseout', events.mouseout);\n\n      if (ctx.options.keybindings) {\n        ctx.container.removeEventListener('keydown', events.keydown);\n        ctx.container.removeEventListener('keyup', events.keyup);\n      }\n    },\n    trash(options) {\n      currentMode.trash(options);\n    },\n    combineFeatures() {\n      currentMode.combineFeatures();\n    },\n    uncombineFeatures() {\n      currentMode.uncombineFeatures();\n    },\n    getMode() {\n      return currentModeName;\n    }\n  };\n\n  return api;\n}\n", "import * as Constants from '../constants';\n\nexport function isOfMetaType(type) {\n  return function(e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\n\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\n\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE &&\n    e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\n\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\n\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\n\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\n\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\n\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\n\nexport function isTrue() {\n  return true;\n}\n", "'use strict';\n\nmodule.exports = Point;\n\n/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);\n */\nfunction Point(x, y) {\n    this.x = x;\n    this.y = y;\n}\n\nPoint.prototype = {\n\n    /**\n     * Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone\n     */\n    clone: function() { return new Point(this.x, this.y); },\n\n    /**\n     * Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    add:     function(p) { return this.clone()._add(p); },\n\n    /**\n     * Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    sub:     function(p) { return this.clone()._sub(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    multByPoint:    function(p) { return this.clone()._multByPoint(p); },\n\n    /**\n     * Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point\n     */\n    divByPoint:     function(p) { return this.clone()._divByPoint(p); },\n\n    /**\n     * Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    mult:    function(k) { return this.clone()._mult(k); },\n\n    /**\n     * Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point\n     */\n    div:     function(k) { return this.clone()._div(k); },\n\n    /**\n     * Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point\n     */\n    rotate:  function(a) { return this.clone()._rotate(a); },\n\n    /**\n     * Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point\n     */\n    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },\n\n    /**\n     * Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point\n     */\n    matMult: function(m) { return this.clone()._matMult(m); },\n\n    /**\n     * Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point\n     */\n    unit:    function() { return this.clone()._unit(); },\n\n    /**\n     * Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point\n     */\n    perp:    function() { return this.clone()._perp(); },\n\n    /**\n     * Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point\n     */\n    round:   function() { return this.clone()._round(); },\n\n    /**\n     * Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude\n     */\n    mag: function() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n\n    /**\n     * Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal\n     */\n    equals: function(other) {\n        return this.x === other.x &&\n               this.y === other.y;\n    },\n\n    /**\n     * Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    dist: function(p) {\n        return Math.sqrt(this.distSqr(p));\n    },\n\n    /**\n     * Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance\n     */\n    distSqr: function(p) {\n        var dx = p.x - this.x,\n            dy = p.y - this.y;\n        return dx * dx + dy * dy;\n    },\n\n    /**\n     * Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle\n     */\n    angle: function() {\n        return Math.atan2(this.y, this.x);\n    },\n\n    /**\n     * Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleTo: function(b) {\n        return Math.atan2(this.y - b.y, this.x - b.x);\n    },\n\n    /**\n     * Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle\n     */\n    angleWith: function(b) {\n        return this.angleWithSep(b.x, b.y);\n    },\n\n    /*\n     * Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(\u03B8) for \u03B8.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians\n     */\n    angleWithSep: function(x, y) {\n        return Math.atan2(\n            this.x * y - this.y * x,\n            this.x * x + this.y * y);\n    },\n\n    _matMult: function(m) {\n        var x = m[0] * this.x + m[1] * this.y,\n            y = m[2] * this.x + m[3] * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _add: function(p) {\n        this.x += p.x;\n        this.y += p.y;\n        return this;\n    },\n\n    _sub: function(p) {\n        this.x -= p.x;\n        this.y -= p.y;\n        return this;\n    },\n\n    _mult: function(k) {\n        this.x *= k;\n        this.y *= k;\n        return this;\n    },\n\n    _div: function(k) {\n        this.x /= k;\n        this.y /= k;\n        return this;\n    },\n\n    _multByPoint: function(p) {\n        this.x *= p.x;\n        this.y *= p.y;\n        return this;\n    },\n\n    _divByPoint: function(p) {\n        this.x /= p.x;\n        this.y /= p.y;\n        return this;\n    },\n\n    _unit: function() {\n        this._div(this.mag());\n        return this;\n    },\n\n    _perp: function() {\n        var y = this.y;\n        this.y = this.x;\n        this.x = -y;\n        return this;\n    },\n\n    _rotate: function(angle) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = cos * this.x - sin * this.y,\n            y = sin * this.x + cos * this.y;\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _rotateAround: function(angle, p) {\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle),\n            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n        this.x = x;\n        this.y = y;\n        return this;\n    },\n\n    _round: function() {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    }\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (a) {\n    if (a instanceof Point) {\n        return a;\n    }\n    if (Array.isArray(a)) {\n        return new Point(a[0], a[1]);\n    }\n    return a;\n};\n", "import Point from '@mapbox/point-geometry';\n\n/**\n * Returns a Point representing a mouse event's position\n * relative to a containing element.\n *\n * @param {MouseEvent} mouseEvent\n * @param {Node} container\n * @returns {Point}\n */\nfunction mouseEventPoint(mouseEvent, container) {\n  const rect = container.getBoundingClientRect();\n  return new Point(\n    mouseEvent.clientX - rect.left - (container.clientLeft || 0),\n    mouseEvent.clientY - rect.top - (container.clientTop || 0)\n  );\n}\n\nexport default mouseEventPoint;\n", "import * as Constants from '../constants';\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\nexport default function(parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: (selected) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}\n", "import createVertex from './create_vertex';\nimport createMidpoint from './create_midpoint';\nimport * as Constants from '../constants';\n\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\n  const { type, coordinates } = geojson.geometry;\n  const featureId = geojson.properties && geojson.properties.id;\n\n  let supplementaryPoints = [];\n\n  if (type === Constants.geojsonTypes.POINT) {\n    // For points, just create a vertex\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    // Cycle through a Polygon's rings and\n    // process each line\n    coordinates.forEach((line, lineIndex) => {\n      processLine(line, (basePath !== null) ? `${basePath}.${lineIndex}` : String(lineIndex));\n    });\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    processLine(coordinates, basePath);\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    processMultiGeometry();\n  }\n\n  function processLine(line, lineBasePath) {\n    let firstPointString = '';\n    let lastVertex = null;\n    line.forEach((point, pointIndex) => {\n      const pointPath = (lineBasePath !== undefined && lineBasePath !== null) ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\n\n      // If we're creating midpoints, check if there was a\n      // vertex before this one. If so, add a midpoint\n      // between that vertex and this one.\n      if (options.midpoints && lastVertex) {\n        const midpoint = createMidpoint(featureId, lastVertex, vertex);\n        if (midpoint) {\n          supplementaryPoints.push(midpoint);\n        }\n      }\n      lastVertex = vertex;\n\n      // A Polygon line's last point is the same as the first point. If we're on the last\n      // point, we want to draw a midpoint before it but not another vertex on it\n      // (since we already a vertex there, from the first point).\n      const stringifiedPoint = JSON.stringify(point);\n      if (firstPointString !== stringifiedPoint) {\n        supplementaryPoints.push(vertex);\n      }\n      if (pointIndex === 0) {\n        firstPointString = stringifiedPoint;\n      }\n    });\n  }\n\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) return false;\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  // Split a multi-geometry into constituent\n  // geometries, and accumulate the supplementary points\n  // for each of those constituents\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\n    coordinates.forEach((subCoordinates, index) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: geojson.properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates\n        }\n      };\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\n    });\n  }\n\n  return supplementaryPoints;\n}\n\nexport default createSupplementaryPoints;\n", "import * as Constants from '../constants';\n\nexport default function(parent, startVertex, endVertex) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n\n  const mid = {\n    lng: (startCoord[0] + endCoord[0]) / 2,\n    lat: (startCoord[1] + endCoord[1]) / 2\n  };\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}\n", "export default {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};\n", "module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n", "export default function e(t){switch(t&&t.type||null){case\"FeatureCollection\":return t.features=t.features.reduce(function(t,r){return t.concat(e(r))},[]),t;case\"Feature\":return t.geometry?e(t.geometry).map(function(e){var r={type:\"Feature\",properties:JSON.parse(JSON.stringify(t.properties)),geometry:e};return void 0!==t.id&&(r.id=t.id),r}):[t];case\"MultiPoint\":return t.coordinates.map(function(e){return{type:\"Point\",coordinates:e}});case\"MultiPolygon\":return t.coordinates.map(function(e){return{type:\"Polygon\",coordinates:e}});case\"MultiLineString\":return t.coordinates.map(function(e){return{type:\"LineString\",coordinates:e}});case\"GeometryCollection\":return t.geometries.map(e).reduce(function(e,t){return e.concat(t)},[]);case\"Point\":case\"Polygon\":case\"LineString\":return[t]}}\n//# sourceMappingURL=index.es.js.map\n", "module.exports = function flatten(list) {\n    return _flatten(list);\n\n    function _flatten(list) {\n        if (Array.isArray(list) && list.length &&\n            typeof list[0] === 'number') {\n            return [list];\n        }\n        return list.reduce(function (acc, item) {\n            if (Array.isArray(item) && Array.isArray(item[0])) {\n                return acc.concat(_flatten(item));\n            } else {\n                acc.push(item);\n                return acc;\n            }\n        }, []);\n    }\n};\n", "var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n", "var traverse = module.exports = function (obj) {\n    return new Traverse(obj);\n};\n\nfunction Traverse (obj) {\n    this.value = obj;\n}\n\nTraverse.prototype.get = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            node = undefined;\n            break;\n        }\n        node = node[key];\n    }\n    return node;\n};\n\nTraverse.prototype.has = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            return false;\n        }\n        node = node[key];\n    }\n    return true;\n};\n\nTraverse.prototype.set = function (ps, value) {\n    var node = this.value;\n    for (var i = 0; i < ps.length - 1; i ++) {\n        var key = ps[i];\n        if (!hasOwnProperty.call(node, key)) node[key] = {};\n        node = node[key];\n    }\n    node[ps[i]] = value;\n    return value;\n};\n\nTraverse.prototype.map = function (cb) {\n    return walk(this.value, cb, true);\n};\n\nTraverse.prototype.forEach = function (cb) {\n    this.value = walk(this.value, cb, false);\n    return this.value;\n};\n\nTraverse.prototype.reduce = function (cb, init) {\n    var skip = arguments.length === 1;\n    var acc = skip ? this.value : init;\n    this.forEach(function (x) {\n        if (!this.isRoot || !skip) {\n            acc = cb.call(this, acc, x);\n        }\n    });\n    return acc;\n};\n\nTraverse.prototype.paths = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.path); \n    });\n    return acc;\n};\n\nTraverse.prototype.nodes = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.node);\n    });\n    return acc;\n};\n\nTraverse.prototype.clone = function () {\n    var parents = [], nodes = [];\n    \n    return (function clone (src) {\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i] === src) {\n                return nodes[i];\n            }\n        }\n        \n        if (typeof src === 'object' && src !== null) {\n            var dst = copy(src);\n            \n            parents.push(src);\n            nodes.push(dst);\n            \n            forEach(objectKeys(src), function (key) {\n                dst[key] = clone(src[key]);\n            });\n            \n            parents.pop();\n            nodes.pop();\n            return dst;\n        }\n        else {\n            return src;\n        }\n    })(this.value);\n};\n\nfunction walk (root, cb, immutable) {\n    var path = [];\n    var parents = [];\n    var alive = true;\n    \n    return (function walker (node_) {\n        var node = immutable ? copy(node_) : node_;\n        var modifiers = {};\n        \n        var keepGoing = true;\n        \n        var state = {\n            node : node,\n            node_ : node_,\n            path : [].concat(path),\n            parent : parents[parents.length - 1],\n            parents : parents,\n            key : path.slice(-1)[0],\n            isRoot : path.length === 0,\n            level : path.length,\n            circular : null,\n            update : function (x, stopHere) {\n                if (!state.isRoot) {\n                    state.parent.node[state.key] = x;\n                }\n                state.node = x;\n                if (stopHere) keepGoing = false;\n            },\n            'delete' : function (stopHere) {\n                delete state.parent.node[state.key];\n                if (stopHere) keepGoing = false;\n            },\n            remove : function (stopHere) {\n                if (isArray(state.parent.node)) {\n                    state.parent.node.splice(state.key, 1);\n                }\n                else {\n                    delete state.parent.node[state.key];\n                }\n                if (stopHere) keepGoing = false;\n            },\n            keys : null,\n            before : function (f) { modifiers.before = f },\n            after : function (f) { modifiers.after = f },\n            pre : function (f) { modifiers.pre = f },\n            post : function (f) { modifiers.post = f },\n            stop : function () { alive = false },\n            block : function () { keepGoing = false }\n        };\n        \n        if (!alive) return state;\n        \n        function updateState() {\n            if (typeof state.node === 'object' && state.node !== null) {\n                if (!state.keys || state.node_ !== state.node) {\n                    state.keys = objectKeys(state.node)\n                }\n                \n                state.isLeaf = state.keys.length == 0;\n                \n                for (var i = 0; i < parents.length; i++) {\n                    if (parents[i].node_ === node_) {\n                        state.circular = parents[i];\n                        break;\n                    }\n                }\n            }\n            else {\n                state.isLeaf = true;\n                state.keys = null;\n            }\n            \n            state.notLeaf = !state.isLeaf;\n            state.notRoot = !state.isRoot;\n        }\n        \n        updateState();\n        \n        // use return values to update if defined\n        var ret = cb.call(state, state.node);\n        if (ret !== undefined && state.update) state.update(ret);\n        \n        if (modifiers.before) modifiers.before.call(state, state.node);\n        \n        if (!keepGoing) return state;\n        \n        if (typeof state.node == 'object'\n        && state.node !== null && !state.circular) {\n            parents.push(state);\n            \n            updateState();\n            \n            forEach(state.keys, function (key, i) {\n                path.push(key);\n                \n                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\n                \n                var child = walker(state.node[key]);\n                if (immutable && hasOwnProperty.call(state.node, key)) {\n                    state.node[key] = child.node;\n                }\n                \n                child.isLast = i == state.keys.length - 1;\n                child.isFirst = i == 0;\n                \n                if (modifiers.post) modifiers.post.call(state, child);\n                \n                path.pop();\n            });\n            parents.pop();\n        }\n        \n        if (modifiers.after) modifiers.after.call(state, state.node);\n        \n        return state;\n    })(root).node;\n}\n\nfunction copy (src) {\n    if (typeof src === 'object' && src !== null) {\n        var dst;\n        \n        if (isArray(src)) {\n            dst = [];\n        }\n        else if (isDate(src)) {\n            dst = new Date(src.getTime ? src.getTime() : src);\n        }\n        else if (isRegExp(src)) {\n            dst = new RegExp(src);\n        }\n        else if (isError(src)) {\n            dst = { message: src.message };\n        }\n        else if (isBoolean(src)) {\n            dst = new Boolean(src);\n        }\n        else if (isNumber(src)) {\n            dst = new Number(src);\n        }\n        else if (isString(src)) {\n            dst = new String(src);\n        }\n        else if (Object.create && Object.getPrototypeOf) {\n            dst = Object.create(Object.getPrototypeOf(src));\n        }\n        else if (src.constructor === Object) {\n            dst = {};\n        }\n        else {\n            var proto =\n                (src.constructor && src.constructor.prototype)\n                || src.__proto__\n                || {}\n            ;\n            var T = function () {};\n            T.prototype = proto;\n            dst = new T;\n        }\n        \n        forEach(objectKeys(src), function (key) {\n            dst[key] = src[key];\n        });\n        return dst;\n    }\n    else return src;\n}\n\nvar objectKeys = Object.keys || function keys (obj) {\n    var res = [];\n    for (var key in obj) res.push(key)\n    return res;\n};\n\nfunction toS (obj) { return Object.prototype.toString.call(obj) }\nfunction isDate (obj) { return toS(obj) === '[object Date]' }\nfunction isRegExp (obj) { return toS(obj) === '[object RegExp]' }\nfunction isError (obj) { return toS(obj) === '[object Error]' }\nfunction isBoolean (obj) { return toS(obj) === '[object Boolean]' }\nfunction isNumber (obj) { return toS(obj) === '[object Number]' }\nfunction isString (obj) { return toS(obj) === '[object String]' }\n\nvar isArray = Array.isArray || function isArray (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nforEach(objectKeys(Traverse.prototype), function (key) {\n    traverse[key] = function (obj) {\n        var args = [].slice.call(arguments, 1);\n        var t = new Traverse(obj);\n        return t[key].apply(t, args);\n    };\n});\n\nvar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\n    return key in obj;\n};\n", "module.exports = Extent;\n\nfunction Extent(bbox) {\n    if (!(this instanceof Extent)) {\n        return new Extent(bbox);\n    }\n    this._bbox = bbox || [Infinity, Infinity, -Infinity, -Infinity];\n    this._valid = !!bbox;\n}\n\nExtent.prototype.include = function(ll) {\n    this._valid = true;\n    this._bbox[0] = Math.min(this._bbox[0], ll[0]);\n    this._bbox[1] = Math.min(this._bbox[1], ll[1]);\n    this._bbox[2] = Math.max(this._bbox[2], ll[0]);\n    this._bbox[3] = Math.max(this._bbox[3], ll[1]);\n    return this;\n};\n\nExtent.prototype.equals = function(_) {\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    return this._bbox[0] == other[0] &&\n        this._bbox[1] == other[1] &&\n        this._bbox[2] == other[2] &&\n        this._bbox[3] == other[3];\n};\n\nExtent.prototype.center = function(_) {\n    if (!this._valid) return null;\n    return [\n        (this._bbox[0] + this._bbox[2]) / 2,\n        (this._bbox[1] + this._bbox[3]) / 2]\n};\n\nExtent.prototype.union = function(_) {\n    this._valid = true;\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    this._bbox[0] = Math.min(this._bbox[0], other[0]);\n    this._bbox[1] = Math.min(this._bbox[1], other[1]);\n    this._bbox[2] = Math.max(this._bbox[2], other[2]);\n    this._bbox[3] = Math.max(this._bbox[3], other[3]);\n    return this;\n};\n\nExtent.prototype.bbox = function() {\n    if (!this._valid) return null;\n    return this._bbox;\n};\n\nExtent.prototype.contains = function(ll) {\n    if (!ll) return this._fastContains();\n    if (!this._valid) return null;\n    var lon = ll[0], lat = ll[1];\n    return this._bbox[0] <= lon &&\n        this._bbox[1] <= lat &&\n        this._bbox[2] >= lon &&\n        this._bbox[3] >= lat;\n};\n\nExtent.prototype.intersect = function(_) {\n    if (!this._valid) return null;\n\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n\n    return !(\n      this._bbox[0] > other[2] ||\n      this._bbox[2] < other[0] ||\n      this._bbox[3] < other[1] ||\n      this._bbox[1] > other[3]\n    );\n};\n\nExtent.prototype._fastContains = function() {\n    if (!this._valid) return new Function('return null;');\n    var body = 'return ' +\n        this._bbox[0] + '<= ll[0] &&' +\n        this._bbox[1] + '<= ll[1] &&' +\n        this._bbox[2] + '>= ll[0] &&' +\n        this._bbox[3] + '>= ll[1]';\n    return new Function('ll', body);\n};\n\nExtent.prototype.polygon = function() {\n    if (!this._valid) return null;\n    return {\n        type: 'Polygon',\n        coordinates: [\n            [\n                // W, S\n                [this._bbox[0], this._bbox[1]],\n                // E, S\n                [this._bbox[2], this._bbox[1]],\n                // E, N\n                [this._bbox[2], this._bbox[3]],\n                // W, N\n                [this._bbox[0], this._bbox[3]],\n                // W, S\n                [this._bbox[0], this._bbox[1]]\n            ]\n        ]\n    };\n};\n", "var geojsonCoords = require('@mapbox/geojson-coords'),\n    traverse = require('traverse'),\n    extent = require('@mapbox/extent');\n\nvar geojsonTypesByDataAttributes = {\n    features: ['FeatureCollection'],\n    coordinates: ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'],\n    geometry: ['Feature'],\n    geometries: ['GeometryCollection']\n}\n\nvar dataAttributes = Object.keys(geojsonTypesByDataAttributes);\n\nmodule.exports = function(_) {\n    return getExtent(_).bbox();\n};\n\nmodule.exports.polygon = function(_) {\n    return getExtent(_).polygon();\n};\n\nmodule.exports.bboxify = function(_) {\n    return traverse(_).map(function(value) {\n        if (!value) return ;\n\n        var isValid = dataAttributes.some(function(attribute){\n            if(value[attribute]) {\n                return geojsonTypesByDataAttributes[attribute].indexOf(value.type) !== -1;\n            }\n            return false;\n        });\n\n        if(isValid){\n            value.bbox = getExtent(value).bbox();\n            this.update(value);\n        }\n\n    });\n};\n\nfunction getExtent(_) {\n    var ext = extent(),\n        coords = geojsonCoords(_);\n    for (var i = 0; i < coords.length; i++) ext.include(coords[i]);\n    return ext;\n}\n", "import extent from '@mapbox/geojson-extent';\nimport * as Constants from '../constants';\n\nconst {\n  LAT_MIN,\n  LAT_MAX,\n  LAT_RENDERED_MIN,\n  LAT_RENDERED_MAX,\n  LNG_MIN,\n  LNG_MAX\n} = Constants;\n\n// Ensure that we do not drag north-south far enough for\n// - any part of any feature to exceed the poles\n// - any feature to be completely lost in the space between the projection's\n//   edge and the poles, such that it couldn't be re-selected and moved back\nexport default function(geojsonFeatures, delta) {\n  // \"inner edge\" = a feature's latitude closest to the equator\n  let northInnerEdge = LAT_MIN;\n  let southInnerEdge = LAT_MAX;\n  // \"outer edge\" = a feature's latitude furthest from the equator\n  let northOuterEdge = LAT_MIN;\n  let southOuterEdge = LAT_MAX;\n\n  let westEdge = LNG_MAX;\n  let eastEdge = LNG_MIN;\n\n  geojsonFeatures.forEach((feature) => {\n    const bounds = extent(feature);\n    const featureSouthEdge = bounds[1];\n    const featureNorthEdge = bounds[3];\n    const featureWestEdge = bounds[0];\n    const featureEastEdge = bounds[2];\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\n  });\n\n\n  // These changes are not mutually exclusive: we might hit the inner\n  // edge but also have hit the outer edge and therefore need\n  // another readjustment\n  const constrainedDelta = delta;\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\n  }\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\n  }\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\n  }\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\n  }\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n\n  return constrainedDelta;\n}\n", "import constrainFeatureMovement from './constrain_feature_movement';\nimport * as Constants from '../constants';\n\nexport default function(features, delta) {\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\n\n  features.forEach((feature) => {\n    const currentCoordinates = feature.getCoordinates();\n\n    const moveCoordinate = (coord) => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\n\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n\n    feature.incomingCoords(nextCoordinates);\n  });\n}\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport mouseEventPoint from '../lib/mouse_event_point';\nimport createSupplementaryPoints from '../lib/create_supplementary_points';\nimport StringSet from '../lib/string_set';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport moveFeatures from '../lib/move_features';\nimport * as Constants from '../constants';\n\nconst SimpleSelect = {};\n\nSimpleSelect.onSetup = function(opts) {\n  // turn the opts into state.\n  const state = {\n    dragMoveLocation: null,\n    boxSelectStartLocation: null,\n    boxSelectElement: undefined,\n    boxSelecting: false,\n    canBoxSelect: false,\n    dragMoving: false,\n    canDragMove: false,\n    initiallySelectedFeatureIds: opts.featureIds || []\n  };\n\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\n  this.fireActionable();\n\n  this.setActionableState({\n    combineFeatures: true,\n    uncombineFeatures: true,\n    trash: true\n  });\n\n  return state;\n};\n\nSimpleSelect.fireUpdate = function() {\n  this.map.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.MOVE,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nSimpleSelect.fireActionable = function() {\n  const selectedFeatures = this.getSelected();\n\n  const multiFeatures = selectedFeatures.filter(\n    feature => this.isInstanceOf('MultiFeature', feature)\n  );\n\n  let combineFeatures = false;\n\n  if (selectedFeatures.length > 1) {\n    combineFeatures = true;\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\n    selectedFeatures.forEach((feature) => {\n      if (feature.type.replace('Multi', '') !== featureType) {\n        combineFeatures = false;\n      }\n    });\n  }\n\n  const uncombineFeatures = multiFeatures.length > 0;\n  const trash = selectedFeatures.length > 0;\n\n  this.setActionableState({\n    combineFeatures, uncombineFeatures, trash\n  });\n};\n\nSimpleSelect.getUniqueIds = function(allFeatures) {\n  if (!allFeatures.length) return [];\n  const ids = allFeatures.map(s => s.properties.id)\n    .filter(id => id !== undefined)\n    .reduce((memo, id) => {\n      memo.add(id);\n      return memo;\n    }, new StringSet());\n\n  return ids.values();\n};\n\nSimpleSelect.stopExtendedInteractions = function(state) {\n  if (state.boxSelectElement) {\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\n    state.boxSelectElement = null;\n  }\n\n  this.map.dragPan.enable();\n\n  state.boxSelecting = false;\n  state.canBoxSelect = false;\n  state.dragMoving = false;\n  state.canDragMove = false;\n};\n\nSimpleSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n};\n\nSimpleSelect.onMouseMove = function(state) {\n  // On mousemove that is not a drag, stop extended interactions.\n  // This is useful if you drag off the canvas, release the button,\n  // then move the mouse back over the canvas --- we don't allow the\n  // interaction to continue then, but we do let it continue if you held\n  // the mouse button that whole time\n  this.stopExtendedInteractions(state);\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) return this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nSimpleSelect.onTap = SimpleSelect.onClick = function(state, e) {\n  // Click (with or without shift) on no feature\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\n};\n\nSimpleSelect.clickAnywhere = function (state) {\n  // Clear the re-render selection\n  const wasSelected = this.getSelectedIds();\n  if (wasSelected.length) {\n    this.clearSelectedFeatures();\n    wasSelected.forEach(id => this.doRender(id));\n  }\n  doubleClickZoom.enable(this);\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.clickOnVertex = function(state, e) {\n  // Enter direct select mode\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\n    featureId: e.featureTarget.properties.parent,\n    coordPath: e.featureTarget.properties.coord_path,\n    startPos: e.lngLat\n  });\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n};\n\nSimpleSelect.startOnActiveFeature = function(state, e) {\n  // Stop any already-underway extended interactions\n  this.stopExtendedInteractions(state);\n\n  // Disable map.dragPan immediately so it can't start\n  this.map.dragPan.disable();\n\n  // Re-render it and enable drag move\n  this.doRender(e.featureTarget.properties.id);\n\n  // Set up the state for drag moving\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.clickOnFeature = function(state, e) {\n  // Stop everything\n  doubleClickZoom.disable(this);\n  this.stopExtendedInteractions(state);\n\n  const isShiftClick = CommonSelectors.isShiftDown(e);\n  const selectedFeatureIds = this.getSelectedIds();\n  const featureId = e.featureTarget.properties.id;\n  const isFeatureSelected = this.isSelected(featureId);\n\n  // Click (without shift) on any selected feature but a point\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\n    // Enter direct select mode\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\n      featureId\n    });\n  }\n\n  // Shift-click on a selected feature\n  if (isFeatureSelected && isShiftClick) {\n    // Deselect it\n    this.deselect(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n    if (selectedFeatureIds.length === 1) {\n      doubleClickZoom.enable(this);\n    }\n  // Shift-click on an unselected feature\n  } else if (!isFeatureSelected && isShiftClick) {\n    // Add it to the selection\n    this.select(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  // Click (without shift) on an unselected feature\n  } else if (!isFeatureSelected && !isShiftClick) {\n    // Make it the only selected feature\n    selectedFeatureIds.forEach(id => this.doRender(id));\n    this.setSelected(featureId);\n    this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  }\n\n  // No matter what, re-render the clicked feature\n  this.doRender(featureId);\n};\n\nSimpleSelect.onMouseDown = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\n};\n\nSimpleSelect.startBoxSelect = function(state, e) {\n  this.stopExtendedInteractions(state);\n  this.map.dragPan.disable();\n  // Enable box select\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  state.canBoxSelect = true;\n};\n\nSimpleSelect.onTouchStart = function(state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n};\n\nSimpleSelect.onDrag = function(state, e) {\n  if (state.canDragMove) return this.dragMove(state, e);\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\n};\n\nSimpleSelect.whileBoxSelect = function(state, e) {\n  state.boxSelecting = true;\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n\n  // Create the box node if it doesn't exist\n  if (!state.boxSelectElement) {\n    state.boxSelectElement = document.createElement('div');\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n    this.map.getContainer().appendChild(state.boxSelectElement);\n  }\n\n  // Adjust the box node's width and xy position\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\n  const translateValue = `translate(${minX}px, ${minY}px)`;\n  state.boxSelectElement.style.transform = translateValue;\n  state.boxSelectElement.style.WebkitTransform = translateValue;\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\n};\n\nSimpleSelect.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelect.onMouseUp = function(state, e) {\n  // End any extended interactions\n  if (state.dragMoving) {\n    this.fireUpdate();\n  } else if (state.boxSelecting) {\n    const bbox = [\n      state.boxSelectStartLocation,\n      mouseEventPoint(e.originalEvent, this.map.getContainer())\n    ];\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\n    const idsToSelect = this.getUniqueIds(featuresInBox)\n      .filter(id => !this.isSelected(id));\n\n    if (idsToSelect.length) {\n      this.select(idsToSelect);\n      idsToSelect.forEach(id => this.doRender(id));\n      this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n    }\n  }\n  this.stopExtendedInteractions(state);\n};\n\nSimpleSelect.toDisplayFeatures = function(state, geojson, display) {\n  geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n    Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n    geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  createSupplementaryPoints(geojson).forEach(display);\n};\n\nSimpleSelect.onTrash = function() {\n  this.deleteFeature(this.getSelectedIds());\n  this.fireActionable();\n};\n\nSimpleSelect.onCombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n\n  const coordinates = [], featuresCombined = [];\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (feature.type.replace('Multi', '') !== featureType) {\n      return;\n    }\n    if (feature.type.includes('Multi')) {\n      feature.getCoordinates().forEach((subcoords) => {\n        coordinates.push(subcoords);\n      });\n    } else {\n      coordinates.push(feature.getCoordinates());\n    }\n\n    featuresCombined.push(feature.toGeoJSON());\n  }\n\n  if (featuresCombined.length > 1) {\n    const multiFeature = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: featuresCombined[0].properties,\n      geometry: {\n        type: `Multi${featureType}`,\n        coordinates\n      }\n    });\n\n    this.addFeature(multiFeature);\n    this.deleteFeature(this.getSelectedIds(), { silent: true });\n    this.setSelected([multiFeature.id]);\n\n    this.map.fire(Constants.events.COMBINE_FEATURES, {\n      createdFeatures: [multiFeature.toGeoJSON()],\n      deletedFeatures: featuresCombined\n    });\n  }\n  this.fireActionable();\n};\n\nSimpleSelect.onUncombineFeatures = function() {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0) return;\n\n  const createdFeatures = [];\n  const featuresUncombined = [];\n\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n\n    if (this.isInstanceOf('MultiFeature', feature)) {\n      feature.getFeatures().forEach((subFeature) => {\n        this.addFeature(subFeature);\n        subFeature.properties = feature.properties;\n        createdFeatures.push(subFeature.toGeoJSON());\n        this.select([subFeature.id]);\n      });\n      this.deleteFeature(feature.id, { silent: true });\n      featuresUncombined.push(feature.toGeoJSON());\n    }\n  }\n\n  if (createdFeatures.length > 1) {\n    this.map.fire(Constants.events.UNCOMBINE_FEATURES, {\n      createdFeatures,\n      deletedFeatures: featuresUncombined\n    });\n  }\n  this.fireActionable();\n};\n\nexport default SimpleSelect;\n", "import {noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown} from '../lib/common_selectors';\nimport createSupplementaryPoints from '../lib/create_supplementary_points';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport moveFeatures from '../lib/move_features';\n\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\n\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function() {\n  this.map.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\n\nDirectSelect.fireActionable = function(state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\n\nDirectSelect.startDragging = function(state, e) {\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.stopDragging = function(state) {\n  this.map.dragPan.enable();\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\n\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\n\nDirectSelect.onMidpoint = function(state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\n\nDirectSelect.pathsToCoordinates = function(featureId, paths) {\n  return paths.map(coord_path => ({ feature_id: featureId, coord_path }));\n};\n\nDirectSelect.onFeature = function(state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);\n  else this.stopDragging(state);\n};\n\nDirectSelect.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.dragVertex = function(state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\n\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function(opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : []\n  };\n\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return state;\n};\n\nDirectSelect.onStop = function() {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\n\nDirectSelect.toDisplayFeatures = function(state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\n\nDirectSelect.onTrash = function(state) {\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n  // in reverse order so that we can remove by index safely.\n  state.selectedCoordPaths\n    .sort((a, b) => b.localeCompare(a, 'en', { numeric: true }))\n    .forEach(id => state.feature.removeCoordinate(id));\n  this.fireUpdate();\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  this.fireActionable(state);\n  if (state.feature.isValid() === false) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  }\n};\n\nDirectSelect.onMouseMove = function(state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else if (onVertex && !noCoords) this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  else this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  this.stopDragging(state);\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onMouseOut = function(state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n\n  // Skip render\n  return true;\n};\n\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function(state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\n\nDirectSelect.onDrag = function(state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);\n  else this.dragFeature(state, e, delta);\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectSelect.onClick = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\n\nDirectSelect.onTap = function(state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\n\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function(state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\n\nexport default DirectSelect;\n\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport * as Constants from '../constants';\n\nconst DrawPoint = {};\n\nDrawPoint.onSetup = function() {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n\n  this.addFeature(point);\n\n  this.clearSelectedFeatures();\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POINT);\n\n  this.setActionableState({\n    trash: true\n  });\n\n  return { point };\n};\n\nDrawPoint.stopDrawingAndRemove = function(state) {\n  this.deleteFeature([state.point.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawPoint.onTap = DrawPoint.onClick = function(state, e) {\n  this.updateUIClasses({ mouse: Constants.cursors.MOVE });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.map.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.point.id] });\n};\n\nDrawPoint.onStop = function(state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], { silent: true });\n  }\n};\n\nDrawPoint.toDisplayFeatures = function(state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = (isActivePoint) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\n\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\n\nDrawPoint.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\n\nexport default DrawPoint;\n", "function isEventAtCoordinates(event, coordinates) {\n  if (!event.lngLat) return false;\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\n}\n\nexport default isEventAtCoordinates;\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates';\nimport createVertex from '../lib/create_vertex';\n\nconst DrawPolygon = {};\n\nDrawPolygon.onSetup = function() {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nDrawPolygon.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  state.currentVertexPosition++;\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n};\n\nDrawPolygon.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nDrawPolygon.onMouseMove = function(state, e) {\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawPolygon.onTap = DrawPolygon.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  return this.clickAnywhere(state, e);\n};\n\nDrawPolygon.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  } else if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n  }\n};\n\nDrawPolygon.onStop = function(state) {\n  this.updateUIClasses({ mouse: Constants.cursors.NONE });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.polygon.id) === undefined) return;\n\n  //remove last added coordinate\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\n  if (state.polygon.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.polygon.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.polygon.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawPolygon.toDisplayFeatures = function(state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePolygon) return display(geojson);\n\n  // Don't render a polygon until it has two positions\n  // (and a 3rd which is just the first repeated)\n  if (geojson.geometry.coordinates.length === 0) return;\n\n  const coordinateCount = geojson.geometry.coordinates[0].length;\n  // 2 coordinates after selecting a draw type\n  // 3 after creating the first point\n  if (coordinateCount < 3) {\n    return;\n  }\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\n  if (coordinateCount > 3) {\n    // Add a start position marker to the map, clicking on this will finish the feature\n    // This should only be shown when we're in a valid spot\n    const endPos = geojson.geometry.coordinates[0].length - 3;\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\n  }\n  if (coordinateCount <= 4) {\n    // If we've only drawn two positions (plus the closer),\n    // make a LineString instead of a Polygon\n    const lineCoordinates = [\n      [geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]\n    ];\n    // create an initial vertex so that we can track the first point on mobile devices\n    display({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: geojson.properties,\n      geometry: {\n        coordinates: lineCoordinates,\n        type: Constants.geojsonTypes.LINE_STRING\n      }\n    });\n    if (coordinateCount === 3) {\n      return;\n    }\n  }\n  // render the Polygon\n  return display(geojson);\n};\n\nDrawPolygon.onTrash = function(state) {\n  this.deleteFeature([state.polygon.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nexport default DrawPolygon;\n", "import * as CommonSelectors from '../lib/common_selectors';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates';\nimport doubleClickZoom from '../lib/double_click_zoom';\nimport * as Constants from '../constants';\nimport createVertex from '../lib/create_vertex';\n\nconst DrawLineString = {};\n\nDrawLineString.onSetup = function(opts) {\n  opts = opts || {};\n  const featureId = opts.featureId;\n\n  let line, currentVertexPosition;\n  let direction = 'forward';\n  if (featureId) {\n    line = this.getFeature(featureId);\n    if (!line) {\n      throw new Error('Could not find a feature with the provided featureId');\n    }\n    let from = opts.from;\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\n      from = from.geometry;\n    }\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\n      from = from.coordinates;\n    }\n    if (!from || !Array.isArray(from)) {\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\n    }\n    const lastCoord = line.coordinates.length - 1;\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\n      currentVertexPosition = lastCoord + 1;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\n      direction = 'backwards';\n      currentVertexPosition = 0;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\n    } else {\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\n    }\n  } else {\n    line = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.LINE_STRING,\n        coordinates: []\n      }\n    });\n    currentVertexPosition = 0;\n    this.addFeature(line);\n  }\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.LINE);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    line,\n    currentVertexPosition,\n    direction\n  };\n};\n\nDrawLineString.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) ||\n      state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  }\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (state.direction === 'forward') {\n    state.currentVertexPosition++;\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  } else {\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n  }\n};\n\nDrawLineString.clickOnVertex = function(state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n};\n\nDrawLineString.onMouseMove = function(state, e) {\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({ mouse: Constants.cursors.POINTER });\n  }\n};\n\nDrawLineString.onTap = DrawLineString.onClick = function(state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  this.clickAnywhere(state, e);\n};\n\nDrawLineString.onKeyUp = function(state, e) {\n  if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.line.id] });\n  } else if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  }\n};\n\nDrawLineString.onStop = function(state) {\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.line.id) === undefined) return;\n\n  //remove last added coordinate\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\n  if (state.line.isValid()) {\n    this.map.fire(Constants.events.CREATE, {\n      features: [state.line.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.line.id], { silent: true });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, { silent: true });\n  }\n};\n\nDrawLineString.onTrash = function(state) {\n  this.deleteFeature([state.line.id], { silent: true });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\n\nDrawLineString.toDisplayFeatures = function(state, geojson, display) {\n  const isActiveLine = geojson.properties.id === state.line.id;\n  geojson.properties.active = (isActiveLine) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActiveLine) return display(geojson);\n  // Only render the line if it has at least one real coordinate\n  if (geojson.geometry.coordinates.length < 2) return;\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(\n    state.line.id,\n    geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1],\n    `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`,\n    false\n  ));\n\n  display(geojson);\n};\n\nexport default DrawLineString;\n", "\nimport simple_select from './simple_select';\nimport direct_select from './direct_select';\nimport draw_point from './draw_point';\nimport draw_polygon from './draw_polygon';\nimport draw_line_string from './draw_line_string';\n\nexport default {\n  simple_select,\n  direct_select,\n  draw_point,\n  draw_polygon,\n  draw_line_string,\n};\n", "import xtend from 'xtend';\nimport * as Constants from './constants';\n\nimport styles from './lib/theme';\nimport modes from './modes/index';\n\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false\n};\n\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\n\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\n\nfunction addSources(styles, sourceBucket) {\n  return styles.map((style) => {\n    if (style.source) return style;\n    return xtend(style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: (sourceBucket === 'hot') ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\n\nexport default function(options = {}) {\n  let withDefaults = xtend(options);\n\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = xtend(hideControls, options.controls);\n  } else {\n    withDefaults.controls = xtend(showControls, options.controls);\n  }\n\n  withDefaults = xtend(defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n\n  return withDefaults;\n}\n", "export default [\n  {\n    'id': 'gl-draw-polygon-fill-inactive',\n    'type': 'fill',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'fill-color': '#3bb2d0',\n      'fill-outline-color': '#3bb2d0',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-active',\n    'type': 'fill',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#fbb03b',\n      'fill-outline-color': '#fbb03b',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-midpoint',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'midpoint']],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Polygon'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-active',\n    'type': 'line',\n    'filter': ['all', ['==', 'active', 'true'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-inactive',\n    'type': 'line',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'LineString'],\n      ['!=', 'mode', 'static']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#3bb2d0',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-active',\n    'type': 'line',\n    'filter': ['all',\n      ['==', '$type', 'LineString'],\n      ['==', 'active', 'true']\n    ],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#fbb03b',\n      'line-dasharray': [0.2, 2],\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-and-line-vertex-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'meta', 'vertex'],\n      ['==', '$type', 'Point'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-point-point-stroke-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 5,\n      'circle-opacity': 1,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-inactive',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', 'active', 'false'],\n      ['==', '$type', 'Point'],\n      ['==', 'meta', 'feature'],\n      ['!=', 'mode', 'static']\n    ],\n    'paint': {\n      'circle-radius': 3,\n      'circle-color': '#3bb2d0'\n    }\n  },\n  {\n    'id': 'gl-draw-point-stroke-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['==', 'active', 'true'],\n      ['!=', 'meta', 'midpoint']\n    ],\n    'paint': {\n      'circle-radius': 7,\n      'circle-color': '#fff'\n    }\n  },\n  {\n    'id': 'gl-draw-point-active',\n    'type': 'circle',\n    'filter': ['all',\n      ['==', '$type', 'Point'],\n      ['!=', 'meta', 'midpoint'],\n      ['==', 'active', 'true']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#fbb03b'\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-fill-static',\n    'type': 'fill',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'paint': {\n      'fill-color': '#404040',\n      'fill-outline-color': '#404040',\n      'fill-opacity': 0.1\n    }\n  },\n  {\n    'id': 'gl-draw-polygon-stroke-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Polygon']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-line-static',\n    'type': 'line',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'LineString']],\n    'layout': {\n      'line-cap': 'round',\n      'line-join': 'round'\n    },\n    'paint': {\n      'line-color': '#404040',\n      'line-width': 2\n    }\n  },\n  {\n    'id': 'gl-draw-point-static',\n    'type': 'circle',\n    'filter': ['all', ['==', 'mode', 'static'], ['==', '$type', 'Point']],\n    'paint': {\n      'circle-radius': 5,\n      'circle-color': '#404040'\n    }\n  }\n];\n", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = isEqual;\n", "import isEqual from 'lodash.isequal';\nimport normalize from '@mapbox/geojson-normalize';\nimport hat from 'hat';\nimport featuresAt from './lib/features_at';\nimport stringSetsAreEqual from './lib/string_sets_are_equal';\nimport * as Constants from './constants';\nimport StringSet from './lib/string_set';\n\nimport Polygon from './feature_types/polygon';\nimport LineString from './feature_types/line_string';\nimport Point from './feature_types/point';\nimport MultiFeature from './feature_types/multi_feature';\n\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\n\nexport default function(ctx, api) {\n\n  api.modes = Constants.modes;\n\n  api.getFeatureIdsAt = function(point) {\n    const features = featuresAt.click({ point }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n\n  api.getSelectedIds = function () {\n    return ctx.store.getSelectedIds();\n  };\n\n  api.getSelected = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.getSelectedPoints = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n\n  api.set = function(featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n\n    renderBatch();\n    return newIds;\n  };\n\n  api.add = function (geojson) {\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n\n    const ids = featureCollection.features.map((feature) => {\n      feature.id = feature.id || hat();\n\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature);\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        internalFeature.properties = feature.properties;\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n\n    ctx.store.render();\n    return ids;\n  };\n\n\n  api.get = function (id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n\n  api.getAll = function() {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n\n  api.delete = function(featureIds) {\n    ctx.store.delete(featureIds, { silent: true });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent: true });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.deleteAll = function() {\n    ctx.store.delete(ctx.store.getAllIds(), { silent: true });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, { silent: true });\n    } else {\n      ctx.store.render();\n    }\n\n    return api;\n  };\n\n  api.changeMode = function(mode, modeOptions = {}) {\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual((modeOptions.featureIds || []), ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, { silent: true });\n      ctx.store.render();\n      return api;\n    }\n\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT &&\n      modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n\n    ctx.events.changeMode(mode, modeOptions, { silent: true });\n    return api;\n  };\n\n  api.getMode = function() {\n    return ctx.events.getMode();\n  };\n\n  api.trash = function() {\n    ctx.events.trash({ silent: true });\n    return api;\n  };\n\n  api.combineFeatures = function() {\n    ctx.events.combineFeatures({ silent: true });\n    return api;\n  };\n\n  api.uncombineFeatures = function() {\n    ctx.events.uncombineFeatures({ silent: true });\n    return api;\n  };\n\n  api.setFeatureProperty = function(featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value);\n    return api;\n  };\n\n  return api;\n}\n", "export default function(a, b) {\n  if (a.length !== b.length) return false;\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\n}\n", "import runSetup from './src/setup';\nimport setupOptions from './src/options';\nimport setupAPI from './src/api';\nimport * as Constants from './src/constants';\n\nconst setupDraw = function(options, api) {\n  options = setupOptions(options);\n\n  const ctx = {\n    options\n  };\n\n  api = setupAPI(ctx, api);\n  ctx.api = api;\n\n  const setup = runSetup(ctx);\n\n  api.onAdd = setup.onAdd;\n  api.onRemove = setup.onRemove;\n  api.types = Constants.types;\n  api.options = options;\n\n  return api;\n};\n\nfunction MapboxDraw(options) {\n  setupDraw(options, this);\n}\n\nimport modes from './src/modes/index';\nMapboxDraw.modes = modes;\n\nexport default MapboxDraw;\n", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nmodule.exports = {\n  classes: {\n    CONTROL_BASE: \"mapboxgl-ctrl\",\n    CONTROL_PREFIX: \"mapboxgl-ctrl-\",\n    CONTROL_BUTTON: \"mapbox-gl-draw_ctrl-draw-btn\",\n    CONTROL_BUTTON_LINE: \"mapbox-gl-draw_line\",\n    CONTROL_BUTTON_POLYGON: \"mapbox-gl-draw_polygon\",\n    CONTROL_BUTTON_POINT: \"mapbox-gl-draw_point\",\n    CONTROL_BUTTON_TRASH: \"mapbox-gl-draw_trash\",\n    CONTROL_BUTTON_COMBINE_FEATURES: \"mapbox-gl-draw_combine\",\n    CONTROL_BUTTON_UNCOMBINE_FEATURES: \"mapbox-gl-draw_uncombine\",\n    CONTROL_GROUP: \"mapboxgl-ctrl-group\",\n    ATTRIBUTION: \"mapboxgl-ctrl-attrib\",\n    ACTIVE_BUTTON: \"active\",\n    BOX_SELECT: \"mapbox-gl-draw_boxselect\",\n  },\n  sources: {\n    HOT: \"mapbox-gl-draw-hot\",\n    COLD: \"mapbox-gl-draw-cold\",\n  },\n  cursors: {\n    ADD: \"add\",\n    MOVE: \"move\",\n    DRAG: \"drag\",\n    POINTER: \"pointer\",\n    NONE: \"none\",\n  },\n  types: {\n    POLYGON: \"polygon\",\n    LINE: \"line_string\",\n    POINT: \"point\",\n  },\n  geojsonTypes: {\n    FEATURE: \"Feature\",\n    POLYGON: \"Polygon\",\n    LINE_STRING: \"LineString\",\n    POINT: \"Point\",\n    FEATURE_COLLECTION: \"FeatureCollection\",\n    MULTI_PREFIX: \"Multi\",\n    MULTI_POINT: \"MultiPoint\",\n    MULTI_LINE_STRING: \"MultiLineString\",\n    MULTI_POLYGON: \"MultiPolygon\",\n  },\n  modes: {\n    DRAW_LINE_STRING: \"draw_line_string\",\n    DRAW_POLYGON: \"draw_polygon\",\n    DRAW_POINT: \"draw_point\",\n    SIMPLE_SELECT: \"simple_select\",\n    DIRECT_SELECT: \"direct_select\",\n    STATIC: \"static\",\n  },\n  events: {\n    CREATE: \"draw.create\",\n    DELETE: \"draw.delete\",\n    UPDATE: \"draw.update\",\n    SELECTION_CHANGE: \"draw.selectionchange\",\n    MODE_CHANGE: \"draw.modechange\",\n    ACTIONABLE: \"draw.actionable\",\n    RENDER: \"draw.render\",\n    COMBINE_FEATURES: \"draw.combine\",\n    UNCOMBINE_FEATURES: \"draw.uncombine\",\n  },\n  updateActions: {\n    MOVE: \"move\",\n    CHANGE_COORDINATES: \"change_coordinates\",\n  },\n  meta: {\n    FEATURE: \"feature\",\n    MIDPOINT: \"midpoint\",\n    VERTEX: \"vertex\",\n  },\n  activeStates: {\n    ACTIVE: \"true\",\n    INACTIVE: \"false\",\n  },\n  interactions: [\"scrollZoom\", \"boxZoom\", \"dragRotate\", \"dragPan\", \"keyboard\", \"doubleClickZoom\", \"touchZoomRotate\"],\n  LAT_MIN: -90,\n  LAT_RENDERED_MIN: -85,\n  LAT_MAX: 90,\n  LAT_RENDERED_MAX: 85,\n  LNG_MIN: -270,\n  LNG_MAX: 270,\n};\n", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nmodule.exports = {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue(\"doubleClickZoom\")) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  },\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nexports.getCoord = getCoord;\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\nexports.getCoords = getCoords;\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        helpers_1.isNumber(coordinates[0]) &&\n        helpers_1.isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\nexports.containsNumber = containsNumber;\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\nexports.geojsonType = geojsonType;\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\nexports.featureOf = featureOf;\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\nexports.collectionOf = collectionOf;\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\nexports.getGeom = getGeom;\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\nexports.getType = getType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nfunction destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = invariant_1.getCoord(origin);\n    var longitude1 = helpers_1.degreesToRadians(coordinates1[0]);\n    var latitude1 = helpers_1.degreesToRadians(coordinates1[1]);\n    var bearingRad = helpers_1.degreesToRadians(bearing);\n    var radians = helpers_1.lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = helpers_1.radiansToDegrees(longitude2);\n    var lat = helpers_1.radiansToDegrees(latitude2);\n    return helpers_1.point([lng, lat], options.properties);\n}\nexports.default = destination;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar destination_1 = __importDefault(require(\"@turf/destination\"));\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    if (options === void 0) { options = {}; }\n    // default params\n    var steps = options.steps || 64;\n    var properties = options.properties\n        ? options.properties\n        : !Array.isArray(center) && center.type === \"Feature\" && center.properties\n            ? center.properties\n            : {};\n    // main\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination_1.default(center, radius, (i * -360) / steps, options).geometry\n            .coordinates);\n    }\n    coordinates.push(coordinates[0]);\n    return helpers_1.polygon([coordinates], properties);\n}\nexports.default = circle;\n", "const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst Constants = require(\"../../lib/utils/constants\");\nconst doubleClickZoom = require(\"../../lib/utils/double_click_zoom\");\nconst circle = require('@turf/circle').default;\n\nconst CircleMode = {...MapboxDraw.modes.draw_polygon};\nconst DEFAULT_RADIUS_IN_KM = 2;\n\nCircleMode.onSetup = function(opts) {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      isCircle: true,\n      center: []\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    initialRadiusInKm: opts.initialRadiusInKm || DEFAULT_RADIUS_IN_KM,\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nCircleMode.clickAnywhere = function(state, e) {\n  if (state.currentVertexPosition === 0) {\n    state.currentVertexPosition++;\n    const center = [e.lngLat.lng, e.lngLat.lat];\n    const circleFeature = circle(center, state.initialRadiusInKm);\n    state.polygon.incomingCoords(circleFeature.geometry.coordinates);\n    state.polygon.properties.center = center;\n    state.polygon.properties.radiusInKm = state.initialRadiusInKm;\n  }\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nmodule.exports = CircleMode;", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nmodule.exports = {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.dragPan || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue(\"dragPan\")) return;\n      ctx.map.dragPan.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.dragPan.disable();\n    }, 0);\n  },\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\nvar helpers_1 = require(\"@turf/helpers\");\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = invariant_1.getCoord(from);\n    var coordinates2 = invariant_1.getCoord(to);\n    var dLat = helpers_1.degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = helpers_1.degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = helpers_1.degreesToRadians(coordinates1[1]);\n    var lat2 = helpers_1.degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return helpers_1.radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexports.default = distance;\n", "const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst Constants = require('../utils/constants');\nconst doubleClickZoom = require(\"../utils/double_click_zoom\");\nconst dragPan = require('../utils/drag_pan');\nconst circle = require('@turf/circle').default;\nconst distance = require('@turf/distance').default;\nconst turfHelpers = require('@turf/helpers');\n\nconst DragCircleMode = {...MapboxDraw.modes.draw_polygon};\n\nDragCircleMode.onSetup = function(opts) {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      isCircle: true,\n      center: []\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n\n  this.addFeature(polygon);\n\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  dragPan.disable(this);\n  this.updateUIClasses({ mouse: Constants.cursors.ADD });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n\n  return {\n    polygon,\n    currentVertexPosition: 0\n  };\n};\n\nDragCircleMode.onMouseDown = DragCircleMode.onTouchStart = function (state, e) {\n  const currentCenter = state.polygon.properties.center;\n  if (currentCenter.length === 0) {\n    state.polygon.properties.center = [e.lngLat.lng, e.lngLat.lat];\n  }\n};\n\nDragCircleMode.onDrag = DragCircleMode.onMouseMove = function (state, e) {\n  const center = state.polygon.properties.center;\n  if (center.length > 0) {\n    const distanceInKm = distance(\n      turfHelpers.point(center),\n      turfHelpers.point([e.lngLat.lng, e.lngLat.lat]),\n      { units : 'kilometers'});\n    const circleFeature = circle(center, distanceInKm);\n    state.polygon.incomingCoords(circleFeature.geometry.coordinates);\n    state.polygon.properties.radiusInKm = distanceInKm;\n  }\n};\n\nDragCircleMode.onMouseUp = DragCircleMode.onTouchEnd = function (state, e) {\n  dragPan.enable(this);\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, { featureIds: [state.polygon.id] });\n};\n\nDragCircleMode.onClick = DragCircleMode.onTap = function (state, e) {\n  // don't draw the circle if its a tap or click event\n  state.polygon.properties.center = [];\n};\n\nDragCircleMode.toDisplayFeatures = function(state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\n  geojson.properties.active = (isActivePolygon) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  return display(geojson);\n};\n\nmodule.exports = DragCircleMode;", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst Constants = require(\"./constants\");\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\nmodule.exports = function (parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: selected ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE,\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coordinates,\n    },\n  };\n};\n", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst Constants = require(\"./constants\");\n\nmodule.exports = function (parent, startVertex, endVertex, map) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (\n    startCoord[1] > Constants.LAT_RENDERED_MAX ||\n    startCoord[1] < Constants.LAT_RENDERED_MIN ||\n    endCoord[1] > Constants.LAT_RENDERED_MAX ||\n    endCoord[1] < Constants.LAT_RENDERED_MIN\n  ) {\n    return null;\n  }\n\n  const ptA = map.project([startCoord[0], startCoord[1]]);\n  const ptB = map.project([endCoord[0], endCoord[1]]);\n  const mid = map.unproject([(ptA.x + ptB.x) / 2, (ptA.y + ptB.y) / 2]);\n\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent: parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path,\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat],\n    },\n  };\n};\n", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst createVertex = require(\"./create_vertex\");\nconst createMidpoint = require(\"./create_midpoint\");\nconst Constants = require(\"./constants\");\n\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\n  const { type, coordinates } = geojson.geometry;\n  const featureId = geojson.properties && geojson.properties.id;\n\n  let supplementaryPoints = [];\n\n  if (type === Constants.geojsonTypes.POINT) {\n    // For points, just create a vertex\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    // Cycle through a Polygon's rings and\n    // process each line\n    coordinates.forEach((line, lineIndex) => {\n      processLine(line, basePath !== null ? `${basePath}.${lineIndex}` : String(lineIndex));\n    });\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    processLine(coordinates, basePath);\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    processMultiGeometry();\n  }\n\n  function processLine(line, lineBasePath) {\n    let firstPointString = \"\";\n    let lastVertex = null;\n    line.forEach((point, pointIndex) => {\n      const pointPath = lineBasePath !== undefined && lineBasePath !== null ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\n\n      // If we're creating midpoints, check if there was a\n      // vertex before this one. If so, add a midpoint\n      // between that vertex and this one.\n      if (options.midpoints && lastVertex) {\n        const midpoint = createMidpoint(featureId, lastVertex, vertex, options.map);\n        if (midpoint) {\n          supplementaryPoints.push(midpoint);\n        }\n      }\n      lastVertex = vertex;\n\n      // A Polygon line's last point is the same as the first point. If we're on the last\n      // point, we want to draw a midpoint before it but not another vertex on it\n      // (since we already a vertex there, from the first point).\n      const stringifiedPoint = JSON.stringify(point);\n      if (firstPointString !== stringifiedPoint) {\n        supplementaryPoints.push(vertex);\n      }\n      if (pointIndex === 0) {\n        firstPointString = stringifiedPoint;\n      }\n    });\n  }\n\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) return false;\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  // Split a multi-geometry into constituent\n  // geometries, and accumulate the supplementary points\n  // for each of those constituents\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, \"\");\n    coordinates.forEach((subCoordinates, index) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: geojson.properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates,\n        },\n      };\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\n    });\n  }\n\n  return supplementaryPoints;\n}\n\nmodule.exports = createSupplementaryPoints;\n", "module.exports = normalize;\n\nvar types = {\n    Point: 'geometry',\n    MultiPoint: 'geometry',\n    LineString: 'geometry',\n    MultiLineString: 'geometry',\n    Polygon: 'geometry',\n    MultiPolygon: 'geometry',\n    GeometryCollection: 'geometry',\n    Feature: 'feature',\n    FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n    if (!gj || !gj.type) return null;\n    var type = types[gj.type];\n    if (!type) return null;\n\n    if (type === 'geometry') {\n        return {\n            type: 'FeatureCollection',\n            features: [{\n                type: 'Feature',\n                properties: {},\n                geometry: gj\n            }]\n        };\n    } else if (type === 'feature') {\n        return {\n            type: 'FeatureCollection',\n            features: [gj]\n        };\n    } else if (type === 'featurecollection') {\n        return gj;\n    }\n}\n", "export default function flatten(gj) {\n  switch ((gj && gj.type) || null) {\n    case \"FeatureCollection\":\n      gj.features = gj.features.reduce(function(mem, feature) {\n        return mem.concat(flatten(feature));\n      }, []);\n      return gj;\n    case \"Feature\":\n      if (!gj.geometry) return [gj];\n      return flatten(gj.geometry).map(function(geom) {\n        var data = {\n          type: \"Feature\",\n          properties: JSON.parse(JSON.stringify(gj.properties)),\n          geometry: geom\n        };\n        if (gj.id !== undefined) {\n          data.id = gj.id;\n        }\n        return data;\n      });\n    case \"MultiPoint\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Point\", coordinates: _ };\n      });\n    case \"MultiPolygon\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"Polygon\", coordinates: _ };\n      });\n    case \"MultiLineString\":\n      return gj.coordinates.map(function(_) {\n        return { type: \"LineString\", coordinates: _ };\n      });\n    case \"GeometryCollection\":\n      return gj.geometries.map(flatten).reduce(function(memo, geoms) {\n        return memo.concat(geoms);\n      }, []);\n    case \"Point\":\n    case \"Polygon\":\n    case \"LineString\":\n      return [gj];\n  }\n}\n", "module.exports = function flatten(list) {\n    return _flatten(list);\n\n    function _flatten(list) {\n        if (Array.isArray(list) && list.length &&\n            typeof list[0] === 'number') {\n            return [list];\n        }\n        return list.reduce(function (acc, item) {\n            if (Array.isArray(item) && Array.isArray(item[0])) {\n                return acc.concat(_flatten(item));\n            } else {\n                acc.push(item);\n                return acc;\n            }\n        }, []);\n    }\n};\n", "var geojsonNormalize = require('@mapbox/geojson-normalize'),\n    geojsonFlatten = require('geojson-flatten'),\n    flatten = require('./flatten');\n\nif (!(geojsonFlatten instanceof Function)) geojsonFlatten = geojsonFlatten.default;\n\nmodule.exports = function(_) {\n    if (!_) return [];\n    var normalized = geojsonFlatten(geojsonNormalize(_)),\n        coordinates = [];\n    normalized.features.forEach(function(feature) {\n        if (!feature.geometry) return;\n        coordinates = coordinates.concat(flatten(feature.geometry.coordinates));\n    });\n    return coordinates;\n};\n", "var traverse = module.exports = function (obj) {\n    return new Traverse(obj);\n};\n\nfunction Traverse (obj) {\n    this.value = obj;\n}\n\nTraverse.prototype.get = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            node = undefined;\n            break;\n        }\n        node = node[key];\n    }\n    return node;\n};\n\nTraverse.prototype.has = function (ps) {\n    var node = this.value;\n    for (var i = 0; i < ps.length; i ++) {\n        var key = ps[i];\n        if (!node || !hasOwnProperty.call(node, key)) {\n            return false;\n        }\n        node = node[key];\n    }\n    return true;\n};\n\nTraverse.prototype.set = function (ps, value) {\n    var node = this.value;\n    for (var i = 0; i < ps.length - 1; i ++) {\n        var key = ps[i];\n        if (!hasOwnProperty.call(node, key)) node[key] = {};\n        node = node[key];\n    }\n    node[ps[i]] = value;\n    return value;\n};\n\nTraverse.prototype.map = function (cb) {\n    return walk(this.value, cb, true);\n};\n\nTraverse.prototype.forEach = function (cb) {\n    this.value = walk(this.value, cb, false);\n    return this.value;\n};\n\nTraverse.prototype.reduce = function (cb, init) {\n    var skip = arguments.length === 1;\n    var acc = skip ? this.value : init;\n    this.forEach(function (x) {\n        if (!this.isRoot || !skip) {\n            acc = cb.call(this, acc, x);\n        }\n    });\n    return acc;\n};\n\nTraverse.prototype.paths = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.path); \n    });\n    return acc;\n};\n\nTraverse.prototype.nodes = function () {\n    var acc = [];\n    this.forEach(function (x) {\n        acc.push(this.node);\n    });\n    return acc;\n};\n\nTraverse.prototype.clone = function () {\n    var parents = [], nodes = [];\n    \n    return (function clone (src) {\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i] === src) {\n                return nodes[i];\n            }\n        }\n        \n        if (typeof src === 'object' && src !== null) {\n            var dst = copy(src);\n            \n            parents.push(src);\n            nodes.push(dst);\n            \n            forEach(objectKeys(src), function (key) {\n                dst[key] = clone(src[key]);\n            });\n            \n            parents.pop();\n            nodes.pop();\n            return dst;\n        }\n        else {\n            return src;\n        }\n    })(this.value);\n};\n\nfunction walk (root, cb, immutable) {\n    var path = [];\n    var parents = [];\n    var alive = true;\n    \n    return (function walker (node_) {\n        var node = immutable ? copy(node_) : node_;\n        var modifiers = {};\n        \n        var keepGoing = true;\n        \n        var state = {\n            node : node,\n            node_ : node_,\n            path : [].concat(path),\n            parent : parents[parents.length - 1],\n            parents : parents,\n            key : path.slice(-1)[0],\n            isRoot : path.length === 0,\n            level : path.length,\n            circular : null,\n            update : function (x, stopHere) {\n                if (!state.isRoot) {\n                    state.parent.node[state.key] = x;\n                }\n                state.node = x;\n                if (stopHere) keepGoing = false;\n            },\n            'delete' : function (stopHere) {\n                delete state.parent.node[state.key];\n                if (stopHere) keepGoing = false;\n            },\n            remove : function (stopHere) {\n                if (isArray(state.parent.node)) {\n                    state.parent.node.splice(state.key, 1);\n                }\n                else {\n                    delete state.parent.node[state.key];\n                }\n                if (stopHere) keepGoing = false;\n            },\n            keys : null,\n            before : function (f) { modifiers.before = f },\n            after : function (f) { modifiers.after = f },\n            pre : function (f) { modifiers.pre = f },\n            post : function (f) { modifiers.post = f },\n            stop : function () { alive = false },\n            block : function () { keepGoing = false }\n        };\n        \n        if (!alive) return state;\n        \n        function updateState() {\n            if (typeof state.node === 'object' && state.node !== null) {\n                if (!state.keys || state.node_ !== state.node) {\n                    state.keys = objectKeys(state.node)\n                }\n                \n                state.isLeaf = state.keys.length == 0;\n                \n                for (var i = 0; i < parents.length; i++) {\n                    if (parents[i].node_ === node_) {\n                        state.circular = parents[i];\n                        break;\n                    }\n                }\n            }\n            else {\n                state.isLeaf = true;\n                state.keys = null;\n            }\n            \n            state.notLeaf = !state.isLeaf;\n            state.notRoot = !state.isRoot;\n        }\n        \n        updateState();\n        \n        // use return values to update if defined\n        var ret = cb.call(state, state.node);\n        if (ret !== undefined && state.update) state.update(ret);\n        \n        if (modifiers.before) modifiers.before.call(state, state.node);\n        \n        if (!keepGoing) return state;\n        \n        if (typeof state.node == 'object'\n        && state.node !== null && !state.circular) {\n            parents.push(state);\n            \n            updateState();\n            \n            forEach(state.keys, function (key, i) {\n                path.push(key);\n                \n                if (modifiers.pre) modifiers.pre.call(state, state.node[key], key);\n                \n                var child = walker(state.node[key]);\n                if (immutable && hasOwnProperty.call(state.node, key)) {\n                    state.node[key] = child.node;\n                }\n                \n                child.isLast = i == state.keys.length - 1;\n                child.isFirst = i == 0;\n                \n                if (modifiers.post) modifiers.post.call(state, child);\n                \n                path.pop();\n            });\n            parents.pop();\n        }\n        \n        if (modifiers.after) modifiers.after.call(state, state.node);\n        \n        return state;\n    })(root).node;\n}\n\nfunction copy (src) {\n    if (typeof src === 'object' && src !== null) {\n        var dst;\n        \n        if (isArray(src)) {\n            dst = [];\n        }\n        else if (isDate(src)) {\n            dst = new Date(src.getTime ? src.getTime() : src);\n        }\n        else if (isRegExp(src)) {\n            dst = new RegExp(src);\n        }\n        else if (isError(src)) {\n            dst = { message: src.message };\n        }\n        else if (isBoolean(src)) {\n            dst = new Boolean(src);\n        }\n        else if (isNumber(src)) {\n            dst = new Number(src);\n        }\n        else if (isString(src)) {\n            dst = new String(src);\n        }\n        else if (Object.create && Object.getPrototypeOf) {\n            dst = Object.create(Object.getPrototypeOf(src));\n        }\n        else if (src.constructor === Object) {\n            dst = {};\n        }\n        else {\n            var proto =\n                (src.constructor && src.constructor.prototype)\n                || src.__proto__\n                || {}\n            ;\n            var T = function () {};\n            T.prototype = proto;\n            dst = new T;\n        }\n        \n        forEach(objectKeys(src), function (key) {\n            dst[key] = src[key];\n        });\n        return dst;\n    }\n    else return src;\n}\n\nvar objectKeys = Object.keys || function keys (obj) {\n    var res = [];\n    for (var key in obj) res.push(key)\n    return res;\n};\n\nfunction toS (obj) { return Object.prototype.toString.call(obj) }\nfunction isDate (obj) { return toS(obj) === '[object Date]' }\nfunction isRegExp (obj) { return toS(obj) === '[object RegExp]' }\nfunction isError (obj) { return toS(obj) === '[object Error]' }\nfunction isBoolean (obj) { return toS(obj) === '[object Boolean]' }\nfunction isNumber (obj) { return toS(obj) === '[object Number]' }\nfunction isString (obj) { return toS(obj) === '[object String]' }\n\nvar isArray = Array.isArray || function isArray (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nforEach(objectKeys(Traverse.prototype), function (key) {\n    traverse[key] = function (obj) {\n        var args = [].slice.call(arguments, 1);\n        var t = new Traverse(obj);\n        return t[key].apply(t, args);\n    };\n});\n\nvar hasOwnProperty = Object.hasOwnProperty || function (obj, key) {\n    return key in obj;\n};\n", "module.exports = Extent;\n\nfunction Extent(bbox) {\n    if (!(this instanceof Extent)) {\n        return new Extent(bbox);\n    }\n    this._bbox = bbox || [Infinity, Infinity, -Infinity, -Infinity];\n    this._valid = !!bbox;\n}\n\nExtent.prototype.include = function(ll) {\n    this._valid = true;\n    this._bbox[0] = Math.min(this._bbox[0], ll[0]);\n    this._bbox[1] = Math.min(this._bbox[1], ll[1]);\n    this._bbox[2] = Math.max(this._bbox[2], ll[0]);\n    this._bbox[3] = Math.max(this._bbox[3], ll[1]);\n    return this;\n};\n\nExtent.prototype.equals = function(_) {\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    return this._bbox[0] == other[0] &&\n        this._bbox[1] == other[1] &&\n        this._bbox[2] == other[2] &&\n        this._bbox[3] == other[3];\n};\n\nExtent.prototype.center = function(_) {\n    if (!this._valid) return null;\n    return [\n        (this._bbox[0] + this._bbox[2]) / 2,\n        (this._bbox[1] + this._bbox[3]) / 2]\n};\n\nExtent.prototype.union = function(_) {\n    this._valid = true;\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n    this._bbox[0] = Math.min(this._bbox[0], other[0]);\n    this._bbox[1] = Math.min(this._bbox[1], other[1]);\n    this._bbox[2] = Math.max(this._bbox[2], other[2]);\n    this._bbox[3] = Math.max(this._bbox[3], other[3]);\n    return this;\n};\n\nExtent.prototype.bbox = function() {\n    if (!this._valid) return null;\n    return this._bbox;\n};\n\nExtent.prototype.contains = function(ll) {\n    if (!ll) return this._fastContains();\n    if (!this._valid) return null;\n    var lon = ll[0], lat = ll[1];\n    return this._bbox[0] <= lon &&\n        this._bbox[1] <= lat &&\n        this._bbox[2] >= lon &&\n        this._bbox[3] >= lat;\n};\n\nExtent.prototype.intersect = function(_) {\n    if (!this._valid) return null;\n\n    var other;\n    if (_ instanceof Extent) { other = _.bbox(); } else { other = _; }\n\n    return !(\n      this._bbox[0] > other[2] ||\n      this._bbox[2] < other[0] ||\n      this._bbox[3] < other[1] ||\n      this._bbox[1] > other[3]\n    );\n};\n\nExtent.prototype._fastContains = function() {\n    if (!this._valid) return new Function('return null;');\n    var body = 'return ' +\n        this._bbox[0] + '<= ll[0] &&' +\n        this._bbox[1] + '<= ll[1] &&' +\n        this._bbox[2] + '>= ll[0] &&' +\n        this._bbox[3] + '>= ll[1]';\n    return new Function('ll', body);\n};\n\nExtent.prototype.polygon = function() {\n    if (!this._valid) return null;\n    return {\n        type: 'Polygon',\n        coordinates: [\n            [\n                // W, S\n                [this._bbox[0], this._bbox[1]],\n                // E, S\n                [this._bbox[2], this._bbox[1]],\n                // E, N\n                [this._bbox[2], this._bbox[3]],\n                // W, N\n                [this._bbox[0], this._bbox[3]],\n                // W, S\n                [this._bbox[0], this._bbox[1]]\n            ]\n        ]\n    };\n};\n", "var geojsonCoords = require('@mapbox/geojson-coords'),\n    traverse = require('traverse'),\n    extent = require('@mapbox/extent');\n\nvar geojsonTypesByDataAttributes = {\n    features: ['FeatureCollection'],\n    coordinates: ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'],\n    geometry: ['Feature'],\n    geometries: ['GeometryCollection']\n}\n\nvar dataAttributes = Object.keys(geojsonTypesByDataAttributes);\n\nmodule.exports = function(_) {\n    return getExtent(_).bbox();\n};\n\nmodule.exports.polygon = function(_) {\n    return getExtent(_).polygon();\n};\n\nmodule.exports.bboxify = function(_) {\n    return traverse(_).map(function(value) {\n        if (!value) return ;\n\n        var isValid = dataAttributes.some(function(attribute){\n            if(value[attribute]) {\n                return geojsonTypesByDataAttributes[attribute].indexOf(value.type) !== -1;\n            }\n            return false;\n        });\n\n        if(isValid){\n            value.bbox = getExtent(value).bbox();\n            this.update(value);\n        }\n\n    });\n};\n\nfunction getExtent(_) {\n    var ext = extent(),\n        coords = geojsonCoords(_);\n    for (var i = 0; i < coords.length; i++) ext.include(coords[i]);\n    return ext;\n}\n", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst extent = require(\"@mapbox/geojson-extent\");\nconst Constants = require(\"./constants\");\n\nconst { LAT_MIN, LAT_MAX, LAT_RENDERED_MIN, LAT_RENDERED_MAX, LNG_MIN, LNG_MAX } = Constants;\n\n// Ensure that we do not drag north-south far enough for\n// - any part of any feature to exceed the poles\n// - any feature to be completely lost in the space between the projection's\n//   edge and the poles, such that it couldn't be re-selected and moved back\nmodule.exports = function (geojsonFeatures, delta) {\n  // \"inner edge\" = a feature's latitude closest to the equator\n  let northInnerEdge = LAT_MIN;\n  let southInnerEdge = LAT_MAX;\n  // \"outer edge\" = a feature's latitude furthest from the equator\n  let northOuterEdge = LAT_MIN;\n  let southOuterEdge = LAT_MAX;\n\n  let westEdge = LNG_MAX;\n  let eastEdge = LNG_MIN;\n\n  geojsonFeatures.forEach((feature) => {\n    const bounds = extent(feature);\n    const featureSouthEdge = bounds[1];\n    const featureNorthEdge = bounds[3];\n    const featureWestEdge = bounds[0];\n    const featureEastEdge = bounds[2];\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\n  });\n\n  // These changes are not mutually exclusive: we might hit the inner\n  // edge but also have hit the outer edge and therefore need\n  // another readjustment\n  const constrainedDelta = delta;\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\n  }\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\n  }\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\n  }\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\n  }\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n\n  return constrainedDelta;\n};\n", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst constrainFeatureMovement = require(\"./constrain_feature_movement\");\nconst Constants = require(\"./constants\");\n\nmodule.exports = function (features, delta) {\n  const constrainedDelta = constrainFeatureMovement(\n    features.map((feature) => feature.toGeoJSON()),\n    delta\n  );\n\n  features.forEach((feature) => {\n    const currentCoordinates = feature.getCoordinates();\n\n    const moveCoordinate = (coord) => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat,\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = (ring) => ring.map((coord) => moveCoordinate(coord));\n    const moveMultiPolygon = (multi) => multi.map((ring) => moveRing(ring));\n\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n\n    feature.incomingCoords(nextCoordinates);\n  });\n};\n", "/**\n * Note: This file was copied from mapbox-gl-draw@1.1.1 because it is no longer accessible in later versions of mapbox-gl-draw which are required for security benefits.\n *\n * If this PR gets merged https://github.com/mapbox/mapbox-gl-draw/pull/1100 or mapbox-gl-draw is forked to maplibre-gl-draw we should investigate removing these files and getting the dependencies from mapbox-gl-draw\n */\n\nconst createVertex = require(\"./create_vertex\");\n\nfunction createSupplementaryPointsForCircle(geojson) {\n  const { properties, geometry } = geojson;\n\n  if (!properties.user_isCircle) return null;\n\n  const supplementaryPoints = [];\n  const vertices = geometry.coordinates[0].slice(0, -1);\n  for (let index = 0; index < vertices.length; index += Math.round(vertices.length / 4)) {\n    supplementaryPoints.push(createVertex(properties.id, vertices[index], `0.${index}`, false));\n  }\n  return supplementaryPoints;\n}\n\nmodule.exports = createSupplementaryPointsForCircle;\n", "const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst createSupplementaryPoints = require('../utils/create_supplementary_points');\nconst moveFeatures = require('../utils/move_features');\nconst Constants = require('../utils/constants');\nconst constrainFeatureMovement = require(\"../utils/constrain_feature_movement\");\nconst distance = require('@turf/distance').default;\nconst turfHelpers = require('@turf/helpers');\nconst circle = require('@turf/circle').default;\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\n\nconst DirectModeOverride = MapboxDraw.modes.direct_select;\n\nDirectModeOverride.dragFeature = function(state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  this.getSelected()\n    .filter(feature => feature.properties.isCircle)\n    .map(circle => circle.properties.center)\n    .forEach(center => {\n      center[0] += delta.lng;\n      center[1] += delta.lat;\n    });\n  state.dragMoveLocation = e.lngLat;\n};\n\nDirectModeOverride.dragVertex = function(state, e, delta) {\n  if (state.feature.properties.isCircle) {\n    const center = state.feature.properties.center;\n    const movedVertex = [e.lngLat.lng, e.lngLat.lat];\n    const radius = distance(turfHelpers.point(center), turfHelpers.point(movedVertex), {units: 'kilometers'});\n    const circleFeature = circle(center, radius);\n    state.feature.incomingCoords(circleFeature.geometry.coordinates);\n    state.feature.properties.radiusInKm = radius;\n  } else {\n    const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n    const selectedCoordPoints = selectedCoords.map(coords => ({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.POINT,\n        coordinates: coords\n      }\n    }));\n\n    const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n    for (let i = 0; i < selectedCoords.length; i++) {\n      const coord = selectedCoords[i];\n      state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n    }\n  }\n};\n\nDirectModeOverride.toDisplayFeatures = function (state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    const supplementaryPoints = geojson.properties.user_isCircle ? createSupplementaryPointsForCircle(geojson)\n      : createSupplementaryPoints(geojson, {\n        map: this.map,\n        midpoints: true,\n        selectedPaths: state.selectedCoordPaths\n      });\n    supplementaryPoints.forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n\n}\n\nmodule.exports = DirectModeOverride;", "const MapboxDraw = require('@mapbox/mapbox-gl-draw');\nconst createSupplementaryPoints = require(\"../utils/create_supplementary_points\");\nconst moveFeatures = require(\"../utils/move_features\");\nconst Constants = require(\"../utils/constants\");\nconst createSupplementaryPointsForCircle = require('../utils/create_supplementary_points_circle');\n\n\nconst SimpleSelectModeOverride = MapboxDraw.modes.simple_select;\n\nSimpleSelectModeOverride.dragMove = function(state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n\n  moveFeatures(this.getSelected(), delta);\n\n  this.getSelected()\n    .filter(feature => feature.properties.isCircle)\n    .map(circle => circle.properties.center)\n    .forEach(center => {\n      center[0] += delta.lng;\n      center[1] += delta.lat;\n    });\n\n  state.dragMoveLocation = e.lngLat;\n};\n\nSimpleSelectModeOverride.toDisplayFeatures = function(state, geojson, display) {\n    geojson.properties.active = (this.isSelected(geojson.properties.id)) ?\n      Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n    display(geojson);\n    this.fireActionable();\n    if (geojson.properties.active !== Constants.activeStates.ACTIVE ||\n      geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n    const supplementaryPoints = geojson.properties.user_isCircle ?\n      createSupplementaryPointsForCircle(geojson) : createSupplementaryPoints(geojson);\n    supplementaryPoints.forEach(display);\n};\n  \nmodule.exports = SimpleSelectModeOverride;", "const CircleMode = require(\"./lib/modes/CircleMode\");\nconst DragCircleMode = require(\"./lib/modes/DragCircleMode\");\nconst DirectMode = require(\"./lib/modes/DirectModeOverride\");\nconst SimpleSelectMode = require(\"./lib/modes/SimpleSelectModeOverride\");\n\nmodule.exports = { CircleMode, DragCircleMode, DirectMode, SimpleSelectMode };\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _a;\nimport { Amplify, Hub, Signer, jitteredExponentialRetry, getAmplifyUserAgent, } from \"@aws-amplify/core\";\nimport { Geo } from \"@aws-amplify/geo\";\nimport { Map as MaplibreMap, } from \"maplibre-gl\";\nimport { urlEncodePeriods } from \"./utils\";\n/**\n * An object for encapsulating an Amplify Geo transform request and Amplify credentials\n * @class AmplifyMapLibreRequest\n * @param {ICredentials} currentCredentials Amplify credentials used for signing transformRequests\n * @param {String} region AWS region\n * @return {AmplifyMapLibreRequest} `this`\n *\n */\nexport default class AmplifyMapLibreRequest {\n    constructor(currentCredentials, region) {\n        this.refreshCredentials = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.credentials = yield Amplify.Auth.currentCredentials();\n            }\n            catch (e) {\n                console.error(`Failed to refresh credentials: ${e}`);\n                throw e;\n            }\n        });\n        this.refreshCredentialsWithRetry = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                const MAX_DELAY_MS = 5 * 60 * 1000; // 5 minutes\n                yield jitteredExponentialRetry(this.refreshCredentials, [], MAX_DELAY_MS);\n                // Refresh credentials on a timer because HubEvents do not trigger on credential refresh currently\n                this.activeTimeout && clearTimeout(this.activeTimeout);\n                const expiration = new Date(this.credentials.expiration);\n                const timeout = expiration.getTime() - new Date().getTime() - 10000; // Adds a 10 second buffer time before the next refresh\n                this.activeTimeout = window.setTimeout(this.refreshCredentialsWithRetry, timeout);\n            }\n            catch (e) {\n                console.error(`Failed to refresh credentials: ${e}`);\n            }\n        });\n        /**\n         * A callback function that can be passed to a maplibre map object that is run before the map makes a request for an external URL. This transform request is used to sign the request with AWS Sigv4 Auth. [https://maplibre.org/maplibre-gl-js-docs/api/map/](https://maplibre.org/maplibre-gl-js-docs/api/map/)\n         * @param {string} url The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n         * @param {string} resourceType The function to use as a render function. This function accepts a single [Carmen GeoJSON](https://github.com/mapbox/carmen/blob/master/carmen-geojson.md) object as input and returns a string.\n         * @returns {RequestParameters} [https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters](https://maplibre.org/maplibre-gl-js-docs/api/properties/#requestparameters)\n         */\n        this.transformRequest = (url, resourceType) => {\n            if (resourceType === \"Style\" && !url.includes(\"://\")) {\n                if (this.region == undefined) {\n                    throw new Error(\"AWS region for map is undefined. Please verify that the region is set in aws-exports.js or that you are providing an AWS region parameter to createMap\");\n                }\n                url = `https://maps.geo.${this.region}.amazonaws.com/maps/v0/maps/${url}/style-descriptor`;\n            }\n            if (url.includes(\"amazonaws.com\")) {\n                // only sign AWS requests (with the signature as part of the query string)\n                const urlWithUserAgent = url +\n                    `?x-amz-user-agent=${encodeURIComponent(urlEncodePeriods(getAmplifyUserAgent()))}`;\n                return {\n                    url: Signer.signUrl(urlWithUserAgent, {\n                        access_key: this.credentials.accessKeyId,\n                        secret_key: this.credentials.secretAccessKey,\n                        session_token: this.credentials.sessionToken,\n                    }),\n                };\n            }\n        };\n        this.credentials = currentCredentials;\n        this.region = region;\n        this.activeTimeout = null;\n        this.refreshCredentialsWithRetry();\n        Hub.listen(\"auth\", (data) => {\n            switch (data.payload.event) {\n                case \"signIn\":\n                case \"signOut\":\n                case \"tokenRefresh\":\n                    this.refreshCredentialsWithRetry();\n                    break;\n            }\n        });\n    }\n}\n_a = AmplifyMapLibreRequest;\nAmplifyMapLibreRequest.createMapLibreMap = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    const { region, mapConstructor = MaplibreMap } = options, maplibreOption = __rest(options, [\"region\", \"mapConstructor\"]);\n    const defaultMap = Geo.getDefaultMap();\n    const amplifyRequest = new AmplifyMapLibreRequest(yield Amplify.Auth.currentCredentials(), region || defaultMap.region);\n    const transformRequest = amplifyRequest.transformRequest;\n    const map = new mapConstructor(Object.assign(Object.assign({}, maplibreOption), { style: options.style || defaultMap.mapName, // Amplify uses the name of the map in the maplibre style field,\n        transformRequest }));\n    return map;\n});\nexport const createMap = (options) => __awaiter(void 0, void 0, void 0, function* () {\n    return AmplifyMapLibreRequest.createMapLibreMap(options);\n});\n", "export function isCoordinates(array) {\n    return (Array.isArray(array) &&\n        typeof array[0] === \"number\" &&\n        typeof array[1] === \"number\");\n}\nexport function isCoordinatesArray(array) {\n    return isCoordinates(array[0]);\n}\nexport function isNamedLocation(object) {\n    return (object &&\n        Array.isArray(object.coordinates) &&\n        typeof object.coordinates[0] === \"number\" &&\n        typeof object.coordinates[1] === \"number\");\n}\nexport function isNamedLocationArray(array) {\n    return isNamedLocation(array[0]);\n}\nexport function isGeofence(object) {\n    return (object &&\n        typeof object.geofenceId === \"string\" &&\n        typeof object.geometry === \"object\");\n}\nexport function isGeofenceArray(array) {\n    return Array.isArray(array) && isGeofence(array[0]);\n}\nexport function isPolygon(object) {\n    return Array.isArray(object) && isCoordinatesArray(object[0]);\n}\nexport function isPolygonArray(array) {\n    return Array.isArray(array) && isPolygon(array[0]);\n}\nexport function isGeoJsonSource(source) {\n    return source.type === \"geojson\";\n}\nexport const strHasLength = (str) => typeof str === \"string\" && str.length > 0;\nexport const getFeaturesFromData = (data) => {\n    let features;\n    if (isCoordinatesArray(data)) {\n        features = data.map((point) => {\n            return {\n                type: \"Feature\",\n                geometry: { type: \"Point\", coordinates: point },\n                properties: { place_name: `Coordinates,${point}` },\n            };\n        });\n    }\n    else if (isNamedLocationArray(data)) {\n        features = data.map((location) => {\n            return {\n                type: \"Feature\",\n                geometry: { type: \"Point\", coordinates: location.coordinates },\n                properties: { title: location.title, address: location.address },\n            };\n        });\n    }\n    else {\n        features = data;\n    }\n    return features;\n};\nexport const urlEncodePeriods = (str) => {\n    return str.replace(/\\./g, \"%2E\");\n};\nexport function validateCoordinates(coordinates) {\n    const [lng, lat] = coordinates;\n    if (!Number.isFinite(lng) || !Number.isFinite(lat)) {\n        throw new Error(`Invalid coordinates: [${lng},${lat}]`);\n    }\n    if (lat < -90 || lat > 90) {\n        const errorString = \"Latitude must be between -90 and 90 degrees inclusive.\";\n        console.warn(errorString);\n        throw new Error(errorString);\n    }\n    else if (lng < -180 || lng > 180) {\n        const errorString = \"Longitude must be between -180 and 180 degrees inclusive.\";\n        console.warn(errorString);\n        throw new Error(errorString);\n    }\n}\nexport function createElement(tagName, className, container) {\n    const el = window.document.createElement(tagName);\n    if (className !== undefined)\n        el.className = className;\n    if (container)\n        container.appendChild(el);\n    return el;\n}\nexport function removeElement(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n", "export const COLOR_WHITE = \"#fff\";\nexport const COLOR_BLACK = \"#000\";\nexport const MARKER_COLOR = \"#5d8aff\";\nexport const ACTIVE_MARKER_COLOR = \"#ff9900\";\nexport const POPUP_BORDER_COLOR = \"#0000001f\";\nexport const COLOR_HOVER = \"#003560\";\nexport const GEOFENCE_COLOR = \"#2194f3\";\nexport const GEOFENCE_BORDER_COLOR = \"#003560\";\nexport const GEOFENCE_VERTEX_COLOR = \"#FF9900\";\nexport const LOCATION_MARKER = \"M24.8133 38.533C18.76 31.493 13 28.8264 13 20.8264C13.4827 14.9864 16.552 9.67169 21.368 6.33302C33.768 -2.26165 50.824 5.78902 52.0667 20.8264C52.0667 28.613 46.5733 31.6797 40.6533 38.373C32.4933 47.5464 35.4 63.093 32.4933 63.093C29.72 63.093 32.4933 47.5464 24.8133 38.533ZM32.4933 8.23969C26.5573 8.23969 21.7467 13.0504 21.7467 18.9864C21.7467 24.9224 26.5573 29.733 32.4933 29.733C38.4293 29.733 43.24 24.9224 43.24 18.9864C43.24 13.0504 38.4293 8.23969 32.4933 8.23969Z\";\nexport const OLD_MARKER = \"M30 16C30 18.5747 29.1348 21.3832 27.7111 24.2306C26.2947 27.0635 24.3846 29.8177 22.4383 32.2506C20.4964 34.678 18.5493 36.7473 17.0858 38.2108C16.6828 38.6138 16.3174 38.9699 16 39.2739C15.6826 38.9699 15.3172 38.6138 14.9142 38.2108C13.4507 36.7473 11.5036 34.678 9.56174 32.2506C7.61543 29.8177 5.70531 27.0635 4.28885 24.2306C2.86518 21.3832 2 18.5747 2 16C2 8.26801 8.26801 2 16 2C23.732 2 30 8.26801 30 16Z\";\n// Map styles exist due to an issue with Amazon Location Service not supporting the default set of maplibre fonts\nexport var MAP_STYLES;\n(function (MAP_STYLES) {\n    MAP_STYLES[\"ESRI_TOPOGRAPHIC\"] = \"VectorEsriTopographic\";\n    MAP_STYLES[\"ESRI_STREETS\"] = \"VectorEsriStreets\";\n    MAP_STYLES[\"ESRI_LIGHT_GRAY\"] = \"VectorEsriLightGrayCanvas\";\n    MAP_STYLES[\"ESRI_DARK_GRAY\"] = \"VectorEsriDarkGrayCanvas\";\n    MAP_STYLES[\"ESRI_NAVIGATION\"] = \"VectorEsriNavigation\";\n    MAP_STYLES[\"HERE_BERLIN\"] = \"VectorHereBerlin\";\n})(MAP_STYLES || (MAP_STYLES = {}));\nexport const FONT_DEFAULT_BY_STYLE = {\n    [MAP_STYLES.ESRI_TOPOGRAPHIC]: \"Noto Sans Regular\",\n    [MAP_STYLES.ESRI_STREETS]: \"Arial Regular\",\n    [MAP_STYLES.ESRI_LIGHT_GRAY]: \"Ubuntu Regular\",\n    [MAP_STYLES.ESRI_DARK_GRAY]: \"Ubuntu Regular\",\n    [MAP_STYLES.ESRI_NAVIGATION]: \"Arial Regular\",\n    [MAP_STYLES.HERE_BERLIN]: \"Fira GO Regular\",\n};\n", "import { Geo } from \"@aws-amplify/geo\";\nimport { COLOR_WHITE, MARKER_COLOR } from \"./constants\";\nimport { isGeoJsonSource } from \"./utils\";\nimport { FONT_DEFAULT_BY_STYLE } from \"./constants\";\nexport function drawClusterLayer(sourceName, map, { fillColor: markerColor = MARKER_COLOR, smCircleSize: smallSize = 60, smThreshold: smallThreshold = 50, mdCircleSize: mediumSize = 100, mdThreshold: mediumThreshold = 100, lgCircleSize: largeSize = 140, lgThreshold: largeThreshold = 500, xlCircleSize: extraLargeSize = 180, borderWidth = 4, borderColor = COLOR_WHITE, clusterPaint, onClick, showCount, clusterCountLayout, fontColor = COLOR_WHITE, }, mapStyle) {\n    const clusterLayerId = `${sourceName}-layer-clusters`;\n    const clusterSymbolLayerId = `${sourceName}-layer-cluster-count`;\n    // Use step expressions for clusters (https://docs.mapbox.com/mapbox-gl-js/style-spec/#expressions-step)\n    const paintOptions = Object.assign({ \"circle-color\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            markerColor,\n            smallThreshold,\n            markerColor,\n            mediumThreshold,\n            markerColor,\n            largeThreshold,\n            markerColor,\n        ], \"circle-radius\": [\n            \"step\",\n            [\"get\", \"point_count\"],\n            smallSize,\n            smallThreshold,\n            mediumSize,\n            mediumThreshold,\n            largeSize,\n            largeThreshold,\n            extraLargeSize,\n        ], \"circle-stroke-width\": borderWidth, \"circle-stroke-color\": borderColor }, clusterPaint);\n    const defaultClusterLayer = {\n        id: clusterLayerId,\n        type: \"circle\",\n        source: sourceName,\n        filter: [\"has\", \"point_count\"],\n        paint: paintOptions,\n    };\n    map.addLayer(Object.assign({}, defaultClusterLayer));\n    /*\n     * Inspect cluster on click\n     */\n    map.on(\"click\", clusterLayerId, function (e) {\n        if (typeof onClick === \"function\")\n            onClick(e);\n        const features = map.queryRenderedFeatures(e.point, {\n            layers: [clusterLayerId],\n        });\n        const clusterId = features[0].properties.cluster_id;\n        const source = map.getSource(sourceName);\n        if (isGeoJsonSource(source)) {\n            source.getClusterExpansionZoom(clusterId, function (err, zoom) {\n                if (err)\n                    return;\n                map.easeTo({\n                    center: features[0].geometry.coordinates,\n                    zoom: zoom,\n                });\n            });\n        }\n    });\n    /*\n     * Symbol Layer for cluster point count\n     */\n    if (showCount) {\n        const defaultLayoutOptions = {\n            \"text-field\": \"{point_count_abbreviated}\",\n            \"text-size\": 24,\n        };\n        const locationServiceStyle = mapStyle || Geo.getDefaultMap().style;\n        if (locationServiceStyle) {\n            defaultLayoutOptions[\"text-font\"] = [\n                FONT_DEFAULT_BY_STYLE[locationServiceStyle],\n            ];\n        }\n        const layoutOptions = Object.assign(Object.assign({}, defaultLayoutOptions), clusterCountLayout);\n        const paintOptions = {\n            \"text-color\": fontColor,\n        };\n        const defaultClusterCount = {\n            id: clusterSymbolLayerId,\n            type: \"symbol\",\n            source: sourceName,\n            filter: [\"has\", \"point_count\"],\n            layout: layoutOptions,\n            paint: paintOptions,\n        };\n        map.addLayer(Object.assign({}, defaultClusterCount));\n    }\n    return { clusterLayerId, clusterSymbolLayerId };\n}\n", "var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Popup } from 'maplibre-gl';\nimport { ACTIVE_MARKER_COLOR, COLOR_WHITE, MARKER_COLOR } from \"./constants\";\nimport { createMarker } from \"./createMarker\";\nimport { getPopupRenderFunction } from \"./popupRender\";\nimport { isCoordinates } from \"./utils\";\nconst HIDE_TIP = \"amplify-tip\";\nexport function drawUnclusteredLayer(sourceName, map, _a) {\n    var { showMarkerPopup = false } = _a, options = __rest(_a, [\"showMarkerPopup\"]);\n    const unclusteredLayerId = `${sourceName}-layer-unclustered-point`;\n    let selectedId = null;\n    function deselectPoint() {\n        if (selectedId !== null) {\n            map.setLayoutProperty(unclusteredLayerId, \"icon-image\", \"inactive-marker\");\n            selectedId = null;\n        }\n    }\n    const popupRender = options.popupRender\n        ? options.popupRender\n        : getPopupRenderFunction(unclusteredLayerId, options);\n    addUnclusteredMarkerImages(map, options);\n    const defaultUnclusteredPoint = {\n        id: unclusteredLayerId,\n        type: \"symbol\",\n        source: sourceName,\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        layout: {\n            \"icon-image\": \"inactive-marker\",\n        },\n    };\n    map.addLayer(Object.assign({}, defaultUnclusteredPoint));\n    /*\n     * Add css to header to hide default popup tip\n     */\n    if (showMarkerPopup) {\n        const element = document.getElementById(HIDE_TIP);\n        if (!element) {\n            const style = document.createElement(\"style\");\n            style.setAttribute(\"id\", HIDE_TIP);\n            document.head.append(style);\n            style.textContent = \".mapboxgl-popup-tip { display: none; }\";\n        }\n    }\n    map.on(\"click\", function () {\n        deselectPoint();\n    });\n    /*\n     * Set active state on markers when clicked\n     */\n    map.on(\"click\", unclusteredLayerId, function (e) {\n        if (typeof options.onClick === \"function\")\n            options.onClick(e);\n        selectedId = e.features[0].id;\n        map.setLayoutProperty(unclusteredLayerId, \"icon-image\", [\n            \"match\",\n            [\"id\"],\n            selectedId,\n            \"active-marker\",\n            \"inactive-marker\", // default\n        ]);\n        // If popup option is set show a popup on click\n        if (showMarkerPopup) {\n            const selectedFeature = e.features[0];\n            const coordinates = selectedFeature.geometry.coordinates;\n            if (isCoordinates(coordinates)) {\n                const popup = new Popup()\n                    .setLngLat(coordinates)\n                    .setHTML(popupRender(selectedFeature))\n                    .setOffset(15)\n                    .addTo(map);\n                popup.on(\"close\", function () {\n                    if (selectedId === selectedFeature.id)\n                        deselectPoint();\n                });\n            }\n        }\n    });\n    /*\n     * Set cursor style to pointer when mousing over point layer\n     */\n    map.on(\"mouseover\", unclusteredLayerId, function () {\n        map.getCanvas().style.cursor = \"pointer\";\n    });\n    /*\n     * Reset cursor style when the point layer\n     */\n    map.on(\"mouseleave\", unclusteredLayerId, () => {\n        map.getCanvas().style.cursor = \"\";\n    });\n    return { unclusteredLayerId };\n}\n/*\n * Adds marker images to the maplibre canvas to be used for rendering unclustered points\n */\nfunction addUnclusteredMarkerImages(map, { selectedColor = ACTIVE_MARKER_COLOR, selectedBorderColor = COLOR_WHITE, selectedBorderWidth = 4, defaultBorderColor = COLOR_WHITE, defaultBorderWidth = 4, defaultColor: fillColor = MARKER_COLOR, markerImageElement, activeMarkerImageElement, }) {\n    const inactiveMarker = markerImageElement ||\n        createMarker({\n            fillColor: fillColor,\n            strokeColor: defaultBorderColor,\n            lineWidth: defaultBorderWidth,\n        });\n    const activeMarker = activeMarkerImageElement ||\n        markerImageElement ||\n        createMarker({\n            fillColor: selectedColor,\n            strokeColor: selectedBorderColor,\n            lineWidth: selectedBorderWidth,\n        });\n    map.addImage(\"inactive-marker\", inactiveMarker, { pixelRatio: 2 });\n    map.addImage(\"active-marker\", activeMarker, { pixelRatio: 2 });\n}\n", "import { COLOR_WHITE, MARKER_COLOR, LOCATION_MARKER } from \"./constants\";\nexport function createMarker(options) {\n    const fillColor = (options === null || options === void 0 ? void 0 : options.fillColor) ? options.fillColor : MARKER_COLOR;\n    const strokeColor = (options === null || options === void 0 ? void 0 : options.strokeColor) ? options.strokeColor : COLOR_WHITE;\n    const lineWidth = (options === null || options === void 0 ? void 0 : options.lineWidth) ? options.lineWidth : 4;\n    return {\n        width: 64,\n        height: 64,\n        data: new Uint8Array(64 * 64 * 4),\n        onAdd: function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = this.width;\n            canvas.height = this.height;\n            this.context = canvas.getContext(\"2d\");\n        },\n        render: function () {\n            const context = this.context;\n            const markerShape = new Path2D(LOCATION_MARKER);\n            context.stroke(markerShape);\n            context.fillStyle = fillColor;\n            context.strokeStyle = strokeColor;\n            context.lineWidth = lineWidth;\n            context.fill(markerShape);\n            this.data = context.getImageData(0, 0, this.width, this.height).data;\n            return true;\n        },\n    };\n}\n", "import { strHasLength } from \"./utils\";\nimport { COLOR_BLACK, COLOR_WHITE, POPUP_BORDER_COLOR } from \"./constants\";\nexport function getPopupRenderFunction(unclusteredLayerId, { popupBackgroundColor: background = COLOR_WHITE, popupBorderColor: borderColor = POPUP_BORDER_COLOR, popupBorderWidth: borderWidth = 2, popupFontColor: fontColor = COLOR_BLACK, popupPadding: padding = 20, popupBorderRadius: radius = 4, popupTitleFontWeight: fontWeight = \"bold\", }) {\n    return (selectedFeature) => {\n        let title, address;\n        // Try to get Title and address from existing feature properties\n        if (strHasLength(selectedFeature.properties.place_name)) {\n            const placeName = selectedFeature.properties.place_name.split(\",\");\n            title = placeName[0];\n            address = placeName.splice(1, placeName.length).join(\",\");\n        }\n        else if (strHasLength(selectedFeature.properties.title) ||\n            strHasLength(selectedFeature.properties.address)) {\n            title = selectedFeature.properties.title;\n            address = selectedFeature.properties.address;\n        }\n        else {\n            title = \"Coordinates\";\n            address = selectedFeature.geometry.coordinates;\n        }\n        const titleHtml = `<div class=\"${unclusteredLayerId}-popup-title\" style=\"font-weight: ${fontWeight};\">${title}</div>`;\n        const addressHtml = `<div class=\"${unclusteredLayerId}-popup-address\">${address}</div>`;\n        const popupHtmlStyle = `background: ${background}; border: ${borderWidth}px solid ${borderColor}; color: ${fontColor}; border-radius: ${radius}px; padding: ${padding}px; word-wrap: break-word; margin: -10px -10px -15px;`;\n        let popupHtml = `<div class=\"${unclusteredLayerId}-popup\" style=\"${popupHtmlStyle}\">`;\n        if (title)\n            popupHtml += titleHtml;\n        if (address)\n            popupHtml += addressHtml;\n        popupHtml += \"</div>\";\n        return popupHtml;\n    };\n}\n", "import { getFeaturesFromData } from \"./utils\";\nimport { drawClusterLayer } from \"./drawClusterLayer\";\nimport { drawUnclusteredLayer } from \"./drawUnclusteredLayer\";\n/**\n * DrawPoints utility function for adding points to a map based on coordinate data or a FeatureCollection. Will add clustered points and styled markers by default with options for popups and other styles\n * @param {String} sourceName A user defined name used for determining the maplibre data source and the maplibre layers\n * @param {Coordinate[] | Feature[]} data An array of coordinate data or GeoJSON Features used as the data source for maplibre\n * @param {maplibre-gl-js-Map} map A maplibre-gl-js [map](https://maplibre.org/maplibre-gl-js-docs/api/map/) on which the points will be drawn\n * @param {Object} options An object containing options for changing the styles and features of the points rendered to the map, see the options for more details on available settings\n * @param {String} options.showCluster Determines whether or not points close together should be clustered into a single point\n * @param {String} options.clusterOptions Object for determining cluster options, see [ClusterOptions](https://github.com/aws-amplify/maplibre-gl-js-amplify/blob/main/src/types.ts#L43) for more details\n * @param {String} options.unclusteredOptions Object for determining unclustered point options, see [UnclusteredOptions](https://github.com/aws-amplify/maplibre-gl-js-amplify/blob/main/src/types.ts#L8) for more details\n * @param {MAP_STYLE} mapStyle A required parameter that indicates the map style returned from Amazon Location Service. This is used to determine the default fonts to be used with maplibre-gl-js. View existing styles [here](https://github.com/aws-amplify/maplibre-gl-js-amplify/blob/main/src/constants.ts#L8)\n * @returns {DrawPointsOutput} output An object containing the string id's of the sources and layers used to draw the points to the map. This includes the sourceId, clusterLayerId, clusterSymbolLayerId, unclusteredLayerId.\n * @property {String} sourceId The [source](https://maplibre.org/maplibre-gl-js-docs/api/sources/) used to contain all of the coordinate/feature data\n * @property {String} clusterLayerId The [layer](https://maplibre.org/maplibre-gl-js-docs/style-spec/layers/) used for creating and styling the points that are clustered together\n * @property {String} clusterSymbolLayerId The [layer](https://maplibre.org/maplibre-gl-js-docs/style-spec/layers/#symbol) used for creating styling the number that shows the count of points in a cluster\n * @property {String} unclusteredLayerId The [layer](https://maplibre.org/maplibre-gl-js-docs/style-spec/layers) used for creating and styling the individual points on the map and the popup when clicking on a point\n */\nexport function drawPoints(sourceName, data, map, { showCluster = true, clusterOptions = {}, unclusteredOptions: unclusteredMarkerOptions = {}, autoFit = true, } = {}, mapStyle) {\n    var _a, _b;\n    if (!map ||\n        typeof map.addSource !== \"function\" ||\n        typeof map.addLayer !== \"function\") {\n        throw new Error(\"Please use a maplibre map\");\n    }\n    /*\n     * Convert data passed in as coordinates into features\n     */\n    const features = getFeaturesFromData(data);\n    /*\n     * Data source for features\n     */\n    const sourceId = sourceName;\n    map.addSource(sourceId, {\n        type: \"geojson\",\n        data: {\n            type: \"FeatureCollection\",\n            features,\n        },\n        cluster: showCluster,\n        clusterMaxZoom: (_a = clusterOptions.clusterMaxZoom) !== null && _a !== void 0 ? _a : 14,\n        clusterRadius: (_b = clusterOptions.smCircleSize) !== null && _b !== void 0 ? _b : 60,\n        generateId: true,\n    });\n    /*\n     * Draw ui layers for source data\n     */\n    let clusterLayerId, clusterSymbolLayerId;\n    if (showCluster) {\n        ({ clusterLayerId, clusterSymbolLayerId } = drawClusterLayer(sourceId, map, clusterOptions, mapStyle));\n    }\n    const { unclusteredLayerId } = drawUnclusteredLayer(sourceId, map, unclusteredMarkerOptions || {});\n    if (autoFit) {\n        const mapBounds = map.getBounds();\n        features.forEach(function (feature) {\n            mapBounds.extend(feature.geometry.coordinates);\n        });\n        map.fitBounds(mapBounds);\n    }\n    // utility function for setting layer visibility to none\n    const hide = () => {\n        map.setLayoutProperty(unclusteredLayerId, \"visibility\", \"none\");\n        if (clusterLayerId)\n            map.setLayoutProperty(clusterLayerId, \"visibility\", \"none\");\n        if (clusterSymbolLayerId)\n            map.setLayoutProperty(clusterSymbolLayerId, \"visibility\", \"none\");\n    };\n    // utility function for setting layer visibility to visible\n    const show = () => {\n        map.setLayoutProperty(unclusteredLayerId, \"visibility\", \"visible\");\n        if (clusterLayerId)\n            map.setLayoutProperty(clusterLayerId, \"visibility\", \"visible\");\n        if (clusterSymbolLayerId)\n            map.setLayoutProperty(clusterSymbolLayerId, \"visibility\", \"visible\");\n    };\n    // utility function updating the data source\n    const setData = (data) => {\n        const features = getFeaturesFromData(data);\n        map.getSource(sourceId).setData({\n            type: \"FeatureCollection\",\n            features,\n        });\n    };\n    return {\n        sourceId,\n        unclusteredLayerId,\n        clusterLayerId,\n        clusterSymbolLayerId,\n        setData,\n        show,\n        hide,\n    };\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { Geo } from \"@aws-amplify/geo\";\nimport MaplibreGeocoder from \"@maplibre/maplibre-gl-geocoder\";\nimport maplibregl from \"maplibre-gl\";\nimport { createDefaultIcon } from \"./createDefaultIcon\";\nexport const AmplifyGeocoderAPI = {\n    forwardGeocode: (config) => __awaiter(void 0, void 0, void 0, function* () {\n        const features = [];\n        try {\n            const data = yield Geo.searchByText(config.query, {\n                biasPosition: config.bbox ? undefined : config.proximity,\n                searchAreaConstraints: config.bbox,\n                countries: config.countries,\n                maxResults: config.limit,\n            });\n            if (data) {\n                data.forEach((result) => {\n                    const { geometry } = result, otherResults = __rest(result, [\"geometry\"]);\n                    features.push({\n                        type: \"Feature\",\n                        geometry: { type: \"Point\", coordinates: geometry.point },\n                        properties: Object.assign({}, otherResults),\n                        place_name: otherResults.label,\n                        text: otherResults.label,\n                        center: geometry.point,\n                    });\n                });\n            }\n        }\n        catch (e) {\n            console.error(`Failed to forwardGeocode with error: ${e}`);\n        }\n        return { features };\n    }),\n    reverseGeocode: (config) => __awaiter(void 0, void 0, void 0, function* () {\n        const features = [];\n        try {\n            const data = yield Geo.searchByCoordinates(config.query, {\n                maxResults: config.limit,\n            });\n            if (data && data.geometry) {\n                const { geometry } = data, otherResults = __rest(data, [\"geometry\"]);\n                features.push({\n                    type: \"Feature\",\n                    geometry: { type: \"Point\", coordinates: geometry.point },\n                    properties: Object.assign({}, otherResults),\n                    place_name: otherResults.label,\n                    text: otherResults.label,\n                    center: geometry.point,\n                });\n            }\n        }\n        catch (e) {\n            console.error(`Failed to reverseGeocode with error: ${e}`);\n        }\n        return { features };\n    }),\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createAmplifyGeocoder(options) {\n    return new MaplibreGeocoder(AmplifyGeocoderAPI, Object.assign({ maplibregl: maplibregl, showResultMarkers: { element: createDefaultIcon() }, marker: { element: createDefaultIcon() }, \n        // autocomplete temporarily disabled by default until CLI is updated\n        showResultsWhileTyping: options === null || options === void 0 ? void 0 : options.autocomplete }, options));\n}\n", "import { LOCATION_MARKER } from \"./constants\";\nexport function createDefaultIcon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    const iconPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    const iconCircle = document.createElement(\"circle\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 64 64\");\n    customIcon.setAttribute(\"width\", \"32\");\n    customIcon.setAttribute(\"height\", \"32\");\n    iconPath.setAttribute(\"d\", LOCATION_MARKER);\n    iconPath.setAttribute(\"fill\", \"#5d8aff\");\n    iconCircle.setAttribute(\"fill\", \"white\");\n    iconCircle.setAttribute(\"cx\", \"50%\");\n    iconCircle.setAttribute(\"cy\", \"50%\");\n    iconCircle.setAttribute(\"r\", \"5\");\n    customIcon.appendChild(iconCircle);\n    customIcon.appendChild(iconPath);\n    return customIcon;\n}\n", "import { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nexport default function bearing(start, end, options) {\n    if (options === void 0) { options = {}; }\n    // Reverse calculation\n    if (options.final === true) {\n        return calculateFinalBearing(start, end);\n    }\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n    return radiansToDegrees(Math.atan2(a, b));\n}\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n", "// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nimport { degreesToRadians, lengthToRadians, point, radiansToDegrees, } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nexport default function destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearingRad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n    return point([lng, lat], options.properties);\n}\n", "import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n", "import bearing from \"@turf/bearing\";\nimport destination from \"@turf/destination\";\nimport measureDistance from \"@turf/distance\";\nimport { point } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Takes a {@link LineString} and returns a {@link Point} at a specified distance along the line.\n *\n * @name along\n * @param {Feature<LineString>} line input line\n * @param {number} distance distance along the line\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} Point `distance` `units` along the line\n * @example\n * var line = turf.lineString([[-83, 30], [-84, 36], [-78, 41]]);\n * var options = {units: 'miles'};\n *\n * var along = turf.along(line, 200, options);\n *\n * //addToMap\n * var addToMap = [along, line]\n */\nexport default function along(line, distance, options) {\n    if (options === void 0) { options = {}; }\n    // Get Coords\n    var geom = getGeom(line);\n    var coords = geom.coordinates;\n    var travelled = 0;\n    for (var i = 0; i < coords.length; i++) {\n        if (distance >= travelled && i === coords.length - 1) {\n            break;\n        }\n        else if (travelled >= distance) {\n            var overshot = distance - travelled;\n            if (!overshot) {\n                return point(coords[i]);\n            }\n            else {\n                var direction = bearing(coords[i], coords[i - 1]) - 180;\n                var interpolated = destination(coords[i], overshot, direction, options);\n                return interpolated;\n            }\n        }\n        else {\n            travelled += measureDistance(coords[i], coords[i + 1], options);\n        }\n    }\n    return point(coords[coords.length - 1]);\n}\n", "import destination from \"@turf/destination\";\nimport { polygon, } from \"@turf/helpers\";\n/**\n * Takes a {@link Point} and calculates the circle polygon given a radius in degrees, radians, miles, or kilometers; and steps for precision.\n *\n * @name circle\n * @param {Feature<Point>|number[]} center center point\n * @param {number} radius radius of the circle\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.steps=64] number of steps\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] properties\n * @returns {Feature<Polygon>} circle polygon\n * @example\n * var center = [-75.343, 39.984];\n * var radius = 5;\n * var options = {steps: 10, units: 'kilometers', properties: {foo: 'bar'}};\n * var circle = turf.circle(center, radius, options);\n *\n * //addToMap\n * var addToMap = [turf.point(center), circle]\n */\nfunction circle(center, radius, options) {\n    if (options === void 0) { options = {}; }\n    // default params\n    var steps = options.steps || 64;\n    var properties = options.properties\n        ? options.properties\n        : !Array.isArray(center) && center.type === \"Feature\" && center.properties\n            ? center.properties\n            : {};\n    // main\n    var coordinates = [];\n    for (var i = 0; i < steps; i++) {\n        coordinates.push(destination(center, radius, (i * -360) / steps, options).geometry\n            .coordinates);\n    }\n    coordinates.push(coordinates[0]);\n    return polygon([coordinates], properties);\n}\nexport default circle;\n", "import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n", "import distance from \"@turf/distance\";\nimport { segmentReduce } from \"@turf/meta\";\n/**\n * Takes a {@link GeoJSON} and measures its length in the specified units, {@link (Multi)Point}'s distance are ignored.\n *\n * @name length\n * @param {Feature<LineString|MultiLineString>} geojson GeoJSON to measure\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {number} length of GeoJSON\n * @example\n * var line = turf.lineString([[115, -32], [131, -22], [143, -25], [150, -34]]);\n * var length = turf.length(line, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line];\n * line.properties.distance = length;\n */\nexport default function length(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Calculate distance from 2-vertex line segments\n    return segmentReduce(geojson, function (previousValue, segment) {\n        var coords = segment.geometry.coordinates;\n        return previousValue + distance(coords[0], coords[1], options);\n    }, 0);\n}\n", "import along from \"@turf/along\";\nimport circle from \"@turf/circle\";\nimport length from \"@turf/length\";\nimport { lineString } from \"@turf/helpers\";\nimport { isGeofenceArray, validateCoordinates } from \"./utils\";\nconst GEOFENCE_ID_REGEX = /^[-._\\p{L}\\p{N}]+$/iu;\nexport const getGeofenceFeatureArray = (data) => {\n    const coordinates = isGeofenceArray(data)\n        ? data.map((geofence) => geofence.geometry.polygon)\n        : data;\n    return {\n        type: \"Feature\",\n        geometry: {\n            type: \"MultiPolygon\",\n            coordinates,\n        },\n        properties: {},\n    };\n};\nexport const getGeofenceFeatureFromPolygon = (polygon) => {\n    return {\n        type: \"Feature\",\n        geometry: {\n            type: \"Polygon\",\n            coordinates: polygon,\n        },\n        properties: {},\n    };\n};\n// Measures distance between the coordinate bounds and takes two points 1/4 from each coordinate to create a polygon\nexport const getPolygonFeatureFromBounds = (id, bounds) => {\n    const swCoordinate = bounds.getSouthWest().toArray();\n    const neCoordinate = bounds.getNorthEast().toArray();\n    const center = bounds.getCenter().toArray();\n    const line = lineString([swCoordinate, center, neCoordinate]);\n    const distanceInMiles = length(line, { units: \"miles\" });\n    // Gets coordinates 1/4 along the line from each coordinate\n    const southWestCoordinate = along(line, distanceInMiles / 4, {\n        units: \"miles\",\n    }).geometry.coordinates;\n    const northeastCoordinate = along(line, distanceInMiles * (3 / 4), {\n        units: \"miles\",\n    }).geometry.coordinates;\n    // Creates a polygon from the coordinates found along the line between the bounding coordinates in counter clockwise order starting from northeast most coordinate\n    const polygon = [\n        [\n            northeastCoordinate,\n            [southWestCoordinate[0], northeastCoordinate[1]],\n            southWestCoordinate,\n            [northeastCoordinate[0], southWestCoordinate[1]],\n            northeastCoordinate,\n        ],\n    ];\n    return {\n        id,\n        type: \"Feature\",\n        geometry: {\n            type: \"Polygon\",\n            coordinates: polygon,\n        },\n        properties: {},\n    };\n};\nexport const getCircleFeatureFromCoords = (id, center, { bounds, radius }) => {\n    if (!bounds && !radius) {\n        throw new Error(\"Circle requires a bounds or a radius\");\n    }\n    validateCoordinates(center);\n    const circleRadius = radius !== null && radius !== void 0 ? radius : getDistanceFromBounds(bounds) / 8;\n    const circleFeature = circle(center, circleRadius, { units: \"miles\" });\n    return {\n        id,\n        type: \"Feature\",\n        properties: {\n            isCircle: true,\n            center,\n            radius: circleRadius,\n        },\n        geometry: {\n            type: \"Polygon\",\n            coordinates: circleFeature.geometry.coordinates,\n        },\n    };\n};\nconst getDistanceFromBounds = (bounds) => {\n    const swCoordinate = bounds.getSouthWest().toArray();\n    const neCoordinate = bounds.getNorthEast().toArray();\n    const center = bounds.getCenter().toArray();\n    const line = lineString([swCoordinate, center, neCoordinate]);\n    return length(line, { units: \"miles\" });\n};\nexport const doesGeofenceExist = (id, loadedGeofences) => {\n    return !!loadedGeofences[id];\n};\nexport const isValidGeofenceId = (id) => {\n    return !!id.match(GEOFENCE_ID_REGEX);\n};\nexport const isExistingGeofenceId = (id, loadedGeofences) => {\n    return doesGeofenceExist(id, loadedGeofences);\n};\nexport const isGeofenceDisplayed = (id, displayedGeofences) => {\n    return !!displayedGeofences.find((geofence) => geofence.geofenceId === id);\n};\nexport const getDistanceBetweenCoordinates = (startCoord, endCoord) => {\n    const line = lineString([startCoord, endCoord]);\n    const distanceInMiles = length(line, { units: \"miles\" });\n    return distanceInMiles;\n};\n", "import { COLOR_BLACK } from \"./constants\";\nimport { getGeofenceFeatureArray } from \"./geofenceUtils\";\nimport { isGeofenceArray, isPolygonArray } from \"./utils\";\nconst FILL_OPACITY = 0.3;\nconst BORDER_OPACITY = 0.5;\nconst BORDER_WIDTH = 4;\n/**\n * DrawPoints utility function for adding points to a map based on coordinate data or a FeatureCollection. Will add clustered points and styled markers by default with options for popups and other styles\n */\nexport function drawGeofences(sourceName, data, map, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    if (!map ||\n        typeof map.addSource !== \"function\" ||\n        typeof map.addLayer !== \"function\") {\n        throw new Error(\"Please use a maplibre map\");\n    }\n    if (data.length > 0 && !isGeofenceArray(data) && !isPolygonArray(data)) {\n        throw new Error(\"Please pass in an array of Geofences or an array of Polygons\");\n    }\n    /*\n     * Data source for features\n     * Convert data passed in as coordinates into feature data\n     */\n    const sourceId = `${sourceName}`;\n    map.addSource(sourceId, {\n        type: \"geojson\",\n        data: getGeofenceFeatureArray(data),\n        generateId: true,\n    });\n    const initialVisiblity = ((_a = options.visible) !== null && _a !== void 0 ? _a : true) ? \"visible\" : \"none\";\n    /*\n     * Draw ui layers for source data\n     */\n    const fillLayerId = `${sourceName}-fill-layer`;\n    map.addLayer({\n        id: fillLayerId,\n        type: \"fill\",\n        source: sourceId,\n        layout: {\n            visibility: initialVisiblity,\n        },\n        paint: {\n            \"fill-color\": (_b = options.fillColor) !== null && _b !== void 0 ? _b : COLOR_BLACK,\n            \"fill-opacity\": (_c = options.fillOpacity) !== null && _c !== void 0 ? _c : FILL_OPACITY,\n        },\n    });\n    // Add a black outline around the polygon.\n    const outlineLayerId = `${sourceName}-outline-layer`;\n    map.addLayer({\n        id: outlineLayerId,\n        type: \"line\",\n        source: sourceId,\n        layout: {\n            visibility: initialVisiblity,\n        },\n        paint: {\n            \"line-color\": (_d = options.borderColor) !== null && _d !== void 0 ? _d : COLOR_BLACK,\n            \"line-opacity\": (_e = options.borderOpacity) !== null && _e !== void 0 ? _e : BORDER_OPACITY,\n            \"line-width\": (_f = options.borderWidth) !== null && _f !== void 0 ? _f : BORDER_WIDTH,\n            \"line-offset\": (_g = options.borderOffset) !== null && _g !== void 0 ? _g : (((_h = options.borderWidth) !== null && _h !== void 0 ? _h : BORDER_WIDTH) / 2) * -1,\n        },\n    });\n    // utility function for setting layer visibility to none\n    const hide = () => {\n        map.setLayoutProperty(fillLayerId, \"visibility\", \"none\");\n        map.setLayoutProperty(outlineLayerId, \"visibility\", \"none\");\n    };\n    // utility function for setting layer visibility to visible\n    const show = () => {\n        map.setLayoutProperty(fillLayerId, \"visibility\", \"visible\");\n        map.setLayoutProperty(outlineLayerId, \"visibility\", \"visible\");\n    };\n    // utility function for checking layer visibility\n    const isVisible = () => {\n        const visibility = map.getLayoutProperty(fillLayerId, \"visibility\");\n        return visibility === \"visible\";\n    };\n    // utility function for setting layer visibility to visible\n    const setData = (data) => {\n        map.getSource(sourceId).setData(data);\n    };\n    return {\n        sourceId,\n        outlineLayerId,\n        fillLayerId,\n        show,\n        hide,\n        isVisible,\n        setData,\n    };\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport maplibregl from \"maplibre-gl\";\nimport { Geo } from \"@aws-amplify/geo\";\nimport { drawGeofences } from \"../drawGeofences\";\nimport { isValidGeofenceId, getGeofenceFeatureFromPolygon, getGeofenceFeatureArray, isExistingGeofenceId, getDistanceBetweenCoordinates, } from \"../geofenceUtils\";\nimport { GEOFENCE_COLOR, GEOFENCE_BORDER_COLOR } from \"../constants\";\nimport { AmplifyGeofenceControlUI } from \"./ui\";\nimport { AmplifyMapDraw } from \"./AmplifyMapDraw\";\nimport { createElement } from \"../utils\";\nconst FIT_BOUNDS_PADDING = { left: 240 }; // Default to 240px right now because of the left nav\nexport class AmplifyGeofenceControl {\n    constructor(options) {\n        this._geofenceCollectionId = options === null || options === void 0 ? void 0 : options.geofenceCollectionId;\n        this._loadedGeofences = {};\n        this._displayedGeofences = [];\n        this.changeMode = this.changeMode.bind(this);\n        this.loadInitialGeofences = this.loadInitialGeofences.bind(this);\n        this.loadMoreGeofences = this.loadMoreGeofences.bind(this);\n        this._loadGeofence = this._loadGeofence.bind(this);\n        this.updateInputRadius = this.updateInputRadius.bind(this);\n        this.saveGeofence = this.saveGeofence.bind(this);\n        this.editGeofence = this.editGeofence.bind(this);\n        this.deleteGeofence = this.deleteGeofence.bind(this);\n        this.displayAllGeofences = this.displayAllGeofences.bind(this);\n        this.hideAllGeofences = this.hideAllGeofences.bind(this);\n        this.addEditableGeofence = this.addEditableGeofence.bind(this);\n        this.setEditingModeEnabled = this.setEditingModeEnabled.bind(this);\n        this.displayHighlightedGeofence =\n            this.displayHighlightedGeofence.bind(this);\n        this.hideHighlightedGeofence = this.hideHighlightedGeofence.bind(this);\n        this.displayGeofence = this.displayGeofence.bind(this);\n        this.hideGeofence = this.hideGeofence.bind(this);\n        this.fitGeofence = this.fitGeofence.bind(this);\n        this.fitAllGeofences = this.fitAllGeofences.bind(this);\n    }\n    /**********************************************************************\n     Public Methods for AmplifyGeofenceControl\n     **********************************************************************/\n    getDefaultPosition() {\n        return \"full-screen\";\n    }\n    onRemove() {\n        this._ui.removeElement(this._container);\n    }\n    // Reorders MapLibre canvas class names to fix a mapbox draw bug - https://github.com/mapbox/mapbox-gl-draw/pull/1079\n    reorderMapLibreClassNames() {\n        const mapCanvas = document\n            .getElementsByClassName(\"maplibregl-canvas\")\n            .item(0);\n        if (mapCanvas) {\n            mapCanvas.className = \"mapboxgl-canvas maplibregl-canvas\";\n        }\n    }\n    onAdd(map) {\n        this._map = map;\n        this.reorderMapLibreClassNames();\n        this._container = createElement(\"div\", \"geofence-ctrl maplibregl-ctrl\");\n        this._ui = AmplifyGeofenceControlUI(this, this._container);\n        this._amplifyDraw = new AmplifyMapDraw(map, this._ui);\n        this._ui.registerControlPosition(map, \"full-screen\");\n        this._ui.createGeofenceListContainer();\n        // Draw the geofences source to the map so we can update it on geofences load/creation\n        this._map.once(\"load\", function () {\n            // Prevents warnings on multiple re-renders, especially when rendered in react\n            if (this._map.getSource(\"displayedGeofences\")) {\n                return;\n            }\n            this._drawGeofencesOutput = drawGeofences(\"displayedGeofences\", [], this._map, {\n                fillColor: GEOFENCE_COLOR,\n                borderColor: GEOFENCE_BORDER_COLOR,\n                borderOpacity: 1,\n            });\n            this._highlightedGeofenceOutput = drawGeofences(\"highlightedGeofence\", [], this._map, {\n                fillColor: GEOFENCE_COLOR,\n                borderColor: GEOFENCE_BORDER_COLOR,\n                borderOpacity: 1,\n                borderWidth: 6,\n            });\n            this.loadInitialGeofences();\n            map.addControl(new maplibregl.NavigationControl({ showCompass: false }), \"bottom-right\");\n        }.bind(this));\n        this._map.on(\"draw.update\", () => {\n            const coordinates = this._amplifyDraw._mapBoxDraw.getAll().features[0].geometry.coordinates[0];\n            const radius = getDistanceBetweenCoordinates(coordinates[0], coordinates[Math.floor(coordinates.length / 2)]) / 2;\n            this._ui.updateGeofenceRadius(radius.toFixed(2));\n        });\n        return this._container;\n    }\n    createGeofence(geofenceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!geofenceId || geofenceId.length === 0) {\n                this._ui.createAddGeofencePromptError(\"Geofence ID is empty.\");\n                return;\n            }\n            if (!isValidGeofenceId(geofenceId)) {\n                this._ui.createAddGeofencePromptError(\"Geofence ID contains special characters.\");\n                return;\n            }\n            if (isExistingGeofenceId(geofenceId, this._loadedGeofences)) {\n                this._ui.createAddGeofencePromptError(\"Geofence ID already exists.\");\n                return;\n            }\n            return this.saveGeofence(geofenceId);\n        });\n    }\n    saveGeofence(geofenceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const feature = this._amplifyDraw.get(this._editingGeofenceId);\n            const idToSave = geofenceId || this._editingGeofenceId;\n            const response = yield Geo.saveGeofences({\n                geofenceId: idToSave,\n                geometry: { polygon: feature.geometry[\"coordinates\"] },\n            });\n            if (response.errors[0]) {\n                const err = response.errors[0];\n                throw new Error(`There was an error saving geofence with id ${idToSave}: ${err.error.code} - ${err.error.message}`);\n            }\n            const success = response.successes[0];\n            const savedGeofence = {\n                geofenceId: success.geofenceId,\n                geometry: { polygon: feature.geometry[\"coordinates\"] },\n            };\n            // render geofence to the map and add it to the list\n            this._loadGeofence(savedGeofence);\n            this.displayGeofence(savedGeofence.geofenceId);\n            this.setEditingModeEnabled(false);\n            return savedGeofence.geofenceId;\n        });\n    }\n    // Each page loads 100 geofences\n    loadInitialGeofences() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { entries, nextToken } = yield Geo.listGeofences();\n                this._listGeofencesNextToken = nextToken;\n                const loadGeofence = this._loadGeofence;\n                entries.forEach((geofence) => loadGeofence(geofence));\n                this._ui.updateGeofenceCount(Object.keys(this._loadedGeofences).length);\n            }\n            catch (e) {\n                throw new Error(`Error calling listGeofences: ${e}`);\n            }\n        });\n    }\n    loadMoreGeofences() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._listGeofencesNextToken) {\n                try {\n                    const { entries, nextToken } = yield Geo.listGeofences({\n                        nextToken: this._listGeofencesNextToken,\n                    });\n                    this._listGeofencesNextToken = nextToken;\n                    const loadGeofence = this._loadGeofence;\n                    entries.forEach((geofence) => loadGeofence(geofence));\n                    this._ui.updateGeofenceCount(Object.keys(this._loadedGeofences).length);\n                }\n                catch (e) {\n                    throw new Error(`Error calling listGeofences: ${e}`);\n                }\n            }\n        });\n    }\n    editGeofence(geofenceId) {\n        this.setEditingModeEnabled(true);\n        const geofence = this._loadedGeofences[geofenceId];\n        if (!geofence) {\n            throw new Error(`Geofence with id ${geofenceId} does not exist`);\n        }\n        // render in mapboxdraw\n        const feature = getGeofenceFeatureFromPolygon(geofence.geometry.polygon);\n        const data = Object.assign({ id: geofence.geofenceId }, feature);\n        this._amplifyDraw.add(data);\n        this._editingGeofenceId = geofence.geofenceId;\n    }\n    deleteGeofence(geofenceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield Geo.deleteGeofences(geofenceId);\n            if (response.errors[0]) {\n                const err = response.errors[0].error;\n                throw new Error(`There was an error deleting geofence with id ${geofenceId}: ${err.code} - ${err.message}`);\n            }\n            this._ui.removeGeofenceListItem(geofenceId);\n            delete this._loadedGeofences[geofenceId];\n            this._ui.updateGeofenceCount(Object.keys(this._loadedGeofences).length);\n            this._displayedGeofences = this._displayedGeofences.filter((geofence) => geofence.geofenceId !== geofenceId);\n            this._updateDisplayedGeofences();\n            return geofenceId;\n        });\n    }\n    deleteSelectedGeofences() {\n        const idsToDelete = this._displayedGeofences.map((fence) => fence.geofenceId);\n        // FIXME: delete geofence api call here\n        idsToDelete.forEach((id) => {\n            this._ui.removeGeofenceListItem(id);\n            delete this._loadedGeofences[id];\n        });\n        this._displayedGeofences = [];\n        this._updateDisplayedGeofences();\n    }\n    /**********************************************************************\n     Private methods for CRUD Geofences\n     **********************************************************************/\n    _loadGeofence(geofence) {\n        // If geofence exists remove it from displayed geofences\n        if (this._loadedGeofences[geofence.geofenceId]) {\n            this._displayedGeofences = this._displayedGeofences.filter((fence) => fence.geofenceId !== geofence.geofenceId);\n        }\n        else {\n            // If geofence doesn't exist render a new list item for it\n            this._ui.renderListItem(geofence);\n        }\n        this._loadedGeofences[geofence.geofenceId] = geofence;\n        this._ui.updateGeofenceCount(Object.keys(this._loadedGeofences).length);\n    }\n    displayGeofence(geofenceId) {\n        this._displayedGeofences.push(this._loadedGeofences[geofenceId]);\n        this._updateDisplayedGeofences();\n        this._ui.updateCheckbox(geofenceId, true);\n        this.fitAllGeofences();\n    }\n    displayAllGeofences() {\n        this._displayedGeofences.push(...Object.values(this._loadedGeofences));\n        this._updateDisplayedGeofences();\n        const checkboxes = document.getElementsByClassName(\"geofence-ctrl-list-item-checkbox\");\n        Array.from(checkboxes).forEach((checkbox) => (checkbox.checked = this._ui.getCheckboxAllValue()));\n        this.fitAllGeofences();\n    }\n    fitGeofence(geofenceId) {\n        const mapBounds = this._map.getBounds();\n        const geofence = this._loadedGeofences[geofenceId];\n        geofence.geometry.polygon[0].forEach((coord) => {\n            mapBounds.extend(coord);\n        });\n        this._map.fitBounds(mapBounds, { padding: FIT_BOUNDS_PADDING });\n    }\n    fitAllGeofences() {\n        let shouldFitBounds = false;\n        const mapBounds = this._map.getBounds();\n        this._displayedGeofences.forEach((geofence) => {\n            geofence.geometry.polygon[0].forEach((coord) => {\n                if (!mapBounds.contains(coord)) {\n                    mapBounds.extend(coord);\n                    shouldFitBounds = true;\n                }\n            });\n        });\n        if (shouldFitBounds)\n            this._map.fitBounds(mapBounds, { padding: FIT_BOUNDS_PADDING });\n    }\n    hideGeofence(geofenceId) {\n        this._displayedGeofences = this._displayedGeofences.filter((geofence) => geofence.geofenceId !== geofenceId);\n        this._updateDisplayedGeofences();\n        this._ui.updateCheckbox(geofenceId, false);\n    }\n    hideAllGeofences() {\n        this._displayedGeofences = [];\n        this._updateDisplayedGeofences();\n        const checkboxes = document.getElementsByClassName(\"geofence-ctrl-list-item-checkbox\");\n        Array.from(checkboxes).forEach((checkbox) => (checkbox.checked = this._ui.getCheckboxAllValue()));\n    }\n    _updateDisplayedGeofences() {\n        const feature = getGeofenceFeatureArray(this._displayedGeofences);\n        this._drawGeofencesOutput.setData(feature);\n    }\n    displayHighlightedGeofence(geofenceId) {\n        const geofence = this._loadedGeofences[geofenceId];\n        if (!geofence) {\n            console.warn(`Geofence with id ${geofenceId} does not exist`);\n            return;\n        }\n        const feature = getGeofenceFeatureFromPolygon(geofence.geometry.polygon);\n        this._highlightedGeofenceOutput.setData(feature);\n        this._highlightedGeofenceOutput.show();\n    }\n    hideHighlightedGeofence() {\n        this._highlightedGeofenceOutput.hide();\n    }\n    /**********************************************************************\n     Methods for controlling amplify mapbox draw\n     **********************************************************************/\n    changeMode(mode) {\n        // erase existing mapbox draw content\n        this._amplifyDraw.delete(this._editingGeofenceId);\n        if (mode === \"draw_circle\") {\n            this._amplifyDraw.drawCircularGeofence(this._editingGeofenceId);\n        }\n        else {\n            this._amplifyDraw.drawPolygonGeofence(this._editingGeofenceId);\n        }\n    }\n    resetGeofence() {\n        // erase existing mapbox draw content\n        this._amplifyDraw.delete(this._editingGeofenceId);\n        if (isExistingGeofenceId(this._editingGeofenceId, this._loadedGeofences)) {\n            this.editGeofence(this._editingGeofenceId);\n        }\n        else {\n            this._amplifyDraw.drawPolygonGeofence(this._editingGeofenceId);\n        }\n    }\n    // Disables add button and selecting items from geofence list\n    setEditingModeEnabled(enabled) {\n        enabled ? this._amplifyDraw.enable() : this._amplifyDraw.disable();\n        enabled\n            ? this._drawGeofencesOutput.hide()\n            : this._drawGeofencesOutput.show();\n        this._ui.setGeofenceListEnabled(!enabled);\n    }\n    updateInputRadius(event) {\n        const radiusString = event.target.value;\n        const radius = parseInt(radiusString);\n        if (isNaN(radius)) {\n            return;\n        }\n        this._amplifyDraw.drawCircularGeofence(this._editingGeofenceId, radius);\n    }\n    addEditableGeofence() {\n        this._editingGeofenceId = \"tempGeofence\";\n        this._amplifyDraw.drawCircularGeofence(\"tempGeofence\");\n        this.setEditingModeEnabled(true);\n    }\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { debounce } from \"debounce\";\nimport { createElement, removeElement } from \"../utils\";\nimport { createErrorIcon } from \"./icons\";\nimport { createEditIcon, createPopupStep1Icon, createPopupStep2Icon, createPopupStep3Icon, createPopupStep4Icon, createTrashIcon, createDeleteSuccessIcon, createCloseIcon, } from \"./icons\";\nexport function AmplifyGeofenceControlUI(geofenceControl, geofenceControlContainer) {\n    let _addGeofenceContainer;\n    let _deleteGeofenceContainer;\n    let _addGeofencebutton;\n    let _checkboxAll;\n    let _geofenceList;\n    let _createContainer;\n    let _geofenceTitle;\n    let _checkBoxAllAndCreateContainer;\n    let _checkBoxAllContainer;\n    let _circleModeContainer;\n    let _polygonModeContainer;\n    let _deletePopdownContainer;\n    let _errorDiv;\n    let _geofenceCreateRadiusInput;\n    function registerControlPosition(map, positionName) {\n        if (map._controlPositions[positionName]) {\n            return;\n        }\n        const positionContainer = document.createElement(\"div\");\n        positionContainer.className = `maplibregl-ctrl-${positionName}`;\n        map._controlContainer.appendChild(positionContainer);\n        map._controlPositions[positionName] = positionContainer;\n    }\n    /************************************************************\n     * Create Geofence Controls\n     *************************************************************/\n    function createGeofenceCreateContainer(isCircle) {\n        const container = createElement(\"div\", \"geofence-ctrl-create-prompt-container\", geofenceControlContainer);\n        _createContainer = createElement(\"div\", \"geofence-ctrl-create-prompt\", container);\n        if (isCircle) {\n            /* Create buttons to switch between different modes */\n            const buttonContainer = createElement(\"div\", \"geofence-ctrl-create-prompt-buttons\", _createContainer);\n            const circleModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-circle geofence-ctrl-create-prompt-button\", buttonContainer);\n            circleModeButton.addEventListener(\"click\", () => {\n                // Change button selected style\n                circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n                polygonModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n                // Switch info box mode\n                if (_polygonModeContainer) {\n                    removeElement(_polygonModeContainer);\n                    _polygonModeContainer = undefined;\n                }\n                if (!_circleModeContainer)\n                    createCircleModeCreateContainer(_createContainer);\n                geofenceControl.changeMode(\"draw_circle\");\n            });\n            circleModeButton.innerHTML = \"Circle\";\n            const polygonModeButton = createElement(\"div\", \"geofence-ctrl-create-prompt-button-polygon geofence-ctrl-create-prompt-button\", buttonContainer);\n            polygonModeButton.addEventListener(\"click\", () => {\n                geofenceControl.changeMode(\"draw_polygon\");\n                // Change button selected style\n                polygonModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n                circleModeButton.classList.remove(\"geofence-ctrl-create-prompt-selected\");\n                // Switch info box mode\n                if (_circleModeContainer) {\n                    removeElement(_circleModeContainer);\n                    _circleModeContainer = undefined;\n                }\n                if (!_polygonModeContainer)\n                    createPolygonModeCreateContainer(_createContainer);\n            });\n            polygonModeButton.innerHTML = \"Custom\";\n            circleModeButton.classList.add(\"geofence-ctrl-create-prompt-selected\");\n            createCircleModeCreateContainer(_createContainer);\n        }\n        else {\n            createPolygonModeCreateContainer(_createContainer);\n        }\n    }\n    function createCircleModeCreateContainer(container) {\n        _circleModeContainer = createElement(\"div\", \"geofence-ctrl-create-circle-mode-container\", container);\n        const radiusTitle = createElement(\"div\", \"geofence-ctrl-create-circle-mode-title\", _circleModeContainer);\n        radiusTitle.innerHTML = \"Radius\";\n        _geofenceCreateRadiusInput = createElement(\"input\", \"geofence-ctrl-create-circle-mode-input\", _circleModeContainer);\n        _geofenceCreateRadiusInput.addEventListener(\"keydown\", debounce(geofenceControl.updateInputRadius, 200));\n    }\n    function createPolygonModeCreateContainer(container) {\n        _polygonModeContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-container\", container);\n        const moreInfoContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-container\", _polygonModeContainer);\n        const moreInfoIcon = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-icon\", moreInfoContainer);\n        const letterI = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-info-icon\", moreInfoIcon);\n        letterI.innerHTML = \"i\";\n        const moreInfo = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-title\", moreInfoContainer);\n        moreInfo.innerHTML = \"How it works?\";\n        const resetButton = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-reset-button geofence-ctrl-button\", _polygonModeContainer);\n        resetButton.innerHTML = \"Reset\";\n        resetButton.addEventListener(\"click\", () => {\n            geofenceControl.resetGeofence();\n        });\n        // Add popup onClick\n        const popup = createPolygonModeInfoPopup(moreInfoIcon);\n        moreInfoContainer.addEventListener(\"click\", () => {\n            popup.classList.toggle(\"show\");\n        });\n    }\n    function createPolygonModeInfoPopup(container) {\n        const popupContainer = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-container\", container);\n        const popup = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup\", popupContainer);\n        createPopupStep(popup, \"Move dots to desired position\", createPopupStep1Icon());\n        createPopupStep(popup, \"Click on a border to create a dot\", createPopupStep2Icon());\n        createPopupStep(popup, \"Click into shape to move\", createPopupStep3Icon());\n        createPopupStep(popup, \"Press delete to remove a dot\", createPopupStep4Icon());\n        return popup;\n    }\n    function createPopupStep(container, text, image) {\n        const popupStep = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step\", container);\n        const popupStepImage = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-image\", popupStep);\n        popupStepImage.appendChild(image);\n        const popupStepText = createElement(\"div\", \"geofence-ctrl-create-polygon-mode-popup-step-text\", popupStep);\n        popupStepText.innerHTML = text;\n    }\n    function removeGeofenceCreateContainer() {\n        removeElement(_createContainer);\n        _createContainer = undefined;\n        _circleModeContainer = undefined;\n        _polygonModeContainer = undefined;\n    }\n    /************************************************************\n     * Geofence List\n     *************************************************************/\n    function createGeofenceListContainer() {\n        const geofenceListContainer = createElement(\"div\", \"geofence-ctrl-list-container\", geofenceControlContainer);\n        createGeofenceListHeader(geofenceListContainer);\n        _geofenceList = createElement(\"div\", \"geofence-ctrl-list\", geofenceListContainer);\n        _geofenceList.addEventListener(\"scroll\", () => {\n            const { scrollHeight, scrollTop, clientHeight } = _geofenceList;\n            if (scrollTop + clientHeight >= scrollHeight - 20) {\n                geofenceControl.loadMoreGeofences();\n            }\n        });\n    }\n    function createGeofenceListHeader(geofenceListContainer) {\n        const header = createElement(\"div\", \"geofence-ctrl-list-header\", geofenceListContainer);\n        _geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-header-title\", header);\n        _geofenceTitle.innerHTML = \"Geofences (0)\";\n        _checkBoxAllAndCreateContainer = createElement(\"div\", \"geofence-ctrl-list-header-checkbox-create-container\", header);\n        createCheckboxAllContainer(_checkBoxAllAndCreateContainer);\n    }\n    function createCheckboxAllContainer(geofenceListContainer) {\n        _checkBoxAllContainer = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-container\", geofenceListContainer);\n        _checkboxAll = createElement(\"input\", \"geofence-ctrl-list-checkbox-all\", _checkBoxAllContainer);\n        _checkboxAll.type = \"checkbox\";\n        _checkboxAll.addEventListener(\"click\", function () {\n            if (_checkboxAll.checked) {\n                geofenceControl.displayAllGeofences();\n                checkboxAllText.innerHTML = \"Deselect All\";\n            }\n            else {\n                geofenceControl.hideAllGeofences();\n                checkboxAllText.innerHTML = \"Select All\";\n            }\n        });\n        const checkboxAllText = createElement(\"div\", \"geofence-ctrl-list-checkbox-all-title\", _checkBoxAllContainer);\n        checkboxAllText.innerHTML = \"Select all\";\n        _addGeofencebutton = createElement(\"div\", \"geofence-ctrl-list-header-add-button\", _checkBoxAllContainer);\n        _addGeofencebutton.innerHTML = \"+ Add\";\n        _addGeofencebutton.addEventListener(\"click\", () => {\n            createAddGeofenceContainer();\n        });\n    }\n    function renderListItem(geofence) {\n        const container = createElement(\"li\", \"geofence-ctrl-list-item-container\", _geofenceList);\n        container.id = `list-item-${geofence.geofenceId}`;\n        const listItem = createElement(\"li\", \"geofence-ctrl-list-item\", container);\n        const leftContainer = createElement(\"div\", \"geofence-ctrl-list-item-left-container\", listItem);\n        const checkbox = createElement(\"input\", \"geofence-ctrl-list-item-checkbox\", leftContainer);\n        checkbox.id = `list-item-checkbox-${geofence.geofenceId}`;\n        checkbox.type = \"checkbox\";\n        checkbox.addEventListener(\"click\", function () {\n            if (checkbox.checked) {\n                geofenceControl.displayGeofence(geofence.geofenceId);\n                geofenceControl.fitGeofence(geofence.geofenceId);\n            }\n            else {\n                geofenceControl.hideGeofence(geofence.geofenceId);\n            }\n        });\n        const rightContainer = createElement(\"div\", \"geofence-ctrl-list-item-right-container\", listItem);\n        const geofenceTitleContainer = createElement(\"div\", \"geofence-ctrl-list-item-title-container\", rightContainer);\n        geofenceTitleContainer.addEventListener(\"mouseover\", function () {\n            geofenceControl.displayHighlightedGeofence(geofence.geofenceId);\n        });\n        geofenceTitleContainer.addEventListener(\"mouseout\", function () {\n            geofenceControl.hideHighlightedGeofence();\n        });\n        const geofenceTitle = createElement(\"div\", \"geofence-ctrl-list-item-title\", geofenceTitleContainer);\n        geofenceTitle.innerHTML = geofence.geofenceId;\n        const editButton = createElement(\"div\", \"geofence-ctrl-edit-button\", geofenceTitleContainer);\n        editButton.addEventListener(\"click\", function () {\n            geofenceControl.editGeofence(geofence.geofenceId);\n            createEditControls(listItem, rightContainer, leftContainer, geofence.geofenceId);\n            listItem.classList.remove(\"geofence-ctrl-list-item\");\n            listItem.classList.add(\"geofence-ctrl-list-selected-item\");\n        });\n        editButton.appendChild(createEditIcon());\n    }\n    function createEditControls(item, rightContainer, leftContainer, id) {\n        const editContainer = createElement(\"div\", \"geofence-ctrl-list-item-controls\", rightContainer);\n        const deleteButton = renderDeleteButton(leftContainer, id);\n        const removeEditContainer = () => {\n            item.classList.remove(\"geofence-ctrl-list-selected-item\");\n            item.classList.add(\"geofence-ctrl-list-item\");\n            removeElement(editContainer);\n            removeElement(deleteButton);\n        };\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-cancel-button\", editContainer);\n        cancelButton.classList.add(\"geofence-ctrl-button\");\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            geofenceControl.setEditingModeEnabled(false);\n            removeEditContainer();\n        });\n        const saveGeofenceButton = createElement(\"div\", \"geofence-ctrl-save-button geofence-ctrl-button\", editContainer);\n        saveGeofenceButton.addEventListener(\"click\", () => __awaiter(this, void 0, void 0, function* () {\n            yield geofenceControl.saveGeofence();\n            removeEditContainer();\n        }));\n        saveGeofenceButton.title = \"Save\";\n        saveGeofenceButton.innerHTML = \"Save\";\n    }\n    /************************************************************\n     * Add Geofence Controls\n     *************************************************************/\n    function removeAddGeofenceContainer() {\n        removeElement(_addGeofenceContainer);\n        clearAddGeofenceError();\n        showCheckboxAllContainer();\n    }\n    function clearAddGeofenceError() {\n        if (_errorDiv) {\n            removeElement(_errorDiv);\n            _errorDiv = undefined;\n        }\n    }\n    function createAddGeofenceContainer() {\n        hideCheckboxAllContainer();\n        _addGeofenceContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-container\", _checkBoxAllAndCreateContainer);\n        const addGeofencePrompt = createElement(\"div\", \"geofence-ctrl-add-geofence\", _addGeofenceContainer);\n        const nameInput = createElement(\"input\", \"geofence-ctrl-add-geofence-input\", addGeofencePrompt);\n        nameInput.placeholder = \"Enter name\";\n        const buttonContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-buttons\", addGeofencePrompt);\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-add-geofence-cancel-button geofence-ctrl-button \", buttonContainer);\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            removeAddGeofenceContainer();\n            geofenceControl.setEditingModeEnabled(false);\n        });\n        const saveButton = createElement(\"div\", \"geofence-ctrl-button geofence-ctrl-save-button\", buttonContainer);\n        saveButton.innerHTML = \"Save\";\n        saveButton.addEventListener(\"click\", function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                clearAddGeofenceError();\n                const output = yield geofenceControl.createGeofence(escape(nameInput.value));\n                if (output)\n                    removeAddGeofenceContainer();\n            });\n        });\n        geofenceControl.addEditableGeofence();\n    }\n    function createAddGeofencePromptError(error) {\n        if (_errorDiv) {\n            return;\n        }\n        _errorDiv = createElement(\"div\", \"geofence-ctrl-add-geofence-error\", _addGeofenceContainer);\n        const errorIconContainer = createElement(\"div\", \"geofence-ctrl-add-geofence-error-icon\", _errorDiv);\n        errorIconContainer.appendChild(createErrorIcon());\n        const errorText = createElement(\"div\", \"geofence-ctrl-add-geofence-error-text\", _errorDiv);\n        errorText.innerHTML = error;\n    }\n    /************************************************************\n     * Delete Controls\n     *************************************************************/\n    function renderDeleteButton(container, id) {\n        const deleteButton = createElement(\"div\", \"geofence-ctrl-delete-button\", container);\n        deleteButton.classList.add(\"geofence-ctrl-button\");\n        deleteButton.addEventListener(\"click\", function () {\n            createConfirmDeleteContainer(id);\n        });\n        deleteButton.appendChild(createTrashIcon());\n        return deleteButton;\n    }\n    function createConfirmDeleteContainer(geofenceId) {\n        _deleteGeofenceContainer = createElement(\"div\", \"geofence-ctrl-delete-prompt-container\", geofenceControlContainer);\n        const deleteGeofencePrompt = createElement(\"div\", \"geofence-ctrl-delete-prompt\", _deleteGeofenceContainer);\n        const title = createElement(\"div\", \"geofence-ctrl-delete-geofence-title\", deleteGeofencePrompt);\n        title.innerHTML = `Are you sure you want to delete <strong>${geofenceId}</strong>?`;\n        createDeleteButtonsContainer(deleteGeofencePrompt, geofenceId);\n    }\n    function createDeleteButtonsContainer(container, geofenceId) {\n        const deleteButtonsContainer = createElement(\"div\", \"geofence-ctrl-delete-geofence-buttons\", container);\n        const cancelButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-cancel-button\", deleteButtonsContainer);\n        cancelButton.innerHTML = \"Cancel\";\n        cancelButton.addEventListener(\"click\", () => {\n            removeElement(_deleteGeofenceContainer);\n        });\n        const confirmDeleteButton = createElement(\"div\", \"geofence-ctrl-delete-geofence-confirm-button\", deleteButtonsContainer);\n        confirmDeleteButton.innerHTML = \"Delete\";\n        confirmDeleteButton.addEventListener(\"click\", function () {\n            return __awaiter(this, void 0, void 0, function* () {\n                const id = yield geofenceControl.deleteGeofence(geofenceId);\n                if (id) {\n                    createDeleteResultContainer(true);\n                    removeElement(_deleteGeofenceContainer);\n                    geofenceControl.setEditingModeEnabled(false);\n                }\n            });\n        });\n    }\n    function createDeleteResultContainer(success) {\n        _deletePopdownContainer = createElement(\"div\", \"geofence-ctrl-delete-popdown-container\", geofenceControlContainer);\n        const deletePopdown = createElement(\"div\", \"geofence-ctrl-delete-popdown\", _deletePopdownContainer);\n        const deletePopdownCloseButton = createElement(\"div\", \"geofence-ctrl-delete-popdown-close-button\", _deletePopdownContainer);\n        deletePopdownCloseButton.appendChild(createCloseIcon());\n        deletePopdownCloseButton.addEventListener(\"click\", () => {\n            removeElement(_deletePopdownContainer);\n        });\n        const deleteSuccessIcon = createElement(\"div\", \"geofence-ctrl-delete-popdown-icon\", deletePopdown);\n        deleteSuccessIcon.appendChild(createDeleteSuccessIcon());\n        const deletePopdownText = createElement(\"div\", \"geofence-ctrl-delete-popdown-text\", deletePopdown);\n        deletePopdownText.innerHTML = success\n            ? \"Geofence was deleted successfully\"\n            : \"Geofence failed to delete\";\n    }\n    /************************************************************\n     * Utility Methods\n     *************************************************************/\n    function updateCheckbox(geofenceId, checked) {\n        const checkbox = document.getElementById(`list-item-checkbox-${geofenceId}`);\n        if (checkbox)\n            checkbox.checked = checked;\n    }\n    function removeGeofenceListItem(geofenceId) {\n        const listItem = document.getElementById(`list-item-${geofenceId}`);\n        removeElement(listItem);\n    }\n    function setGeofenceListEnabled(enabled) {\n        _checkboxAll.disabled = !enabled;\n        enabled\n            ? _addGeofencebutton.classList.remove(\"geofence-ctrl-noHover\")\n            : _addGeofencebutton.classList.add(\"geofence-ctrl-noHover\");\n        const inputs = document.getElementsByClassName(\"geofence-ctrl-list-item-checkbox\");\n        for (let i = 0; i < inputs.length; i++) {\n            inputs.item(i).disabled = !enabled;\n        }\n        const items = document.getElementsByClassName(\"geofence-ctrl-list-item-container\");\n        for (let i = 0; i < items.length; i++) {\n            enabled\n                ? items.item(i).classList.remove(\"geofence-ctrl-noHover\")\n                : items.item(i).classList.add(\"geofence-ctrl-noHover\");\n        }\n    }\n    function getCheckboxAllValue() {\n        return _checkboxAll.checked;\n    }\n    function updateGeofenceCount(count) {\n        _geofenceTitle.innerHTML = `Geofences (${count})`;\n    }\n    function updateGeofenceRadius(radius) {\n        if (_geofenceCreateRadiusInput)\n            _geofenceCreateRadiusInput.value = `${radius}`;\n    }\n    function hideCheckboxAllContainer() {\n        _checkBoxAllContainer.style.display = \"none\";\n    }\n    function showCheckboxAllContainer() {\n        _checkBoxAllContainer.style.display = \"flex\";\n    }\n    return {\n        registerControlPosition,\n        createElement,\n        removeElement,\n        createGeofenceCreateContainer,\n        createGeofenceListContainer,\n        removeAddGeofenceContainer,\n        createAddGeofencePromptError,\n        renderListItem,\n        updateCheckbox,\n        removeGeofenceListItem,\n        setGeofenceListEnabled,\n        getCheckboxAllValue,\n        removeGeofenceCreateContainer,\n        updateGeofenceCount,\n        updateGeofenceRadius,\n    };\n}\n", "const EDIT_ICON_PATH = \"M0.5 12.375V15.5H3.625L12.8417 6.28333L9.71667 3.15833L0.5 12.375ZM2.93333 13.8333H2.16667V13.0667L9.71667 5.51667L10.4833 6.28333L2.93333 13.8333ZM15.2583 2.69167L13.3083 0.741667C13.1417 0.575 12.9333 0.5 12.7167 0.5C12.5 0.5 12.2917 0.583333 12.1333 0.741667L10.6083 2.26667L13.7333 5.39167L15.2583 3.86667C15.5833 3.54167 15.5833 3.01667 15.2583 2.69167Z\";\nexport function createEditIcon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    const iconPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 16 16\");\n    customIcon.setAttribute(\"width\", \"16\");\n    customIcon.setAttribute(\"height\", \"16\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    iconPath.setAttribute(\"d\", EDIT_ICON_PATH);\n    iconPath.setAttribute(\"fill\", \"white\");\n    customIcon.appendChild(iconPath);\n    return customIcon;\n}\nconst TRASH_ICON_PATH = \"M9.33317 5.5V13.8333H2.6665V5.5H9.33317ZM8.08317 0.5H3.9165L3.08317 1.33333H0.166504V3H11.8332V1.33333H8.9165L8.08317 0.5ZM10.9998 3.83333H0.999837V13.8333C0.999837 14.75 1.74984 15.5 2.6665 15.5H9.33317C10.2498 15.5 10.9998 14.75 10.9998 13.8333V3.83333Z\";\nexport function createTrashIcon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    const iconPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 12 16\");\n    customIcon.setAttribute(\"width\", \"12\");\n    customIcon.setAttribute(\"height\", \"16\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    iconPath.setAttribute(\"d\", TRASH_ICON_PATH);\n    iconPath.setAttribute(\"fill\", \"white\");\n    customIcon.appendChild(iconPath);\n    return customIcon;\n}\nexport function createPopupStep1Icon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 38 38\");\n    customIcon.setAttribute(\"width\", \"38\");\n    customIcon.setAttribute(\"height\", \"38\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    const circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    circle.setAttribute(\"cx\", \"19\");\n    circle.setAttribute(\"cy\", \"18\");\n    circle.setAttribute(\"r\", \"8\");\n    circle.setAttribute(\"fill\", \"#FF9900\");\n    const path1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path1.setAttribute(\"d\", \"M19 0L23.3302 7.5H14.6699L19 0Z\");\n    path1.setAttribute(\"fill\", \"#003560\");\n    const path2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path2.setAttribute(\"d\", \"M19 36.5L14.6698 29H23.3301L19 36.5Z\");\n    path2.setAttribute(\"fill\", \"#003560\");\n    const path3 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path3.setAttribute(\"d\", \"M0 18.33L7.5 13.9999L7.5 22.6602L0 18.33Z\");\n    path3.setAttribute(\"fill\", \"#003560\");\n    const path4 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path4.setAttribute(\"d\", \"M37.5 18.3301L30 22.6603V14L37.5 18.3301Z\");\n    path4.setAttribute(\"fill\", \"#003560\");\n    customIcon.appendChild(circle);\n    customIcon.appendChild(path1);\n    customIcon.appendChild(path2);\n    customIcon.appendChild(path3);\n    customIcon.appendChild(path4);\n    return customIcon;\n}\nexport function createPopupStep2Icon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 42 27\");\n    customIcon.setAttribute(\"width\", \"42\");\n    customIcon.setAttribute(\"height\", \"27\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n    line.setAttribute(\"y1\", \"8\");\n    line.setAttribute(\"x2\", \"42\");\n    line.setAttribute(\"y2\", \"8\");\n    line.setAttribute(\"stroke\", \"black\");\n    line.setAttribute(\"stroke-width\", \"2\");\n    const circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n    circle.setAttribute(\"cx\", \"21\");\n    circle.setAttribute(\"cy\", \"8\");\n    circle.setAttribute(\"r\", \"8\");\n    circle.setAttribute(\"fill\", \"#FF9900\");\n    const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path.setAttribute(\"d\", \"M21 6.17822V22.488L24.6951 19.4356L27.172 26.1782L29.0399 25.3582L26.6035 18.57L31.4762 17.9322L21 6.17822Z\");\n    path.setAttribute(\"fill\", \"#003560\");\n    customIcon.appendChild(line);\n    customIcon.appendChild(circle);\n    customIcon.appendChild(path);\n    return customIcon;\n}\nexport function createPopupStep3Icon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 32 32\");\n    customIcon.setAttribute(\"width\", \"32\");\n    customIcon.setAttribute(\"height\", \"32\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"y\", \"1\");\n    rect.setAttribute(\"x\", \"1\");\n    rect.setAttribute(\"width\", \"30\");\n    rect.setAttribute(\"height\", \"30\");\n    rect.setAttribute(\"fill\", \"#2196F3\");\n    rect.setAttribute(\"fill-opacity\", \"0.4\");\n    rect.setAttribute(\"stroke\", \"#003560\");\n    rect.setAttribute(\"stroke-width\", \"2\");\n    const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path.setAttribute(\"d\", \"M11 6V22.3098L14.6951 19.2574L17.172 26L19.0399 25.18L16.6035 18.3918L21.4762 17.754L11 6Z\");\n    path.setAttribute(\"fill\", \"#003560\");\n    customIcon.appendChild(rect);\n    customIcon.appendChild(path);\n    return customIcon;\n}\nexport function createPopupStep4Icon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 64 20\");\n    customIcon.setAttribute(\"width\", \"64\");\n    customIcon.setAttribute(\"height\", \"20\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"y\", \"0.5\");\n    rect.setAttribute(\"x\", \"0.5\");\n    rect.setAttribute(\"width\", \"63\");\n    rect.setAttribute(\"height\", \"19\");\n    rect.setAttribute(\"rx\", \"3.5\");\n    rect.setAttribute(\"stroke\", \"#014478\");\n    const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path.setAttribute(\"d\", \"M14.4148 15C17.517 15 19.3118 13.076 19.3118 9.89418C19.3118 6.72727 17.517 4.81818 14.5192 4.81818H11.1186V15H14.4148ZM12.6548 13.6577V6.16051H14.4247C16.652 6.16051 17.8004 7.4929 17.8004 9.89418C17.8004 12.3054 16.652 13.6577 14.3303 13.6577H12.6548ZM24.394 15.1541C26.0595 15.1541 27.2377 14.3338 27.5758 13.0909L26.1689 12.8374C25.9004 13.5582 25.2541 13.9261 24.4089 13.9261C23.1362 13.9261 22.2811 13.1009 22.2413 11.6293H27.6703V11.1023C27.6703 8.34304 26.0197 7.2642 24.2896 7.2642C22.1618 7.2642 20.7598 8.88494 20.7598 11.2315C20.7598 13.603 22.1419 15.1541 24.394 15.1541ZM22.2463 10.5156C22.3059 9.43182 23.0914 8.49219 24.2995 8.49219C25.4529 8.49219 26.2086 9.3473 26.2136 10.5156H22.2463ZM30.8061 4.81818H29.3196V15H30.8061V4.81818ZM36.0971 15.1541C37.7626 15.1541 38.9409 14.3338 39.2789 13.0909L37.872 12.8374C37.6035 13.5582 36.9572 13.9261 36.112 13.9261C34.8393 13.9261 33.9842 13.1009 33.9444 11.6293H39.3734V11.1023C39.3734 8.34304 37.7228 7.2642 35.9927 7.2642C33.8649 7.2642 32.4629 8.88494 32.4629 11.2315C32.4629 13.603 33.845 15.1541 36.0971 15.1541ZM33.9494 10.5156C34.0091 9.43182 34.7946 8.49219 36.0027 8.49219C37.1561 8.49219 37.9118 9.3473 37.9167 10.5156H33.9494ZM44.5874 7.36364H43.0213V5.53409H41.5348V7.36364H40.4162V8.55682H41.5348V13.0661C41.5298 14.4531 42.5888 15.1243 43.7621 15.0994C44.2344 15.0945 44.5526 15.005 44.7266 14.9403L44.4581 13.7124C44.3587 13.7322 44.1747 13.777 43.9361 13.777C43.4538 13.777 43.0213 13.6179 43.0213 12.7578V8.55682H44.5874V7.36364ZM49.4409 15.1541C51.1064 15.1541 52.2846 14.3338 52.6227 13.0909L51.2157 12.8374C50.9473 13.5582 50.301 13.9261 49.4558 13.9261C48.1831 13.9261 47.3279 13.1009 47.2882 11.6293H52.7172V11.1023C52.7172 8.34304 51.0666 7.2642 49.3365 7.2642C47.2086 7.2642 45.8066 8.88494 45.8066 11.2315C45.8066 13.603 47.1887 15.1541 49.4409 15.1541ZM47.2931 10.5156C47.3528 9.43182 48.1383 8.49219 49.3464 8.49219C50.4998 8.49219 51.2555 9.3473 51.2605 10.5156H47.2931Z\");\n    path.setAttribute(\"fill\", \"black\");\n    customIcon.appendChild(rect);\n    customIcon.appendChild(path);\n    return customIcon;\n}\nexport function createDeleteSuccessIcon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 12 12\");\n    customIcon.setAttribute(\"width\", \"12\");\n    customIcon.setAttribute(\"height\", \"12\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path.setAttribute(\"d\", \"M6 0C2.688 0 0 2.688 0 6C0 9.312 2.688 12 6 12C9.312 12 12 9.312 12 6C12 2.688 9.312 0 6 0ZM6 10.8C3.354 10.8 1.2 8.646 1.2 6C1.2 3.354 3.354 1.2 6 1.2C8.646 1.2 10.8 3.354 10.8 6C10.8 8.646 8.646 10.8 6 10.8ZM8.754 3.348L4.8 7.302L3.246 5.754L2.4 6.6L4.8 9L9.6 4.2L8.754 3.348Z\");\n    path.setAttribute(\"fill\", \"white\");\n    customIcon.appendChild(path);\n    return customIcon;\n}\nexport function createCloseIcon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 12 12\");\n    customIcon.setAttribute(\"width\", \"12\");\n    customIcon.setAttribute(\"height\", \"12\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path.setAttribute(\"d\", \"M10.773 2.28762L9.71231 1.22696L6 4.93927L2.28769 1.22696L1.22703 2.28762L4.93934 5.99993L1.22703 9.71224L2.28769 10.7729L6 7.06059L9.71231 10.7729L10.773 9.71224L7.06066 5.99993L10.773 2.28762Z\");\n    path.setAttribute(\"fill\", \"white\");\n    path.setAttribute(\"fill-rule\", \"evenodd\");\n    path.setAttribute(\"clip-rule\", \"evenodd\");\n    customIcon.appendChild(path);\n    return customIcon;\n}\nexport function createErrorIcon() {\n    const customIcon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    customIcon.setAttribute(\"viewBox\", \"0 0 12 10\");\n    customIcon.setAttribute(\"width\", \"12\");\n    customIcon.setAttribute(\"height\", \"10\");\n    customIcon.setAttribute(\"fill\", \"none\");\n    const path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path.setAttribute(\"d\", \"M0 10H11.5789L5.78947 0L0 10ZM6.31579 8.42105H5.26316V7.36842H6.31579V8.42105ZM6.31579 6.31579H5.26316V4.21053H6.31579V6.31579Z\");\n    path.setAttribute(\"fill\", \"#FF5050\");\n    customIcon.appendChild(path);\n    return customIcon;\n}\n", "import MapboxDraw from \"@mapbox/mapbox-gl-draw\";\nimport { CircleMode, SimpleSelectMode, DirectMode, } from \"maplibre-gl-draw-circle\";\nimport { getPolygonFeatureFromBounds, getCircleFeatureFromCoords, } from \"../geofenceUtils\";\nimport { GEOFENCE_BORDER_COLOR, GEOFENCE_COLOR, GEOFENCE_VERTEX_COLOR, } from \"../constants\";\nexport class AmplifyMapDraw {\n    constructor(map, ui) {\n        this._mapBoxDraw = new MapboxDraw({\n            displayControlsDefault: false,\n            defaultMode: \"simple_select\",\n            userProperties: true,\n            controls: {\n                trash: true,\n            },\n            modes: Object.assign(Object.assign({}, MapboxDraw.modes), { draw_circle: CircleMode, direct_select: DirectMode, simple_select: SimpleSelectMode }),\n            styles: [\n                // ACTIVE (being drawn)\n                // polygon fill\n                {\n                    id: \"gl-draw-polygon-fill\",\n                    type: \"fill\",\n                    filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n                    paint: {\n                        \"fill-color\": GEOFENCE_COLOR,\n                        \"fill-outline-color\": GEOFENCE_COLOR,\n                        \"fill-opacity\": 0.3,\n                    },\n                },\n                // polygon mid points\n                {\n                    id: \"gl-draw-polygon-midpoint\",\n                    type: \"circle\",\n                    filter: [\"all\", [\"==\", \"$type\", \"Point\"], [\"==\", \"meta\", \"midpoint\"]],\n                    paint: {\n                        \"circle-radius\": 5,\n                        \"circle-color\": GEOFENCE_VERTEX_COLOR,\n                    },\n                },\n                // polygon border\n                {\n                    id: \"gl-draw-polygon-stroke-active\",\n                    type: \"line\",\n                    filter: [\"all\", [\"==\", \"$type\", \"Polygon\"], [\"!=\", \"mode\", \"static\"]],\n                    layout: {\n                        \"line-cap\": \"round\",\n                        \"line-join\": \"round\",\n                    },\n                    paint: {\n                        \"line-color\": GEOFENCE_BORDER_COLOR,\n                        \"line-width\": 4,\n                    },\n                },\n                // vertex circle\n                {\n                    id: \"gl-draw-polygon-and-line-vertex-active\",\n                    type: \"circle\",\n                    filter: [\n                        \"all\",\n                        [\"==\", \"meta\", \"vertex\"],\n                        [\"==\", \"$type\", \"Point\"],\n                        [\"!=\", \"mode\", \"static\"],\n                    ],\n                    paint: {\n                        \"circle-radius\": 8,\n                        \"circle-color\": GEOFENCE_VERTEX_COLOR,\n                        \"circle-stroke-color\": GEOFENCE_BORDER_COLOR,\n                        \"circle-stroke-width\": 1,\n                    },\n                },\n            ],\n        });\n        this._map = map;\n        this._ui = ui;\n        this.enable = this.enable.bind(this);\n        this.disable = this.disable.bind(this);\n        this.drawPolygonGeofence = this.drawPolygonGeofence.bind(this);\n    }\n    get(id) {\n        return this._mapBoxDraw.get(id);\n    }\n    add(data) {\n        const isCircle = data.properties.isCircle;\n        this.enable(isCircle);\n        this._mapBoxDraw.add(data);\n        this._mapBoxDraw.changeMode(\"direct_select\", {\n            featureId: data.id,\n        });\n    }\n    delete(id) {\n        this._mapBoxDraw.delete(id);\n    }\n    disable() {\n        if (this._map.hasControl(this._mapBoxDraw)) {\n            this._map.removeControl(this._mapBoxDraw);\n        }\n        this._ui.removeGeofenceCreateContainer();\n    }\n    enable(isCircle) {\n        if (this._map.hasControl(this._mapBoxDraw)) {\n            return;\n        }\n        this._map.addControl(this._mapBoxDraw, \"bottom-right\");\n        this._ui.createGeofenceCreateContainer(isCircle);\n    }\n    /**\n     * Draws a polygonal geofence around the center of the current map view. The polygon defaults to 3/4 the size of the current map bounds\n     * @param id the geofence geojson id\n     */\n    drawPolygonGeofence(id) {\n        const mapBounds = this._map.getBounds();\n        const feature = getPolygonFeatureFromBounds(id, mapBounds);\n        this.add(feature);\n    }\n    /**\n     * Draws a cicular geofence around the center of the current map view\n     * @param id the geofence geojson id\n     * @param radius optional parameter for setting the radius of the cicular geofence, default to 1/8th of the current map bounds length\n     */\n    drawCircularGeofence(id, radius) {\n        const mapBounds = this._map.getBounds();\n        const circleFeature = getCircleFeatureFromCoords(id, this._map.getCenter().toArray(), { bounds: mapBounds, radius });\n        this.add(circleFeature);\n        this._ui.updateGeofenceRadius(radius || circleFeature.properties.radius.toFixed(2));\n    }\n}\n"],
  "mappings": "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",
  "names": ["arr", "e", "self", "debounce", "isObject", "result", "pattern", "debounce", "MaplibreGeocoder", "container", "e", "self", "config", "feature", "debounce", "const", "ModeHandler", "mode", "DrawContext", "handlers", "drag", "click", "mousemove", "mousedown", "mouseup", "mouseout", "keydown", "keyup", "touchstart", "touchmove", "touchend", "tap", "ctx", "on", "event", "selector", "fn", "Error", "push", "render", "id", "store", "featureChanged", "delegate", "eventName", "handles", "iHandle", "length", "handle", "call", "ui", "updateMapClasses", "start", "stop", "trash", "combineFeatures", "uncombineFeatures", "polygonArea", "coords", "area", "Math", "abs", "ringArea", "i", "p1", "p2", "lowerIndex", "middleIndex", "upperIndex", "coordsLength", "rad", "sin", "wgs84", "_", "PI", "geometry", "type", "coordinates", "geometries", "classes", "sources", "cursors", "types", "POLYGON", "LINE", "POINT", "geojsonTypes", "modes", "DRAW_LINE_STRING", "DRAW_POLYGON", "DRAW_POINT", "SIMPLE_SELECT", "DIRECT_SELECT", "STATIC", "events", "updateActions", "meta", "activeStates", "interactions", "FEATURE_SORT_RANKS", "Point", "LineString", "Polygon", "comparator", "a", "b", "score", "Constants.geojsonTypes", "StringSet", "items", "this", "_items", "_nums", "_length", "l", "add", "prototype", "x", "has", "delete", "values", "t", "Object", "keys", "forEach", "k", "v", "JSON", "parse", "sort", "map", "clear", "META_TYPES", "Constants.meta", "bbox", "featuresAt", "options", "clickBuffer", "touch", "touchBuffer", "buffer", "box", "mapEvent", "e", "point", "y", "queryParams", "styles", "layers", "s", "features", "queryRenderedFeatures", "filter", "feature", "indexOf", "properties", "featureIds", "uniqueFeatures", "featureId", "property", "getFeatureAtAndSetCursors", "mouse", "Constants.cursors", "active", "Constants.activeStates", "currentModeName", "queueMapClasses", "sqrt", "isClick", "end", "fineTolerance", "grossTolerance", "interval", "time", "moveDistance", "euclideanDistance", "isTap", "tolerance", "hat", "module", "bits", "base", "digits", "log", "pow", "Infinity", "rem", "floor", "res", "random", "toString", "parsed", "parseInt", "rack", "expandBy", "data", "iters", "hasOwnProperty", "hats", "get", "set", "value", "Feature", "geojson", "changed", "incomingCoords", "setCoordinates", "getCoordinates", "stringify", "setProperty", "toGeoJSON", "internal", "meta:type", "userProperties", "name", "create", "isValid", "updateCoordinate", "pathOrLng", "lngOrLat", "lat", "arguments", "getCoordinate", "addCoordinate", "path", "lng", "splice", "removeCoordinate", "ring", "slice", "every", "ids", "split", "concat", "parts", "ringId", "coordId", "models", "MultiPoint", "MultiLineString", "MultiPolygon", "takeAction", "action", "idx", "tail", "join", "MultiFeature", "model", "TypeError", "_coordinatesToFeatures", "ModeInterface", "drawConfig", "_ctx", "Model", "bind", "replace", "f", "getFeatures", "setSelected", "setSelectedCoordinates", "reduce", "m", "c", "feature_id", "getSelected", "getSelectedIds", "isSelected", "getFeature", "select", "deselect", "deleteFeature", "opts", "addFeature", "clearSelectedFeatures", "clearSelected", "clearSelectedCoordinates", "setActionableState", "actions", "newSet", "actionable", "changeMode", "eventOpts", "n", "updateUIClasses", "activateUIButton", "setActiveButton", "bufferType", "newFeature", "isInstanceOf", "doRender", "onSetup", "onDrag", "onClick", "onMouseMove", "onMouseDown", "onMouseUp", "onMouseOut", "onKeyUp", "onKeyDown", "onTouchStart", "onTouchMove", "onTouchEnd", "onTap", "onStop", "onTrash", "onCombineFeature", "onUncombineFeature", "toDisplayFeatures", "eventMapper", "eventKeys", "modeObject", "modeObjectKeys", "startOpts", "let", "state", "key", "eh", "modeHandler", "onCombineFeatures", "onUncombineFeatures", "toDenseArray", "getSource", "Constants.sources", "cleanup", "newHotIds", "newColdIds", "isDirty", "getAllIds", "getChangedIds", "hot", "lastColdCount", "cold", "parent", "coldChanged", "renderFeature", "source", "featureInternal", "currentModeRender", "setData", "_emitSelectionChange", "fire", "Constants.events", "points", "getSelectedCoordinates", "coordinate", "_deletedFeaturesToEmit", "geojsonToEmit", "clearChangedIds", "Store", "renderRequest", "_features", "_featureIds", "_selectedFeatureIds", "_selectedCoordinates", "_changedFeatureIds", "_mapInitialConfig", "requestAnimationFrame", "refreshSelectedCoordinates", "newSelectedCoordinates", "silent", "createRenderBatch", "holdRender", "numRenders", "setDirty", "getAll", "coord_path", "setFeatureProperty", "storeMapConfig", "interaction", "isEnabled", "restoreMapConfig", "enable", "disable", "getInitialConfigValue", "target", "classTypes", "controlContainer", "mapLoadedInterval", "setup", "onRemove", "off", "connect", "clearInterval", "removeLayers", "removeButtons", "removeEventListeners", "clearMapClasses", "container", "parentNode", "removeChild", "addLayers", "addEventListeners", "onAdd", "_fire", "args", "xtend", "apply", "objectToMode", "mouseDownInfo", "touchStartInfo", "currentMode", "isDrag", "Date", "getTime", "originalEvent", "stopPropagation", "mousedrag", "endInfo", "touchdrag", "buttons", "which", "getFeaturesAndSetCursor", "featureTarget", "preventDefault", "touchEnabled", "isKeyModeValid", "code", "modename", "nextModeOptions", "eventOptions", "modebuilder", "setupModeHandler", "srcElement", "classList", "keyCode", "controls", "Constants.modes", "line_string", "polygon", "zoomend", "changeZoom", "dataType", "o", "r", "some", "style", "getLayer", "actionState", "defaultMode", "addEventListener", "keybindings", "removeEventListener", "getMode", "buttonElements", "activeButton", "currentMapClasses", "nextMapClasses", "classesToRemove", "classesToAdd", "remove", "createControlButton", "button", "document", "createElement", "className", "setAttribute", "title", "appendChild", "deactivateButtons", "onDeactivate", "onActivate", "Constants.classes", "controlGroup", "Constants.types", "combine_features", "uncombine_features", "buttonId", "getContainer", "addButtons", "boxSelect", "boxZoom", "dragPan", "loaded", "setInterval", "addSource", "addLayer", "removeLayer", "removeSource", "isOfMetaType", "isActiveFeature", "isInactiveFeature", "noTarget", "isVertex", "isShiftDown", "shiftKey", "isEscapeKey", "isEnterKey", "mouseEventPoint", "mouseEvent", "rect", "getBoundingClientRect", "clientX", "left", "clientLeft", "clientY", "top", "clientTop", "parentId", "selected", "createSupplementaryPoints", "basePath", "subType", "supplementaryPoints", "processLine", "line", "lineBasePath", "firstPointString", "lastVertex", "pointIndex", "pointPath", "String", "vertex", "createVertex", "isSelectedPath", "midpoints", "midpoint", "startVertex", "endVertex", "startCoord", "endCoord", "mid", "stringifiedPoint", "selectedPaths", "lineIndex", "subCoordinates", "index", "subFeature", "clone", "p", "_add", "sub", "_sub", "multByPoint", "_multByPoint", "divByPoint", "_divByPoint", "mult", "_mult", "div", "_div", "rotate", "_rotate", "rotateAround", "_rotateAround", "matMult", "_matMult", "unit", "_unit", "perp", "_perp", "round", "_round", "mag", "equals", "other", "dist", "distSqr", "dx", "dy", "angle", "atan2", "angleTo", "angleWith", "angleWithSep", "cos", "convert", "Array", "isArray", "setTimeout", "doubleClickZoom", "gj", "GeometryCollection", "FeatureCollection", "normalized", "geojsonFlatten", "geojsonNormalize", "_flatten", "list", "acc", "item", "traverse", "obj", "Traverse", "walk", "root", "cb", "immutable", "parents", "alive", "walker", "node_", "node", "copy", "modifiers", "keepGoing", "isRoot", "level", "circular", "update", "stopHere", "before", "after", "pre", "post", "block", "updateState", "objectKeys", "isLeaf", "notLeaf", "notRoot", "ret", "child", "isLast", "isFirst", "pop", "src", "dst", "toS", "RegExp", "message", "Boolean", "Number", "getPrototypeOf", "constructor", "proto", "__proto__", "T", "ps", "init", "skip", "paths", "nodes", "xs", "Extent", "_bbox", "_valid", "include", "ll", "min", "max", "center", "union", "contains", "_fastContains", "lon", "intersect", "Function", "body", "geojsonTypesByDataAttributes", "dataAttributes", "getExtent", "ext", "extent", "geojsonCoords", "attribute", "geojsonFeatures", "delta", "northInnerEdge", "southInnerEdge", "northOuterEdge", "southOuterEdge", "westEdge", "eastEdge", "bounds", "featureSouthEdge", "featureNorthEdge", "featureWestEdge", "featureEastEdge", "constrainedDelta", "ceil", "constrainFeatureMovement", "nextCoordinates", "currentCoordinates", "moveCoordinate", "coord", "moveRing", "multi", "SimpleSelect", "dragMoveLocation", "boxSelectStartLocation", "boxSelectElement", "boxSelecting", "canBoxSelect", "dragMoving", "canDragMove", "initiallySelectedFeatureIds", "fireActionable", "fireUpdate", "Constants.updateActions", "selectedFeatures", "multiFeatures", "featureType", "getUniqueIds", "allFeatures", "memo", "stopExtendedInteractions", "CommonSelectors.noTarget", "clickAnywhere", "CommonSelectors.isOfMetaType", "clickOnVertex", "clickOnFeature", "wasSelected", "coordPath", "startPos", "lngLat", "startOnActiveFeature", "isShiftClick", "CommonSelectors.isShiftDown", "selectedFeatureIds", "isFeatureSelected", "CommonSelectors.isActiveFeature", "startBoxSelect", "dragMove", "whileBoxSelect", "current", "minX", "maxX", "minY", "maxY", "translateValue", "transform", "WebkitTransform", "width", "height", "moveFeatures", "featuresInBox", "idsToSelect", "display", "featuresCombined", "includes", "subcoords", "multiFeature", "createdFeatures", "deletedFeatures", "featuresUncombined", "isMidpoint", "DirectSelect", "selectedCoordPaths", "startDragging", "stopDragging", "onVertex", "about", "selectedIndex", "selectedCoordinates", "pathsToCoordinates", "onMidpoint", "onFeature", "dragFeature", "dragVertex", "selectedCoords", "clickNoTarget", "clickInactive", "clickActiveFeature", "localeCompare", "numeric", "isFeature", "noCoords", "DrawPoint", "isEventAtCoordinates", "stopDrawingAndRemove", "isActivePoint", "CommonSelectors.isEscapeKey", "CommonSelectors.isEnterKey", "DrawPolygon", "currentVertexPosition", "CommonSelectors.isVertex", "isActivePolygon", "coordinateCount", "endPos", "lineCoordinates", "DrawLineString", "direction", "from", "lastCoord", "isActiveLine", "simple_select", "direct_select", "draw_point", "draw_polygon", "draw_line_string", "defaultOptions", "displayControlsDefault", "paint", "fill-color", "fill-outline-color", "fill-opacity", "circle-radius", "circle-color", "layout", "line-cap", "line-join", "line-color", "line-width", "line-dasharray", "circle-opacity", "showControls", "hideControls", "addSources", "sourceBucket", "argsTag", "mapTag", "objectTag", "setTag", "reIsHostCtor", "reIsUint", "typedArrayTags", "freeGlobal", "global", "freeSelf", "self", "freeExports", "exports", "nodeType", "freeModule", "moduleExports", "freeProcess", "process", "nodeUtil", "binding", "nodeIsTypedArray", "isTypedArray", "arraySome", "array", "predicate", "mapToArray", "result", "size", "setToArray", "uid", "func", "arrayProto", "funcProto", "objectProto", "coreJsData", "funcToString", "maskSrcKey", "exec", "IE_PROTO", "nativeObjectToString", "reIsNative", "Buffer", "Symbol", "Uint8Array", "propertyIsEnumerable", "symToStringTag", "toStringTag", "nativeGetSymbols", "getOwnPropertySymbols", "nativeIsBuffer", "isBuffer", "nativeKeys", "arg", "DataView", "getNative", "Map", "Promise", "Set", "WeakMap", "nativeCreate", "dataViewCtorString", "toSource", "mapCtorString", "promiseCtorString", "setCtorString", "weakMapCtorString", "symbolProto", "symbolValueOf", "valueOf", "Hash", "entries", "entry", "ListCache", "MapCache", "SetCache", "__data__", "Stack", "arrayLikeKeys", "inherited", "isArr", "isArg", "isArguments", "isBuff", "isType", "skipIndexes", "iteratee", "isIndex", "assocIndexOf", "eq", "baseGetTag", "isOwn", "tag", "unmasked", "baseIsArguments", "isObjectLike", "baseIsEqual", "bitmask", "customizer", "stack", "object", "equalFunc", "objIsArr", "othIsArr", "objTag", "getTag", "othTag", "objIsObj", "othIsObj", "isSameTag", "equalArrays", "byteLength", "byteOffset", "isPartial", "stacked", "objIsWrapped", "othIsWrapped", "objUnwrapped", "othUnwrapped", "objProps", "getAllKeys", "objLength", "othLength", "skipCtor", "objValue", "othValue", "compared", "objCtor", "othCtor", "baseIsNative", "isObject", "isFunction", "test", "baseKeys", "Ctor", "arrLength", "seen", "arrValue", "othIndex", "keysFunc", "symbolsFunc", "offset", "getSymbols", "getMapData", "undefined", "hash", "string", "pairs", "LARGE_ARRAY_SIZE", "resIndex", "symbol", "ArrayBuffer", "resolve", "ctorString", "isLength", "featureTypes", "api", "getFeatureIdsAt", "getSelectedPoints", "featureCollection", "renderBatch", "toDelete", "newIds", "newIdsLookup", "normalize", "internalFeature", "isEqual", "deleteAll", "modeOptions", "setupDraw", "withDefaults", "setupAPI", "runSetup", "MapboxDraw", "feature", "point", "lineString", "polygon", "radiansToLength", "lengthToRadians", "distance", "radiansToDegrees", "bearing", "degreesToRadians", "length", "isObject", "require_js", "getCoord", "feature", "_a", "getGeom", "require_js", "destination", "distance", "bearing", "require_js", "circle", "MapboxDraw", "circle", "CircleMode", "polygon", "e", "require_js", "distance", "MapboxDraw", "circle", "distance", "polygon", "e", "point", "gj", "type", "features", "reduce", "mem", "feature", "concat", "flatten", "geometry", "map", "geom", "data", "properties", "JSON", "parse", "stringify", "id", "coordinates", "_", "geometries", "memo", "geoms", "list", "feature", "isArray", "feature", "feature", "point", "MapboxDraw", "distance", "circle", "e", "feature", "MapboxDraw", "e", "feature", "circle", "CircleMode", "DirectMode", "SimpleSelectMode", "point", "e", "MaplibreMap", "MAP_STYLES", "e", "paintOptions", "import_maplibre_gl", "__rest", "e", "_a", "_a", "feature", "data", "features", "import_maplibre_gl", "__awaiter", "e", "__rest", "MaplibreGeocoder", "maplibregl", "distance", "bearing", "distance", "es_default", "feature", "polygon", "es_default", "_a", "data", "import_maplibre_gl", "circle", "__awaiter", "e", "MapboxDraw", "feature", "__awaiter", "e", "maplibregl", "feature"]
}
